<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">Semantic relatedness is a very important factor for the coreference resolution task.</S>
		<S sid ="2" ssid = "2">To obtain this semantic information, corpus- based approaches commonly leverage patterns that can express a specific semantic relation.</S>
		<S sid ="3" ssid = "3">The patterns, however, are designed manually and thus are not necessarily the most effective ones in terms of accuracy and breadth.</S>
		<S sid ="4" ssid = "4">To deal with this problem, in this paper we propose an approach that can automatically find the effective patterns for coreference resolution.</S>
		<S sid ="5" ssid = "5">We explore how to automatically discover and evaluate patterns, and how to exploit the patterns to obtain the semantic relatedness information.</S>
		<S sid ="6" ssid = "6">The evaluation on ACE data set shows that the pattern based semantic information is helpful for coreference resolution.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Semantic relatedness is a very important factor for coreference resolution, as noun phrases used to refer to the same entity should have a certain semantic relation.</S>
			<S sid ="8" ssid = "8">To obtain this semantic information, previous work on reference resolution usually leverages a semantic lexicon like WordNet (Vieira and Poesio, 2000; Harabagiu et al., 2001; Soon et al., 2001; Ng and Cardie, 2002).</S>
			<S sid ="9" ssid = "9">However, the drawback of WordNet is that many expressions (especially for proper names), word senses and semantic relations are not available from the database (Vieira and Poesio, 2000).</S>
			<S sid ="10" ssid = "10">In recent years, increasing interest has 528 been seen in mining semantic relations from large text corpora.</S>
			<S sid ="11" ssid = "11">One common solution is to utilize a pattern that can represent a specific semantic relation (e.g., “X such as Y ” for is-a relation, and “X and other Y ” for other-relation).</S>
			<S sid ="12" ssid = "12">Instantiated with two given noun phrases, the pattern is searched in a large corpus and the occurrence number is used as a measure of their semantic relatedness (Markert et al., 2003; Modjeska et al., 2003; Poesio et al., 2004).</S>
			<S sid ="13" ssid = "13">However, in the previous pattern based approaches, the selection of the patterns to represent a specific semantic relation is done in an ad hoc way, usually by linguistic intuition.</S>
			<S sid ="14" ssid = "14">The manually selected patterns, nevertheless, are not necessarily the most effective ones for coreference resolution from the following two concerns: • Accuracy.</S>
			<S sid ="15" ssid = "15">Can the patterns (e.g., “X such as Y ”) find as many NP pairs of the specific semantic relation (e.g. is-a) as possible, with a high precision?</S>
			<S sid ="16" ssid = "16">• Breadth.</S>
			<S sid ="17" ssid = "17">Can the patterns cover a wide variety of semantic relations, not just is-a, by which coreference relationship is realized?</S>
			<S sid ="18" ssid = "18">For example, in some annotation schemes like ACE, “Beijing:China” are coreferential as the capital and the country could be used to represent the government.</S>
			<S sid ="19" ssid = "19">The pattern for the common “is- a” relation will fail to identify the NP pairs of such a “capital-country” relation.</S>
			<S sid ="20" ssid = "20">To deal with this problem, in this paper we propose an approach which can automatically discover effective patterns to represent the semantic relations Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 528–535, Prague, Czech Republic, June 2007.</S>
			<S sid ="21" ssid = "21">Qc 2007 Association for Computational Linguistics for coreference resolution.</S>
			<S sid ="22" ssid = "22">We explore two issues in our study: (1) How to automatically acquire and evaluate the patterns?</S>
			<S sid ="23" ssid = "23">We utilize a set of coreferential NP pairs as seeds.</S>
			<S sid ="24" ssid = "24">For each seed pair, we search a large corpus for the texts where the two noun phrases co- occur, and collect the surrounding words as the surface patterns.</S>
			<S sid ="25" ssid = "25">We evaluate a pattern based on its commonality or association with the positive seed pairs.</S>
			<S sid ="26" ssid = "26">(2) How to mine the patterns to obtain the semantic relatedness information for coreference resolution?</S>
			<S sid ="27" ssid = "27">We present two strategies to exploit the patterns: choosing the top best patterns as a set of pattern features, or computing the reliability of semantic relatedness as a single feature.</S>
			<S sid ="28" ssid = "28">In either strategy, the obtained features are applied to do coreference resolution in a supervised-learning way.</S>
			<S sid ="29" ssid = "29">To our knowledge, our work is the first effort that systematically explores these issues in the coreference resolution task.</S>
			<S sid ="30" ssid = "30">We evaluate our approach on ACE data set.</S>
			<S sid ="31" ssid = "31">The experimental results show that the pattern based semantic relatedness information is helpful for the coreference resolution.</S>
			<S sid ="32" ssid = "32">The remainder of the paper is organized as follows.</S>
			<S sid ="33" ssid = "33">Section 2 gives some related work.</S>
			<S sid ="34" ssid = "34">Section 3 introduces the framework for coreference resolution.</S>
			<S sid ="35" ssid = "35">Section 4 presents the model to obtain the pattern- based semantic relatedness information.</S>
			<S sid ="36" ssid = "36">Section 5 discusses the experimental results.</S>
			<S sid ="37" ssid = "37">Finally, Section 6 summarizes the conclusions.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "2">
			<S sid ="38" ssid = "1">Earlier work on coreference resolution commonly relies on semantic lexicons for semantic relatedness knowledge.</S>
			<S sid ="39" ssid = "2">In the system by Vieira and Poesio (2000), for example, WordNet is consulted to obtain the synonymy, hypernymy and meronymy relations for resolving the definite anaphora.</S>
			<S sid ="40" ssid = "3">In (Harabagiu et al., 2001), the path patterns in WordNet are utilized to compute the semantic consistency between NPs.</S>
			<S sid ="41" ssid = "4">Recently, Ponzetto and Strube (2006) suggest to mine semantic relatedness from Wikipedia, which can deal with the data sparseness problem suffered by using WordNet.</S>
			<S sid ="42" ssid = "5">Instead of leveraging existing lexicons, many researchers have investigated corpus-based ap proaches to mine semantic relations.</S>
			<S sid ="43" ssid = "6">Garera and Yarowsky (2006) propose an unsupervised model which extracts hypernym relation for resloving definite NPs.</S>
			<S sid ="44" ssid = "7">Their model assumes that a definite NP and its hypernym words usually co-occur in texts.</S>
			<S sid ="45" ssid = "8">Thus, for a definite-NP anaphor, a preceding NP that has a high co-occurrence statistics in a large corpus is preferred for the antecedent.</S>
			<S sid ="46" ssid = "9">Bean and Riloff (2004) present a system called BABAR that uses contextual role knowledge to do coreference resolution.</S>
			<S sid ="47" ssid = "10">They apply an IE component to unannotated texts to generate a set of extraction caseframes.</S>
			<S sid ="48" ssid = "11">Each caseframe represents a linguistic expression and a syntactic position, e.g. “murder of &lt;NP&gt;”, “killed &lt;patient&gt;”.</S>
			<S sid ="49" ssid = "12">From the case- frames, they derive different types of contextual role knowledge for resolution, for example, whether an anaphor and an antecedent candidate can be filled into co-occurring caseframes, or whether they are substitutable for each other in their caseframes.</S>
			<S sid ="50" ssid = "13">Different from their system, our approach aims to find surface patterns that can directly indicate the coreference relation between two NPs.</S>
			<S sid ="51" ssid = "14">Hearst (1998) presents a method to automate the discovery of WordNet relations, by searching for the corresponding patterns in large text corpora.</S>
			<S sid ="52" ssid = "15">She explores several patterns for the hyponymy relation, including “X such as Y ” “X and/or other Y ”, “X including / especially Y ” and so on.</S>
			<S sid ="53" ssid = "16">The use of Hearst’s style patterns can be seen for the reference resolution task.</S>
			<S sid ="54" ssid = "17">Modjeska et al.</S>
			<S sid ="55" ssid = "18">(2003) explore the use of the Web to do the other-anaphora resolution.</S>
			<S sid ="56" ssid = "19">In their approach, a pattern “X and other Y ” is used.</S>
			<S sid ="57" ssid = "20">Given an anaphor and a candidate antecedent, the pattern is instantiated with the two NPs and forms a query.</S>
			<S sid ="58" ssid = "21">The query is submitted to the Google searching engine, and the returned hit number is utilized to compute the semantic relatedness between the two NPs.</S>
			<S sid ="59" ssid = "22">In their work, the semantic information is used as a feature for the learner.</S>
			<S sid ="60" ssid = "23">Markert et al.</S>
			<S sid ="61" ssid = "24">(2003) and Poesio et al.</S>
			<S sid ="62" ssid = "25">(2004) adopt a similar strategy for the bridging anaphora resolution.</S>
			<S sid ="63" ssid = "26">In (Hearst, 1998), the author also proposes to discover new patterns instead of using the manually designed ones.</S>
			<S sid ="64" ssid = "27">She employs a bootstrapping algorithm to learn new patterns from the word pairs with a known relation.</S>
			<S sid ="65" ssid = "28">Based on Hearst’s work, Pan- tel and Pennacchiotti (2006) further give a method which measures the reliability of the patterns based on the strength of association between patterns and instances, employing the pointwise mutual information (PMI).</S>
	</SECTION>
	<SECTION title="Framework of Coreference Resolution. " number = "3">
			<S sid ="66" ssid = "1">Our coreference resolution system adopts the common learning-based framework as employed by Soon et al.</S>
			<S sid ="67" ssid = "2">(2001) and Ng and Cardie (2002).</S>
			<S sid ="68" ssid = "3">In the learning framework, a training or testing instance has the form of i{N Pi, N Pj }, in which N Pj is a possible anaphor and N Pi is one of its antecedent candidates.</S>
			<S sid ="69" ssid = "4">An instance is associated with a vector of features, which is used to describe the properties of the two noun phrases as well as their relationships.</S>
			<S sid ="70" ssid = "5">In our baseline system, we adopt the common features for coreference resolution such as lexical property, distance, string-matching, name- alias, apposition, grammatical role, number/gender agreement and so on.</S>
			<S sid ="71" ssid = "6">The same feature set is described in (Ng and Cardie, 2002) for reference.</S>
			<S sid ="72" ssid = "7">During training, for each encountered anaphor N Pj , one single positive training instance is created for its closest antecedent.</S>
			<S sid ="73" ssid = "8">And a group of negative training instances is created for every intervening noun phrases between N Pj and the antecedent.</S>
			<S sid ="74" ssid = "9">Based on the training instances, a binary classifier can be generated using any discriminative learning algorithm, like C5 in our study.</S>
			<S sid ="75" ssid = "10">For resolution, an input document is processed from the first NP to the last.</S>
			<S sid ="76" ssid = "11">For each encountered N Pj , a test instance is formed for each antecedent candidate, N Pi1.</S>
			<S sid ="77" ssid = "12">This instance is presented to the classifier to determine the coreference relationship.</S>
			<S sid ="78" ssid = "13">N Pj will be resolved to the candidate that is classified as positive (if any) and has the highest confidence value.</S>
			<S sid ="79" ssid = "14">In our study, we augment the common framework by incorporating non-anaphors into training.</S>
			<S sid ="80" ssid = "15">We focus on the non-anaphors that the original classifier fails to identify.</S>
			<S sid ="81" ssid = "16">Specifically, we apply the learned classifier to all the non-anaphors in the training documents.</S>
			<S sid ="82" ssid = "17">For each non-anaphor that is classified as positive, a negative instance is created by pairing the non-anaphor and its false antecedent.</S>
			<S sid ="83" ssid = "18">These neg 1 For resolution of pronouns, only the preceding NPs in current and previous two sentences are considered as antecedent candidates.</S>
			<S sid ="84" ssid = "19">For resolution of non-pronouns, all the preceding non-pronouns are considered.</S>
			<S sid ="85" ssid = "20">ative instances are added into the original training instance set for learning, which will generate a classifier with the capability of not only antecedent identification, but also non-anaphorically identification.</S>
			<S sid ="86" ssid = "21">The new classier is applied to the testing document to do coreference resolution as usual.</S>
	</SECTION>
	<SECTION title="Patterned Based Semantic Relatedness. " number = "4">
			<S sid ="87" ssid = "1">4.1 Acquiring the Patterns.</S>
			<S sid ="88" ssid = "2">To derive patterns to indicate a specific semantic relation, a set of seed NP pairs that have the relation of interest is needed.</S>
			<S sid ="89" ssid = "3">As described in the previous section, we have a set of training instances formed by NP pairs with known coreference relationships.</S>
			<S sid ="90" ssid = "4">We can just use this set of NP pairs as the seeds.</S>
			<S sid ="91" ssid = "5">That is, an instance i{N Pi, N Pj } will become a seed pair (Ei:Ej ) in which N Pi corresponds to Ei and N Pj corresponds to Ej . In creating the seed, for a common noun, only the head word is retained while for a proper name, the whole string is kept.</S>
			<S sid ="92" ssid = "6">For example, instance i{“Bill Clinton”, “the former president”} will be converted to a NP pair (“Bill Clinton”:“president”).</S>
			<S sid ="93" ssid = "7">We create the seed pair for every training instance i{N Pi, N Pj }, except when (1) N Pi or N Pj is a pronoun; or (2) N Pi and N Pj have the same head word.</S>
			<S sid ="94" ssid = "8">We denote S+ and S- the set of seed pairs derived from the positive and the negative training instances, respectively.</S>
			<S sid ="95" ssid = "9">Note that a seed pair may possibly belong to S+ can Sat the same time.</S>
			<S sid ="96" ssid = "10">For each of the seed NP pairs (Ei:Ej ), we search in a large corpus for the strings that match the regular expression “Ei * * * Ej ” or “Ej * * * Ei”, where * is a wildcard for any word or symbol.</S>
			<S sid ="97" ssid = "11">The regular expression is defined as such that all the co- occurrences of Ei and Ej with at most three words (or symbols) in between are retrieved.</S>
			<S sid ="98" ssid = "12">For each retrieved string, we extract a surface pattern by replacing expression Ei with a mark &lt;#t1#&gt; and Ej with &lt;#t2#&gt;.</S>
			<S sid ="99" ssid = "13">If the string is followed by a symbol, the symbol will be also included in the pattern.</S>
			<S sid ="100" ssid = "14">This is to create patterns like “X * * * Y [, . ?]” where Y, with a high possibility, is the head word, but not a modifier of another noun phrase.</S>
			<S sid ="101" ssid = "15">As an example, consider the pair (“Bill Clinton”:“president”).</S>
			<S sid ="102" ssid = "16">Suppose that two sentences in a corpus can be matched by the regular expressions: (S1) “ Bill Clinton is elected President of the United States.” (S2) “The US President, Mr Bill Clinton, today advised India to move towards nuclear non Thus the association between a pattern p and a positive seed pair s:(Ei:Ej ) is: |(Ei ,p,Ej )| (∗,∗,∗)| proliferation and begin a dialogue with Pakistan to pmi(p, (Ei : Ej )) = log | |(Ei ,∗,Ej )| |(∗,p,∗)| (3) ... ”.</S>
			<S sid ="103" ssid = "17">|(∗,∗,∗) | |(∗,∗,∗ )| The patterns to be extracted for (S1) and (S2), respectively, are P1: &lt;#t1#&gt; is elected &lt;#t2#&gt; P2: &lt;#t2#&gt; , Mr &lt;#t1#&gt; , where |(Ei,p,Ej )| is the count of strings matched by pattern p instantiated with Ei and Ej . Asterisk * represents a wildcard, that is: We record the number of strings matched by a pattern p instantiated with (Ei:Ej ), noted |(Ei, p, Ej )|, |(Ei , ∗, Ej )| = p∈P List(Ei :Ej ) |(Ei , p, Ej )| (4) for later use.</S>
			<S sid ="104" ssid = "18">For each seed pair, we generate a list of surface patterns in the above way.</S>
			<S sid ="105" ssid = "19">We collect all the patterns derived from the positive seed pairs as a set |(∗, p, ∗)| = (Ei :Ej )∈S+∪S− |(∗, ∗, ∗)| = |(Ei , p, Ej )| (5) |(Ei , p, Ej )| (6) of reference patterns, which will be scored and used to evaluate the semantic relatedness for any new NP pair.</S>
			<S sid ="106" ssid = "20">(Ei :Ej )∈S+∪S−;p∈P list(Ei :Ej ) The reliability of pattern is the average strength of association across each positive seed pair: 4.2 Scoring the Patterns.</S>
			<S sid ="107" ssid = "21">r(p) = pmi(p,s) s∈S+ max pmi |S + | (7) 4.2.1 Frequency One possible scoring scheme is to evaluate a pattern based on its commonality to positive seed pairs.</S>
			<S sid ="108" ssid = "22">The intuition here is that the more often a pattern is seen for the positive seed pairs, the more indicative the pattern is to find positive coreferential NP pairs.</S>
			<S sid ="109" ssid = "23">Based on this idea, we score a pattern by calculating the number of positive seed pairs whose pattern list contains the pattern.</S>
			<S sid ="110" ssid = "24">Formally, supposing the pattern list associated with a seed pair s is PList(s), the frequency score of a pattern p is defined as F reqency(p) = |{s|s ∈ S+, p ∈ P List(s)}| (1) 4.2.2 Reliability Another possible way to evaluate a pattern is based on its reliability, i.e., the degree that the pattern is associated with the positive coreferential NPs.</S>
			<S sid ="111" ssid = "25">In our study, we use pointwise mutual information (Cover and Thomas, 1991) to measure association strength, which has been proved effective in Here max pmi is used for the normalization purpose, which is the maximum PMI between all patterns and all positive seed pairs.</S>
			<S sid ="112" ssid = "26">4.3 Exploiting the Patterns.</S>
			<S sid ="113" ssid = "27">4.3.1 Patterns Features One strategy is to directly use the reference patterns as a set of features for classifier learning and testing.</S>
			<S sid ="114" ssid = "28">To select the most effective patterns for the learner, we rank the patterns according to their scores and then choose the top patterns (first 100 in our study) as the features.</S>
			<S sid ="115" ssid = "29">As mentioned, the frequency score is based on the commonality of a pattern to the positive seed pairs.</S>
			<S sid ="116" ssid = "30">However, if a pattern also occurs frequently for the negative seed pairs, it should be not deemed a good feature as it may lead to many false positive pairs during real resolution.</S>
			<S sid ="117" ssid = "31">To take this factor into account, we filter the patterns based on their accuracy, which is defined as follows: the task of semantic relation identification (Pantel and Pennacchiotti, 2006).</S>
			<S sid ="118" ssid = "32">Under pointwise mutual Accuracy(p) = |{s|s ∈ S+, p ∈ P List(s)}| |{s|s ∈ S + ∪ S−, p ∈ P List(s)}| (8) information (PMI), the strength of association between two events x and y is defined as follows: A pattern with an accuracy below threshold 0.5 is eliminated from the reference pattern set.</S>
			<S sid ="119" ssid = "33">The remaining patterns are sorted as normal, from which pmi(x, y) = log P (x, y) P (x)P (y) (2) the top 100 patterns are selected as features.</S>
			<S sid ="120" ssid = "34">NWire NPaper BNews R P F R P F R P F + single reliability feature proper names 57.4 80.8 67.1 56.6 76.2 65.0 54.0 74.7 62.7 all types 57.7 76.4 65.7 56.7 75.9 64.9 55.1 69.5 61.5 Table 1: The results of different systems for coreference resolution Each selected pattern p is used as a single feature, PFp.</S>
			<S sid ="121" ssid = "35">For an instance i{NPi, NPj }, a list of patterns is generated for (Ei:Ej ) in the same way as described in Section 4.1.</S>
			<S sid ="122" ssid = "36">The value of PFp for the instance is simply |(Ei, p, Ej )|.</S>
			<S sid ="123" ssid = "37">The set of pattern features is used together with the other normal features to do the learning and testing.</S>
			<S sid ="124" ssid = "38">Thus, the actual importance of a pattern in coreference resolution is automatically determined in a supervised learning way.</S>
			<S sid ="125" ssid = "39">4.3.2 Semantic Relatedness Feature Another strategy is to use only one semantic feature which is able to reflect the reliability that a NP pair is related in semantics.</S>
			<S sid ="126" ssid = "40">Intuitively, a NP pair with strong semantic relatedness should be highly associated with as many reliable patterns as possible.</S>
			<S sid ="127" ssid = "41">Based on this idea, we define the semantic re- latedness feature (SRel) as follows: SRel(i{N Pi , N Pj }) =</S>
	</SECTION>
	<SECTION title="Experiments and Discussion. " number = "5">
			<S sid ="128" ssid = "1">5.1 Experimental setup.</S>
			<S sid ="129" ssid = "2">In our study we did evaluation on the ACE-2 V1.0 corpus (NIST, 2003), which contains two data set, training and devtest, used for training and testing respectively.</S>
			<S sid ="130" ssid = "3">Each of these sets is further divided by three domains: newswire (NWire), newspaper (NPa- per), and broadcast news (BNews).</S>
			<S sid ="131" ssid = "4">An input raw text was preprocessed automatically by a pipeline of NLP components, including sentence boundary detection, POS-tagging, Text Chunking and Named-Entity Recognition.</S>
			<S sid ="132" ssid = "5">Two different classifiers were learned respectively for resolving pronouns and non-pronouns.</S>
			<S sid ="133" ssid = "6">As mentioned, the pattern based semantic information was only applied to the non-pronoun resolution.</S>
			<S sid ="134" ssid = "7">For evaluation, Vilain et al.</S>
			<S sid ="135" ssid = "8">(1995)’s scoring algorithm was adopted to compute the recall and precision of the whole coreference resolution.</S>
			<S sid ="136" ssid = "9">For pattern extraction and feature computing, we used Wikipedia, a web-based free-content encyclopedia, as the text corpus.</S>
			<S sid ="137" ssid = "10">We collected the English 1000 ∗ p∈P List(Ei :Ej ) pmi(p, (Ei : Ej )) ∗ r(p) (9) Wikipedia database dump in November 2006 (re fer to http://down load.wikim edia.org/).</S>
			<S sid ="138" ssid = "11">After all the hyperlinks and other html tags were removed, the where pmi(p, (Ei:Ej )) is the pointwise mutual information between pattern p and a NP pair (Ei:Ej ), as defined in Eq. 3.</S>
			<S sid ="139" ssid = "12">r(p) is the reliability score of p (Eq. 7).</S>
			<S sid ="140" ssid = "13">As a relatedness value is always below 1, we multiple it by 1000 so that the feature value will be of integer type with a range from 0 to 1000.</S>
			<S sid ="141" ssid = "14">Note that among PList(Ei:Ej ), only the reference patterns are involved in the feature computing.</S>
			<S sid ="142" ssid = "15">whole pure text contains about 220 Million words.</S>
			<S sid ="143" ssid = "16">5.2 Results and Discussion.</S>
			<S sid ="144" ssid = "17">Table 1 lists the performance of different coreference resolution systems.</S>
			<S sid ="145" ssid = "18">The first line of the table shows the baseline system that uses only the common features proposed in (Ng and Cardie, 2002).</S>
			<S sid ="146" ssid = "19">From the table, our baseline system can NO 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 . . .</S>
			<S sid ="147" ssid = "20">F r e q u e n c y &lt; # t 1 &gt; &lt; # t 2 &gt; &lt; # t 2 &gt; &lt; # t 1 &gt; &lt; # t 1 &gt; , &lt; # t 2 &gt; &lt; # t 2 &gt; , &lt; # t 1 &gt; &lt; # t 1 &gt; . &lt; # t 2 &gt; &lt; # t 1 &gt; a n d &lt; # t 2 &gt; &lt; # t 2 &gt; . &lt; # t 1 &gt; &lt; # t 1 &gt; . t h e &lt; # t 2 &gt; &lt; # t 2 &gt; a n d &lt; # t 1 &gt; &lt; # t 1 &gt; , t h e &lt; # t 2 &gt; &lt; # t 2 &gt; . t h e &lt; # t 1 &gt; &lt; # t 2 &gt; , t h e &lt; # t 1 &gt; &lt; # t 2 &gt; &lt; # t 1 &gt; , &lt; # t 1 &gt; &lt; # t 2 &gt; , &lt; # t 1 &gt; : &lt; # t 2 &gt; &lt; # t 1 &gt; &lt; # t 2 &gt; . &lt; # t 2 &gt; &lt; # t 1 &gt; . &lt; # t 1 &gt; ( &lt; # t 2 &gt; ) &lt;# t1 &gt; and the &lt;# t2 &gt; &lt; # t 2 &gt; ( &lt; # t 1 &gt; ) . . .</S>
			<S sid ="148" ssid = "21">F r e q u e n c y ( F i l t e r e d ) &lt; # t 2 &gt; | | &lt; # t 1 &gt; | &lt; # t 1 &gt; ) i s a &lt; # t 2 &gt; &lt; # t 1 &gt; ) i s a n &lt; # t 2 &gt; &lt; # t 2 &gt; ) i s a n &lt; # t 1 &gt; &lt; # t 2 &gt; ) i s a &lt; # t 1 &gt; &lt; # t 1 &gt; o r t h e &lt; # t 2 &gt; &lt; # t 1 &gt; ( t h e &lt; # t 2 &gt; &lt;# t1 &gt; . dur ing the &lt;# t2 &gt; &lt; # t 1 &gt; | &lt; # t 2 &gt; &lt; # t 1 &gt; , a n &lt; # t 2 &gt; &lt; # t 1 &gt; ) w a s a &lt; # t 2 &gt; &lt; # t 1 &gt; i n t h e &lt; # t 2 &gt; &lt; # t 1 &gt; &lt; # t 2 &gt; &lt; # t 1 &gt; ) w a s a n &lt; # t 2 &gt; &lt; # t 1 &gt; , m a n y &lt; # t 2 &gt; &lt; # t 2 &gt; ) w a s a &lt; # t 1 &gt; &lt; # t 1 &gt; ( &lt; # t 2 &gt; . &lt; # t 2 &gt; | &lt; # t 1 &gt; &lt; # t 1 &gt; , n o t t h e &lt; # t 2 &gt; &lt; # t 2 &gt; , m a n y &lt; # t 1 &gt; . . .</S>
			<S sid ="149" ssid = "22">P M I R e l i a b i l t y &lt; # t 1 &gt; : &lt; # t 2 &gt; &lt; # t 2 &gt; : &lt; # t 1 &gt; &lt; # t 1 &gt; . t h e &lt; # t 2 &gt; &lt; # t 2 &gt; ( &lt; # t 1 &gt; ) &lt; # t 1 &gt; ( &lt; # t 2 &gt; &lt; # t 1 &gt; ( &lt; # t 2 &gt; ) &lt; # t 1 &gt; | | &lt; # t 2 &gt; | &lt; # t 2 &gt; | | &lt; # t 1 &gt; | &lt; # t 2 &gt; , t h e &lt; # t 1 &gt; &lt; # t 1 &gt; , t h e &lt; # t 2 &gt; &lt; # t 2 &gt; ( &lt; # t 1 &gt; &lt; # t 1 &gt; , &lt; # t 2 &gt; &lt; # t 1 &gt; a n d t h e &lt; # t 2 &gt; &lt; # t 1 &gt; . &lt; # t 2 &gt; &lt; # t 1 &gt; ) i s a &lt; # t 2 &gt; &lt;# t1 &gt; dur ing the &lt;# t2 &gt; &lt; # t 1 &gt; &lt; # t 2 &gt; . &lt; # t 1 &gt; ) i s a n &lt; # t 2 &gt; &lt; # t 2 &gt; i n &lt; # t 1 &gt; . &lt; # t 2 &gt; , &lt; # t 1 &gt; . . .</S>
			<S sid ="150" ssid = "23">Table 2: Top patterns chosen under different scoring schemes achieve a good precision (above 75%-80%) with a recall around 50%-60%.</S>
			<S sid ="151" ssid = "24">The overall F-measure for NWire, NPaper and BNews is 64.9%, 64.9% and 62.0% respectively.</S>
			<S sid ="152" ssid = "25">The results are comparable to those reported in (Ng, 2005) which uses similar features and gets an F-measure of about 62% for the same data set.</S>
			<S sid ="153" ssid = "26">The rest lines of Table 1 are for the systems using the pattern based information.</S>
			<S sid ="154" ssid = "27">In all the systems, we examine the utility of the semantic information in resolving different types of NP Pairs: (1) NP Pairs containing proper names (i.e., Name:Name or Name:Definites), and (2) NP Pairs of all types.</S>
			<S sid ="155" ssid = "28">In Table 1 (Line 25), we also list the results of incorporating two commonly used patterns, “X(s) such as Y” and “X and other Y(s)”.</S>
			<S sid ="156" ssid = "29">We can find that neither of the manually designed patterns has significant impact on the resolution performance.</S>
			<S sid ="157" ssid = "30">For all the domains, the manual patterns just achieve slight improvement in recall (below 0.6%), indicating that coverage of the patterns is not broad enough.</S>
			<S sid ="158" ssid = "31">5.2.1 Pattern Features In Section 4.3.1 we propose a strategy that directly uses the patterns as features.</S>
			<S sid ="159" ssid = "32">Table 2 lists the top patterns that are sorted based on frequency, filtered frequency (by accuracy), and PMI reliability, on the NWire domain for illustration.</S>
			<S sid ="160" ssid = "33">From the table, evaluated only based on frequency, the top patterns are those that indicate the appositive structure like “X, an/a/the Y ”.</S>
			<S sid ="161" ssid = "34">However, if filtered by accuracy, patterns of such a kind will be removed.</S>
			<S sid ="162" ssid = "35">Instead, the top patterns with both high frequency and high accuracy are those for the copula structure, like “X is/was/are Y ”.</S>
			<S sid ="163" ssid = "36">Sorted by PMI reli ability, patterns for the above two structures can be seen in the top of the list.</S>
			<S sid ="164" ssid = "37">These results are consistent with the findings in (Cimiano and Staab, 2004) that the appositive and copula structures are indicative to find the is-a relation.</S>
			<S sid ="165" ssid = "38">Also, the two commonly used patterns “X(s) such as Y” and “X and other Y(s)” were found in the feature lists (not shown in the table).</S>
			<S sid ="166" ssid = "39">Their importance for coreference resolution will be determined automatically by the learning algorithm.</S>
			<S sid ="167" ssid = "40">An interesting pattern seen in the lists is “X || Y |”, which represents the cases when Y and X appear in the same of line of a table in Wikipedia.</S>
			<S sid ="168" ssid = "41">For example, the following text “American || United States | Washington D.C. | . . .</S>
			<S sid ="169" ssid = "42">” is found in the table “list of empires”.</S>
			<S sid ="170" ssid = "43">Thus the pair “American:United States”, which is deemed coreferential in ACE, can be identified by the pattern.</S>
			<S sid ="171" ssid = "44">The sixth till the eleventh lines of Table 1 list the results of the system with pattern features.</S>
			<S sid ="172" ssid = "45">From the table, adding the pattern features brings the improvement of the recall against the baseline.</S>
			<S sid ="173" ssid = "46">Take the system based on filtered frequency as an example.</S>
			<S sid ="174" ssid = "47">We can observe that the recall increases by up to 3.3% (for NWire).</S>
			<S sid ="175" ssid = "48">However, we see the precision drops (up to 1.2% for NWire) at the same time.</S>
			<S sid ="176" ssid = "49">Overall the system achieves an F-measure better than the baseline in NWire (1.9%), while equal (±0.2%) in NPaper and BNews.</S>
			<S sid ="177" ssid = "50">Among the three ranking schemes, simply using frequency leads to the lowest precision.</S>
			<S sid ="178" ssid = "51">By contrast, using filtered frequency yields the highest precision with nevertheless the lowest recall.</S>
			<S sid ="179" ssid = "52">It is reasonable since the low accuracy features prone to false posi NameAlias = 0: :..Appositive = 1: ...</S>
			<S sid ="180" ssid = "53">Appositive = 0: :..P014 &gt; 0: :...P003 &lt;= 4: 0 (3) : P003 &gt; 4: 1 (25) P014 &lt;= 0: :..P004 &gt; 0:...</S>
			<S sid ="181" ssid = "54">P004 &lt;= 0: :..P027 &gt; 0: 1 (25/7) P027 &lt;= 0: :..P002 &gt; 0: ...</S>
			<S sid ="182" ssid = "55">P002 &lt;= 0: :..P005 &gt; 0: 1 (49/22) P005 &lt;= 0: :..String_Match = 1: . String_Match = 0: . // p002: &lt;t1&gt; ) is a &lt;t2&gt; // P003: &lt;t1&gt; ) is an &lt;t2&gt; // P004: &lt;t2&gt; ) is an &lt;t1&gt; // p005: &lt;t2&gt; ) is a &lt;t1&gt; // P014: &lt;t1&gt; ) was an &lt;t2&gt; // p027: &lt;t1&gt; , ( &lt;t2&gt; , Figure 1: The decision tree (NWire domain) for the system using pattern features (filtered frequency) (feature String Match records whether the string of anaphor NP j matches that of a candidate antecedent NP i) tive NP pairs are eliminated, at the price of recall.</S>
			<S sid ="183" ssid = "56">Using PMI Reliability can achieve the highest recall with a medium level of precision.</S>
			<S sid ="184" ssid = "57">However, we do not find significant difference in the overall F- measure for all these three schemes.</S>
			<S sid ="185" ssid = "58">This should be due to the fact that the pattern features need to be further chosen by the learning algorithm, and only those patterns deemed effective by the learner will really matter in the real resolution.</S>
			<S sid ="186" ssid = "59">From the table, the pattern features only work well for NP pairs containing proper names.</S>
			<S sid ="187" ssid = "60">Applied on all types of NP pairs, the pattern features further boost the recall of the systems, but in the meanwhile degrade the precision significantly.</S>
			<S sid ="188" ssid = "61">The F-measure of the systems is even worse than that of the baseline.</S>
			<S sid ="189" ssid = "62">Our error analysis shows that a non-anaphor is often wrongly resolved to a false antecedent once the two NPs happen to satisfy a pattern feature, which affects precision largely (as an evidence, the decrease of precision is less significant when using filtered frequency than using frequency).</S>
			<S sid ="190" ssid = "63">Still, these results suggest that we just apply the pattern based semantic information in resolving proper names which, in fact, is more compelling as the semantic information of common nouns could be more easily retrieved from WordNet.</S>
			<S sid ="191" ssid = "64">We also notice that the patterned based semantic information seems more effective in the NWire domain than the other two.</S>
			<S sid ="192" ssid = "65">Especially for NPaper, the improvement in F-measure is less than 0.1% for all the systems tested.</S>
			<S sid ="193" ssid = "66">The error analysis indicates it may be because (1) there are less NP pairs in NPaper than in NWire that require the external seman tic knowledge for resolution; and (2) For many NP pairs that require the semantic knowledge, no co- occurrence can be found in the Wikipedia corpus.</S>
			<S sid ="194" ssid = "67">To address this problem, we could resort to the Web which contains a larger volume of texts and thus could lead to more informative patterns.</S>
			<S sid ="195" ssid = "68">We would like to explore this issue in our future work.</S>
			<S sid ="196" ssid = "69">In Figure 1, we plot the decision tree learned with the pattern features for non-pronoun resolution (NWire domain, filtered frequency), which visually illustrates which features are useful in the reference determination.</S>
			<S sid ="197" ssid = "70">We can find the pattern features occur in the top of the decision tree, among the features for name alias, apposition and string-matching that are crucial for coreference resolution as reported in previous work (Soon et al., 2001).</S>
			<S sid ="198" ssid = "71">Most of the pattern features deemed important by the learner are for the copula structure.</S>
			<S sid ="199" ssid = "72">5.2.2 Single Semantic Relatedness Feature Section 4.3.2 presents another strategy to exploit the patterns, which uses a single feature to reflect the semantic relatedness between NP pairs.</S>
			<S sid ="200" ssid = "73">The last two lines of Table 1 list the results of such a system.</S>
			<S sid ="201" ssid = "74">Observed from the table, the system with the single semantic relatedness feature beats those with other solutions.</S>
			<S sid ="202" ssid = "75">Compared with the baseline, the system can get improvement in recall (up to 2.9% as in NWire), with a similar or even higher precision.</S>
			<S sid ="203" ssid = "76">The overall F-measure it produces is 67.1%, 65.0% and 62.7%, better than the baseline in all the domains.</S>
			<S sid ="204" ssid = "77">Especially in the NWire domain, we can see the significant (t-test, p ≤ 0.05) improvement of 2.1% in F-measure.</S>
			<S sid ="205" ssid = "78">When applied on All-Type NP pairs, the degrade of performance is less significant as using pattern features.</S>
			<S sid ="206" ssid = "79">The resulting performance is better than the baseline or equal.</S>
			<S sid ="207" ssid = "80">Compared with the systems using the pattern features, it can still achieve a higher precision and F-measure (with a little loss in recall) . There are several reasons why the single semantic relatedness feature (SRel) can perform better than the set of pattern features.</S>
			<S sid ="208" ssid = "81">Firstly, the feature value of SRel takes into consideration the information of all the patterns, instead of only the selected patterns.</S>
			<S sid ="209" ssid = "82">Secondly, since the SRel feature is computed based on all the patterns, it reduces the risk of false posi NameAlias = 0: :..Appositive = 1: ...</S>
			<S sid ="210" ssid = "83">Appositive = 0: :..SRel &gt; 28: :..SRel &gt; 47: ...</S>
			<S sid ="211" ssid = "84">: SRel &lt;= 47: ...</S>
			<S sid ="212" ssid = "85">SRel &lt;= 28: :..String_Match = 1: ...</S>
			<S sid ="213" ssid = "86">String_Match = 0: ...</S>
			<S sid ="214" ssid = "87">Figure 2: The decision tree (Nwire) for the system using the single semantic relatedness feature tive when a NP pair happens to satisfy one or several pattern features.</S>
			<S sid ="215" ssid = "88">Lastly, from the point of view of machine learning, using only one semantic feature, instead of hundreds of pattern features, can avoid overfitting and thus benefit the classifier learning.</S>
			<S sid ="216" ssid = "89">In Figure 2, we also show the decision tree learned with the semantic relatedness feature.</S>
			<S sid ="217" ssid = "90">We observe that the decision tree is simpler than that with pattern features as depicted in Figure 1.</S>
			<S sid ="218" ssid = "91">After feature name-alias and apposite, the classifier checks different ranges of the SRel value and make different resolution decision accordingly.</S>
			<S sid ="219" ssid = "92">This figure further illustrates the importance of the semantic feature.</S>
	</SECTION>
	<SECTION title="Conclusions. " number = "6">
			<S sid ="220" ssid = "1">In this paper we present a pattern based approach to coreference resolution.</S>
			<S sid ="221" ssid = "2">Different from the previous work which utilizes manually designed patterns, our approach can automatically discover the patterns effective for the coreference resolution task.</S>
			<S sid ="222" ssid = "3">In our study, we explore how to acquire and evaluate patterns, and investigate how to exploit the patterns to mine semantic relatedness information for coreference resolution.</S>
			<S sid ="223" ssid = "4">The evaluation on ACE data set shows that the patterned based features, when applied on NP pairs containing proper names, can effectively help the performance of coreference resolution in the recall (up to 4.3%) and the overall F-measure (up to 2.1%).</S>
			<S sid ="224" ssid = "5">The results also indicate that using the single semantic relatedness feature has more advantages than using a set of pattern features.</S>
			<S sid ="225" ssid = "6">For future work, we intend to investigate our approach in more difficult tasks like the bridging anaphora resolution, in which the semantic relations involved are more complicated.</S>
			<S sid ="226" ssid = "7">Also, we would like to explore the approach in technical (e.g., biomedical) domains, where jargons are frequently seen and the need for external knowledge is more compelling.</S>
			<S sid ="227" ssid = "8">Acknowledgements This research is supported by a Specific Targeted Research Project (STREP) of the European Union’s 6th Framework Programme within IST call 4, Boot- strapping Of Ontologies and Terminologies STrategic REsearch Project (BOOTStrep).</S>
	</SECTION>
</PAPER>
