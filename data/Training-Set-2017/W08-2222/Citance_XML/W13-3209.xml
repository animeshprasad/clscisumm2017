<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">With the increasing empirical success of distributional models of compositional semantics, it is timely to consider the types of textual logic that such models are capable of capturing.</S>
		<S sid ="2" ssid = "2">In this paper, we address shortcomings in the ability of current models to capture logical operations such as negation.</S>
		<S sid ="3" ssid = "3">As a solution we propose a tripartite formulation for a continuous vector space representation of semantics and subsequently use this representation to develop a formal compositional notion of negation within such models.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="4" ssid = "4">Distributional models of semantics characterize the meanings of words as a function of the words they co-occur with (Firth, 1957).</S>
			<S sid ="5" ssid = "5">These models, mathematically instantiated as sets of vectors in high dimensional vector spaces, have been applied to tasks such as thesaurus extraction (Grefenstette, 1994; Curran, 2004), word-sense discrimination (Schu¨ tze, 1998), automated essay marking (Landauer and Dumais, 1997), and so on.</S>
			<S sid ="6" ssid = "6">During the past few years, research has shifted from using distributional methods for modelling the semantics of words to using them for modelling the semantics of larger linguistic units such as phrases or entire sentences.</S>
			<S sid ="7" ssid = "7">This move from word to sentence has yielded models applied to tasks such as paraphrase detection (Mitchell and Lapata, 2008; Mitchell and Lapata, 2010; Grefenstette and Sadrzadeh, 2011; Blacoe and Lapata, 2012), sentiment analysis (Socher et al., 2012; Hermann and Blunsom, 2013), and semantic relation classification (ibid.).</S>
			<S sid ="8" ssid = "8">Most efforts approach the problem of modelling phrase meaning through vector composition using linear algebraic vector operations (Mitchell and Lapata, 2008; Mitchell and Lapata, 2010; Zanzotto et al., 2010), matrix or tensor-based approaches (Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette et al., 2013; Kartsaklis et al., 2012), or through the use of recursive auto-encoding (Socher et al., 2011; Hermann and Blunsom, 2013) or neural-networks (Socher et al., 2012).</S>
			<S sid ="9" ssid = "9">On the non-compositional front, Erk and Pado´ (2008) keep word vectors separate, using syntactic information from sentences to disambiguate words in context; likewise Turney (2012) treats the compositional aspect of phrases and sentences as a matter of similarity measure composition rather than vector composition.</S>
			<S sid ="10" ssid = "10">These compositional distributional approaches often portray themselves as attempts to reconcile the empirical aspects of distributional semantics with the structured aspects of formal semantics.</S>
			<S sid ="11" ssid = "11">However, they in fact only principally co-opt the syntax-sensitivity of formal semantics, while mostly eschewing the logical aspects.</S>
			<S sid ="12" ssid = "12">Expressing the effect of logical operations in high dimensional distributional semantic models is a very different task than in boolean logic.</S>
			<S sid ="13" ssid = "13">For example, whereas predicates such as ‘red’ are seen in predicate calculi as functions mapping elementsof some set Mred to T (and all other domain elements to ⊥), in compositional distributional mod els we give the meaning of ‘red’ a vector-like representation, and devise some combination operation with noun representations to obtain the representation for an adjective-noun pair.</S>
			<S sid ="14" ssid = "14">Under the logical view, negation of a predicate therefore yields a new truth-function mapping elements ofthe complement of Mred to T (and all other do main elements to ⊥), but the effect of negation and other logical operations in distributional models is not so sharp: we expect the representation for “not red” to remain close to other objects of the same domain of discourse (i.e. other colours) while being sufficiently different from the representation of ‘red’ in some manner.</S>
			<S sid ="15" ssid = "15">Exactly how textual logic 74 Proceedings of the Workshop on Continuous Vector Space Models and their Compositionality, pages 74–82, Sofia, Bulgaria, August 9 2013.</S>
			<S sid ="16" ssid = "16">Qc 2013 Association for Computational Linguistics would best be represented in a continuous vector space model remains an open problem.</S>
			<S sid ="17" ssid = "17">In this paper we propose one possible formulation for a continuous vector space based representation of semantics.</S>
			<S sid ="18" ssid = "18">We use this formulation as the basis for providing an account of logical operations for distributional models.</S>
			<S sid ="19" ssid = "19">In particular, we focus on the case of negation and how it might work in higher dimensional distributional models.</S>
			<S sid ="20" ssid = "20">Our formulation separates domain, value and functional representation in such a way as to allow negation to be handled naturally.</S>
			<S sid ="21" ssid = "21">We explain the linguistic and model-related impacts of this mode of representation and discuss how this approach could be generalised to other semantic functions.</S>
			<S sid ="22" ssid = "22">In Section 2, we provide an overview of work relating to that presented in this paper, covering the integration of logical elements in distributional models, and the integration of distributional elements in logical models.</S>
			<S sid ="23" ssid = "23">In Section 3, we introduce and argue for a tripartite representation in distributional semantics, and discuss the issues relating to providing a linguistically sensible notion of negation for such representations.</S>
			<S sid ="24" ssid = "24">In Section 4, we present matrix-vector models similar to that of Socher et al.</S>
			<S sid ="25" ssid = "25">(2012) as a good candidate for expressing this tripartite representation.</S>
			<S sid ="26" ssid = "26">We argue for the elimination of non-linearities from such models, and thus show that negation cannot adequately be captured.</S>
			<S sid ="27" ssid = "27">In Section 5, we present a short analysis of the limitation of these matrix- vector models with regard to the task of modelling non-boolean logical operations, and present an improved model bypassing these limitations in Section 6.</S>
			<S sid ="28" ssid = "28">Finally, in Section 7, we conclude by suggesting future work which will extend and build upon the theoretical foundations presented in this paper.</S>
	</SECTION>
	<SECTION title="Motivation and Related Work. " number = "2">
			<S sid ="29" ssid = "1">The various approaches to combining logic with distributional semantics can broadly be put into three categories: those approaches which use distributional models to enhance existing logical tools; those which seek to replicate logic with the mathematical constructs of distributional models; and those which provide new mathematical definitions of logical operations within distributional semantics.</S>
			<S sid ="30" ssid = "2">The work presented in this paper is in the third category, but in this section we will also pro vide a brief overview of related work in the other two in order to better situate the work this paper will describe in the literature.</S>
			<S sid ="31" ssid = "3">Vector-assisted logic The first class of approaches seeks to use distributional models of word semantics to enhance logic-based models of textual inference.</S>
			<S sid ="32" ssid = "4">The work which best exemplifies this strand of research is found in the efforts of Garrette et al.</S>
			<S sid ="33" ssid = "5">(2011) and, more recently, Beltagy et al.</S>
			<S sid ="34" ssid = "6">(2013).</S>
			<S sid ="35" ssid = "7">This line of research converts logical representations obtained from syntactic parses using Bos’ Boxer (Bos, 2008) into Markov Logic Networks (Richardson and Domingos, 2006), and uses distributional semantics-based models such as that of Erk and Pado´ (2008) to deal with issues polysemy and ambiguity.</S>
			<S sid ="36" ssid = "8">As this class of approaches deals with improving logic-based models rather than giving a dis- tributional account of logical function words, we view such models as orthogonal to the effort presented in this paper.</S>
			<S sid ="37" ssid = "9">Logic with vectors The second class of approaches seeks to integrate boolean-like logical operations into distributional semantic models using existing mechanisms for representing and composing semantic vectors.</S>
			<S sid ="38" ssid = "10">Coecke et al.</S>
			<S sid ="39" ssid = "11">(2010) postulate a mathematical framework generalising the syntax-semantic passage of Montague Grammar (Montague, 1974) to other forms of syntactic and semantic representation.</S>
			<S sid ="40" ssid = "12">They show that the parses yielded by syntactic calculi satisfying certain structural constraints can be canonically mapped to vector combination operations in dis- tributional semantic models.</S>
			<S sid ="41" ssid = "13">They illustrate their framework by demonstrating how the truth-value of sentences can be obtained from the combination of vector representations of words and multi- linear maps standing for logical predicates and relations.</S>
			<S sid ="42" ssid = "14">They furthermore give a matrix interpretation of negation as a ‘swap’ matrix which inverts the truth-value of vectorial sentence representations, and show how it can be embedded in sentence structure.</S>
			<S sid ="43" ssid = "15">Recently, Grefenstette (2013) showed that the examples from this framework could be extended to model a full quantifier-free predicate logic using tensors of rank 3 or lower.</S>
			<S sid ="44" ssid = "16">In parallel, Socher et al.</S>
			<S sid ="45" ssid = "17">(2012) showed that propositional logic can be learned using tensors of rank 2 or lower (i.e. only matrices and vectors) through the use of non-linear activation functions in recursive neural networks.</S>
			<S sid ="46" ssid = "18">The work of Coecke et al.</S>
			<S sid ="47" ssid = "19">(2010) and Grefenstette (2013) limits itself to defining, rather than learning, distributional representations of logical operators for distributional models that simulate logic, and makes no pretense to the provision of operations which generalise to higher-dimensional distributional semantic representations.</S>
			<S sid ="48" ssid = "20">As for the non-linear approach of Socher et al.</S>
			<S sid ="49" ssid = "21">(2012), we will discuss, in Section 4 below, the limitations with this model with regard to the task of modelling logic for higher dimensional representations.</S>
			<S sid ="50" ssid = "22">Logic for vectors The third and final class of approaches is the one the work presented here belongs to.</S>
			<S sid ="51" ssid = "23">This class includes attempts to define representations for logical operators in high dimensional semantic vector spaces.</S>
			<S sid ="52" ssid = "24">Such approaches do not seek to retrieve boolean logic and truth values, but to define what logical operators mean when applied to distributional representations.</S>
			<S sid ="53" ssid = "25">The seminal work in this area is found in the work of Widdows and Peters (2003), who define negation and other logical operators algebraically for high dimensional semantic vectors.</S>
			<S sid ="54" ssid = "26">Negation, under this approach, is effectively a binary relation rather than a unary relation: it expresses the semantics of statements such as ‘A NOT B’ rather than merely ‘NOT B’, and does so by projecting the vector for A into the orthogonal subspace of the vector for B. This approach to negation is useful for vector-based information retrieval models, but does not necessarily capture all the aspects of negation we wish to take into consideration, as will be discussed in Section 3.</S>
	</SECTION>
	<SECTION title="Logic in text. " number = "3">
			<S sid ="55" ssid = "1">In order to model logical operations over semantic vectors, we propose a tripartite meaning representation, which combines the separate and distinct treatment of domain-related and value-related aspects of semantic vectors with a domain-driven syntactic functional representation.</S>
			<S sid ="56" ssid = "2">This is a unification of various recent approaches to the problem of semantic representation in continuous distributional semantic modelling (Socher et al., 2012; Turney, 2012; Hermann and Blunsom, 2013).</S>
			<S sid ="57" ssid = "3">We borrow from Socher et al.</S>
			<S sid ="58" ssid = "4">(2012) and others (Baroni and Zamparelli, 2010; Coecke et al., 2010) the idea that the information words refer to is of two sorts: first the semantic content of the word, which can be seen as the sense or reference to the concept the word stands for, and is typically modelled as a semantic vector; and second, the function the word has, which models the effect the word has on other words it combines with in phrases and sentences, and is typically modelled as a matrix or higher-order tensor.</S>
			<S sid ="59" ssid = "5">We borrow from Turney (2012) the idea that the semantic aspect of a word should not be modelled as a single vector where everything is equally important, but ideally as two or more vectors (or, as we do here, two or more regions of a vector) which stand for the aspects of a word relating to its domain, and those relating to its value.</S>
			<S sid ="60" ssid = "6">We therefore effectively suggest a tripartite representation of the semantics of words: a word’s meaning is modelled by elements representing its value, domain, and function, respectively.</S>
			<S sid ="61" ssid = "7">The tripartite representation We argue that the tripartite representation suggested above allows us to explicitly capture several aspects of semantics.</S>
			<S sid ="62" ssid = "8">Further, while there may be additional distinct aspects of semantics, we argue that this is a minimal viable representation.</S>
			<S sid ="63" ssid = "9">First of all, the differentiation between domain and value is useful for establishing similarity within subspaces of meaning.</S>
			<S sid ="64" ssid = "10">For instance, the words blue and red share a common domain (colours) while having very different values.</S>
			<S sid ="65" ssid = "11">We hypothesise that making this distinction explicit will allow for the definition of more sophisticated and fine-grained semantics of logical operations, as discussed below.</S>
			<S sid ="66" ssid = "12">Although we will represent domain and value as two regions of a vector, there is no reason for these not to be treated as separate vectors at the time of comparison, as done by Turney (2012).</S>
			<S sid ="67" ssid = "13">Through the third part, the functional representation, we capture the compositional aspect of semantics: the functional representation governs how a term interacts with its environment.</S>
			<S sid ="68" ssid = "14">Inspired by the distributional interpretation (Baroni and Zamparelli, 2010; Coecke et al., 2010) of syntactically-paramatrized semantic composition functions from Montogovian semantics (Montague, 1974), we will also assume the function part of our representation to be parametrized principally by syntax and domain rather than value.</S>
			<S sid ="69" ssid = "15">The intuition behind taking domain into account in addition to syntactic class being that all members of a domain largely interact with their environment in the same fashion.</S>
			<S sid ="70" ssid = "16">Modeling negation The tripartite representation proposed above allows us to define logical operations in more detail than competing approaches.</S>
			<S sid ="71" ssid = "17">To exemplify this, we focus on the case of negation.</S>
			<S sid ="72" ssid = "18">We define negation for semantic vectors to be the absolute complement of a term in its domain.</S>
			<S sid ="73" ssid = "19">This implies that negation will not affect the domain of a term but only its value.</S>
			<S sid ="74" ssid = "20">Thus, blue and not blue are assumed to share a common domain.</S>
			<S sid ="75" ssid = "21">We call this naive form of negation the inversion of a term A, which we idealise as the partial inversion Ainv of the region associated with the value of the word in its vector representation A.</S>
	</SECTION>
	<SECTION title="A general matrix-vector model" number = "4">
			<S sid ="76" ssid = "1">Having discussed, above, how the vector component of a word can be partitioned into domain and value, we now turn to the partition between semantic content and function.</S>
			<S sid ="77" ssid = "2">A good candidate for modelling this partition would be a dual-space representation similar to that of Socher et al.</S>
			<S sid ="78" ssid = "3">(2012).</S>
			<S sid ="79" ssid = "4">In this section, we show that this sort of representation is not well adapted to the modelling of negation.</S>
			<S sid ="80" ssid = "5">Models using dual-space representations have been proposed in several recent publications, notably in Turney (2012) and Socher et al.</S>
			<S sid ="81" ssid = "6">(2012).</S>
			<S sid ="82" ssid = "7">We use the class of recursive matrix-vector models as the basis for our investigation; for a detailed introduction see the MVRNN model described in Socher et al.</S>
			<S sid ="83" ssid = "8">(2012).</S>
			<S sid ="84" ssid = "9"> d   d   d  We begin by describing composition for a gen  v  v  v  −v  v  −µv eral dual-space model, and apply this model to the notion of compositional logic in a tripartite repre f f f W Winv W Figure 1: The semantic representations of a word W , its inverse W inv and its negation W . Thedomain part of the representation remains un changed, while the value part will partially be inverted (inverse), or inverted and scaled (negation) with 0 &lt; µ &lt; 1.</S>
			<S sid ="85" ssid = "10">The (separate) functional representation also remains unchanged.</S>
			<S sid ="86" ssid = "11">Additionally, we expect negation to have a diminutive effect.</S>
			<S sid ="87" ssid = "12">This diminutive effect is best exemplified in the case of sentiment: good is more positive than not bad, even though good and bad are antonyms of each other.</S>
			<S sid ="88" ssid = "13">By extension not not good and not not not bad end up somewhere in the middle—qualitative statements still, but void of any significant polarity.</S>
			<S sid ="89" ssid = "14">To reflect this diminutive effect of negation and double negation commonlysentation discussed earlier.</S>
			<S sid ="90" ssid = "15">We identify the short comings of the general model and subsequently discuss alternative composition models and modifications that allow us to better capture logic in vector space models of meaning.</S>
			<S sid ="91" ssid = "16">Assume a basic model of compositionality for such a tripartite representation as follows.</S>
			<S sid ="92" ssid = "17">Each term is encoded by a semantic vector v capturing its domain and value, as well as a matrix M capturing its function.</S>
			<S sid ="93" ssid = "18">Thus, composition consists of two separate operations to learn semantics and function of the composed term: vp = fv (va, vb, Ma, Mb) (1) Mp = fM (Ma, Mb) As we defined the functional representation to be parametrized by syntax and domain, its composition function does not require va and vb as inputs, with all relevant information already being contained in Ma, Mb.</S>
			<S sid ="94" ssid = "19">In the case of Socher et al.</S>
			<S sid ="95" ssid = "20">(2012) these functions are as follows: Ma found in language, we define the idealised diminu Mp = WM b (2) tive negation A of a semantic vector A as a scalar ( M v inversion over a segment of the value region of its vp = g Wv a b (3) representation with the scalar µ : 0 &lt; µ &lt; 1, as shown in Figure 1.As we defined the functional part of our rep where g is a non-linearity.</S>
			<S sid ="96" ssid = "21">Mbva resentation to be predominately parametrized by syntax and domain, it will remain constant under negation and inversion.</S>
			<S sid ="97" ssid = "22">4.1 The question of non-linearities.</S>
			<S sid ="98" ssid = "23">While the non-linearity g could be equipped with greater expressive power, such as in the boolean logic experiment in Socher et al.</S>
			<S sid ="99" ssid = "24">(2012)), the aim of this paper is to place the burden of composition- ality on the atomic representations instead.</S>
			<S sid ="100" ssid = "25">For this reason we treat g as an identity function, and WM , Wv as simple additive matrices in this investigation, by setting g = I Wv = WM = [I I ] where I is an identity matrix.</S>
			<S sid ="101" ssid = "26">This simplification is justified for several reasons.</S>
			<S sid ="102" ssid = "27">A simple non-linearity such as the commonly used hyperbolic tangent or sigmoid function will not add sufficient power to overcome the issues outlined in this paper.</S>
			<S sid ="103" ssid = "28">Only a highly complex non- linear function would be able to satisfy the requirements for vector space based logic as discussed above.</S>
			<S sid ="104" ssid = "29">Such a function would defeat the point however, by pushing the “heavy-lifting” from the model structure into a separate function.</S>
			<S sid ="105" ssid = "30">Furthermore, a non-linearity effectively encodes a scattergun approach: While it may have Figure 2) describe a partially scaled and inverted identity matrix, where 0 &lt; µ, ν &lt; 1.</S>
			<S sid ="106" ssid = "31">fv (not, a) = Jµva (4) fM (not, a) ≈ Ma (5) fv (not, fv (not, a)) = Jν Jµva (6) fM (not, fM (not, a)) ≈ Ma (7) Based on our assumption about the constant domain and interaction across negation, we can replace the approximate equality with a strict equality in Equations 5 and 7.</S>
			<S sid ="107" ssid = "32">Further, we assume that both Ma /= I and Ma /= 0, i.e. that A has a spe cific and nonzero functional representation.</S>
			<S sid ="108" ssid = "33">We make a similar assumption for the semantic representation va /= 0.</S>
			<S sid ="109" ssid = "34">Thus, to satisfy the equalities in Equations 4 through 7, we can deduce the values of vnot and Mnot as discussed below.</S>
			<S sid ="110" ssid = "35">Value and Domain in Negation Under the simplifications of the model explained earlier, we know that the following is true: the power to learn a desired behaviour, it similarly has a lot of power to learn undesired behaviours fv (a, b) = g Wv Ma b and side effects.</S>
			<S sid ="111" ssid = "36">From a formal perspective it would therefore seem more prudent to explicitly encode desired behaviour in a model’s structure rather than relying on a non-linearity.</S>
			<S sid ="112" ssid = "37">4.2 Negation.</S>
			<S sid ="113" ssid = "38">We have outlined our formal requirements for negation in the previous section.</S>
			<S sid ="114" ssid = "39">From these requirements we can deduce four equalities, concerning the effect of negation and double negation on the semantic representation and function of a term.</S>
			<S sid ="115" ssid = "40">The matrices Jµ and Jν (illustrated in Mbva ( M v = I I I b a = Mavb + Mbva I.e. the domain and value representation of a parent is the sum of the two M v multiplications of its children.</S>
			<S sid ="116" ssid = "41">The matrix Wv could re-weight this addition, but that would not affect the rest of this analysis.</S>
			<S sid ="117" ssid = "42">Given the idea that the domain stays constant under negation and that a part of the value is inverted and scaled, we further know that these two equations hold: 1  . .  ∀a ∈  A : fv (not, a) = Jµva  . 0       −µ   0 . . .</S>
			<S sid ="118" ssid = "43"> −µ Figure 2: A partially scaled and inverted identity matrix Jµ.</S>
			<S sid ="119" ssid = "44">Such a matrix can be used to transform a vector storing a domain and value representation into one containing the same domain buta partially inverted value, such as W and W de scribed in Figure 1.</S>
			<S sid ="120" ssid = "45">∀a ∈ A : fv (not, fv (not, a)) = Jν Jµva Assuming that both semantic and functional representation across all A varies and is nonzero, these equalities imply the following conditions for the representation of not: Mnot = Jµ = Jν vnot = 0 These two equations suggest that the term not has no inherent value (vnot = 0), but merely acts as a function, inverting part of another terms semantic representation (Mnot = Jµ).</S>
			<S sid ="121" ssid = "46">Functional Representation in Negation We can apply the same method to the functional representation.</S>
			<S sid ="122" ssid = "47">Here, we know that: fM (a, b) = WM Ma Mb NP Det N S VBZ VP RB ADJP = I I Ma Mb = Ma + MbFurther, as defined in our discussion of nega This car is not JJ blue tion, we require the functional representation to remain unchanged under negation: ∀a ∈ A : fM (not, a) = Ma ∀a ∈ A : fM (not, fM (not, a)) = Ma These requirements combined leave us to conclude that Mnot = 0.</S>
			<S sid ="123" ssid = "48">Combined with the result from the first part of the analysis, this causes a contradiction: Mnot = 0 Mnot = Jµ =⇒ Jµ = 0 This demonstrates that the MVRNN as described in this paper is not capable of modelling semantic logic according to the principles we outlined.</S>
			<S sid ="124" ssid = "49">The fact that we would require Mnot = 0 further supports the points made earlier about the non-linearities and setting WM to I I . Even a specific WM and non-linearity would not be able to ensure that the functional representation stays constant under negation given a nonzero Mnot.Clearly, any other complex semantic represen tation would suffer from the same issue here—the failure of double-negation to revert a representation to its (diminutive) original.</S>
	</SECTION>
	<SECTION title="Analysis. " number = "5">
			<S sid ="125" ssid = "1">The issue identified with the MVRNN style models described above extends to a number of other models of vector spaced compositionality.</S>
			<S sid ="126" ssid = "2">It can be viewed as a problem of uninformed composition caused by a composition function that fails to account for syntax and thus for scope.</S>
			<S sid ="127" ssid = "3">Of course, identifying the scope of negation is a hard problem in its own right—see e.g. the *SEM 2012 shared task (Morante and Blanco, 2012).</S>
			<S sid ="128" ssid = "4">However, at least for simple cases, we can deduce scope by considering the parse tree of a sentence: Figure 3: The parse tree for This car is not blue, highlighting the limited scope of the negation.</S>
			<S sid ="129" ssid = "5">If we consider the parse tree for this car is not blue, it is clear that the scope of the negation expressed includes the colour but not the car (Figure 3).</S>
			<S sid ="130" ssid = "6">While the MVRNN model in Socher et al.</S>
			<S sid ="131" ssid = "7">(2012) incorporates parse trees to guide the order of its composition steps, it uses a single composition function across all steps.</S>
			<S sid ="132" ssid = "8">Thus, the functional representation of not will to some extent propagate outside of its scope, leading to a vector capturing something that is not blue, but also not quite a car.</S>
			<S sid ="133" ssid = "9">There are several possibilities for addressing this issue.</S>
			<S sid ="134" ssid = "10">One possibility is to give greater weight to syntax, for instance by parametrizing the composition functions fv and fM on the parse structure.</S>
			<S sid ="135" ssid = "11">This could be achieved by using specific weight matrices Wv and WM for each possible tag.</S>
			<S sid ="136" ssid = "12">While the power of this approach is limited by the complexity of the parse structure, it would be better able to capture effects such as the scoping and propagation of functional representations.</S>
			<S sid ="137" ssid = "13">Another approach, which we describe in greater detail in the next section, pushes the issue of propagation onto the word level.</S>
			<S sid ="138" ssid = "14">While both approaches could easily be combined, this second option is more consistent with our aim of avoiding the implicit encoding of logic into fixed model parameters in favour of the explicit encoding in model structure.</S>
	</SECTION>
	<SECTION title="An improved model. " number = "6">
			<S sid ="139" ssid = "1">As we outlined in this paper, a key requirement for a compositional model motivated by formal semantics is the ability to propagate functional representations, but also to not propagate these representations when doing so is not semantically appropriate.</S>
			<S sid ="140" ssid = "2">Here, we propose a modification of the MVRNN class of models that can capture this dis tinction without the need to move the composition logic into the non-linearity.</S>
			<S sid ="141" ssid = "3">We add a parameter α to the representation of each word, controlling the degree to which its functional representation propagates after having been applied in its own composition step.</S>
			<S sid ="142" ssid = "4">Thus, the composition step of the new model requires three equations: r αa Ma the design of the improved model can resolve this issue through the α-parameter: αnot = 0 Thus, we can use this modified MVRNN model to represent negation according to the principles outlined in this paper.</S>
			<S sid ="143" ssid = "5">The result αnot = 0 is in accordance with our intuition about the propagation of functional aspects of a term: We commonly Mp = WM ( αa +αb αb αa +αb b v (8) expect negation to directly affect the things un der its scope (not blue) by choosing their semantic complement.</S>
			<S sid ="144" ssid = "6">However, this behaviour should not vp = g Wv Ma b (9) propagate outside of the scope of the negation.</S>
			<S sid ="145" ssid = "7">A Mbva αp = max(αa, αb) (10) Going back to the discussion of negation, this model has the clear advantage of being able to capture negation in the way we defined it.</S>
			<S sid ="146" ssid = "8">As fv (a, b) is unchanged, these two equations still hold: Mnot = Jµ = Jν vnot = 0 However, as fM (a, b) is changed, the second set of equations changes.</S>
			<S sid ="147" ssid = "9">We use Z as the α- denominator (Z = αa + αB ) for simplification: αa not blue car is still very much a car, and when a film is not good, it is still very much a film.</S>
	</SECTION>
	<SECTION title="Discussion and Further Work. " number = "7">
			<S sid ="148" ssid = "1">In this paper, we investigated the capability of continuous vector space models to capture the semantics of logical operations in non-boolean cases.</S>
			<S sid ="149" ssid = "2">Recursive and recurrent vector models of meaning have enjoyed a considerable amount of success in recent years, and have been shown to work well on a number of tasks.</S>
			<S sid ="150" ssid = "3">However, the complexity and subsequent power of these models comes at the price that it can be difficult to establish which aspect of a model is responsible for what behaviour.</S>
			<S sid ="151" ssid = "4">This issue was recently highlighted by an inves fM (a, b) = WM = I I = αa M Z Ma αb Z b αa Z a αb Z b + αb M tigation into recursive autoencoders for sentiment analysis (Scheible and Schu¨ tze, 2013).</S>
			<S sid ="152" ssid = "5">Thus, one of the key challenges in this area of research is the question of how to control the power of these models.</S>
			<S sid ="153" ssid = "6">This challenge motivated the work in this pa Z a Z b Further, we still require the functional representation to remain constant under negation: ∀a ∈ A : fM (not, a) = Ma ∀a ∈ A : fM (not, fM (not, a)) = Ma Thus, we can infer the following two conditions on the new model: per.</S>
			<S sid ="154" ssid = "7">By removing non-linearities and other parameters that could disguise model weaknesses, we focused our work on the basic model design.</S>
			<S sid ="155" ssid = "8">While such features enhance model power, they should not be used to compensate for inherently flawed model designs.</S>
			<S sid ="156" ssid = "9">As a prerequisite for our investigation we established a suitable encoding of textual logic.</S>
			<S sid ="157" ssid = "10">Distributional representations have been well explained on the word level, but less clarity exists as to the αnot M Z not ≈ 0 semantic content of compositional vectors.</S>
			<S sid ="158" ssid = "11">With the tripartite meaning representation we proposed αa M Z a ≈ Ma one possible approach in that direction, which we subsequently expanded by discussing how nega From our previous investigation we already know that Mnot = Jµ /= 0, i.e. that not has a non zero functional representation.</S>
			<S sid ="159" ssid = "12">While this caused a contradiction for the original MVRNN model, tion should be captured in this representation.</S>
			<S sid ="160" ssid = "13">Having established a suitable and rigorous system for encoding meaning in compositional vectors, we were thus able to investigate the repre sentative power of the MVRNN model.</S>
			<S sid ="161" ssid = "14">We focused this paper on the case of negation, which has the advantage that it does not require many additional assumptions about the underlying semantics.</S>
			<S sid ="162" ssid = "15">Our investigation showed that the basic MVRNN model is incompatible with our notion of negation and thus with any textual logic building on this proposal.</S>
			<S sid ="163" ssid = "16">Subsequently, we analysed the reasons for this failure.</S>
			<S sid ="164" ssid = "17">We explained how the issue of negation affects the general class of MVRNN models.</S>
			<S sid ="165" ssid = "18">Through the issue of double-negation we further showed how this issue is largely independent on the particular semantic encoding used.</S>
			<S sid ="166" ssid = "19">Based on this analysis we proposed an improved model that is able to capture such textual logic.</S>
			<S sid ="167" ssid = "20">In summary, this paper has two key contributions.</S>
			<S sid ="168" ssid = "21">First, we developed a tripartite representation for vector space based models of semantics, incorporating multiple previous approaches to this topic.</S>
			<S sid ="169" ssid = "22">Based on this representation, the second contribution of this paper was a modified MVRNN model that can capture effects such as negation in its inherent structure.</S>
			<S sid ="170" ssid = "23">In future work, we would like to build on the proposals in this paper, both by extending our work on textual logic to include formulations for e.g. function words, quantifiers, or locative words.</S>
			<S sid ="171" ssid = "24">Similarly, we plan to experimentally validate these ideas.</S>
			<S sid ="172" ssid = "25">Possible tasks for this include sentiment analysis and relation extraction tasks such as in Socher et al.</S>
			<S sid ="173" ssid = "26">(2012) but also more specific tasks such as the *SEM shared task on negation scope and reversal (Morante and Blanco, 2012).</S>
	</SECTION>
	<SECTION title="Acknowledgements">
			<S sid ="174" ssid = "27">The first author is supported by the UK Engineering and Physical Sciences Research Council (EPSRC).</S>
			<S sid ="175" ssid = "28">The second author is supported by EPSRC Grant EP/I03808X/1.</S>
	</SECTION>
</PAPER>
