<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">Homograph ambiguity is an original issue in Text-to-Speech (TTS).</S>
		<S sid ="2" ssid = "2">To disambiguate homograph, several efficient approaches have been proposed such as part-of-speech (POS) n-gram, Bayesian classifier, decision tree, and Bayesian-hybrid approaches.</S>
		<S sid ="3" ssid = "3">These methods need words or/and POS tags surrounding the question homographs in disambiguation.</S>
		<S sid ="4" ssid = "4">Some languages such as Thai, Chinese, and Japanese have no word-boundary delimiter.</S>
		<S sid ="5" ssid = "5">Therefore before solving homograph ambiguity, we need to identify word boundaries.</S>
		<S sid ="6" ssid = "6">In this paper, we propose a unique framework that solves both word segmentation and homograph ambiguity problems altogether.</S>
		<S sid ="7" ssid = "7">Our model employs both local and long- distance contexts, which are automatically extracted by a machine learning technique called Winnow.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="8" ssid = "8">In traditional Thai TTS, it consists of four main modules: word segmentation, grapheme-to-phoneme, prosody generation, and speech signal processing.</S>
			<S sid ="9" ssid = "9">The accuracy of pronunciation in Thai TTS mainly depends on accuracies of two modules: word segmentation, and grapheme-to-phoneme.</S>
			<S sid ="10" ssid = "10">In word segmentation process, if word boundaries cannot be identified correctly, it leads Thai TTS to the incorrect pronunciation such as a string “ตากลม” which can be separated into two different ways with different meanings and pronunciations.</S>
			<S sid ="11" ssid = "11">The first one is “ตา(eye) กลม(round)”, pronounced [ta:0 klom0]and the other one is “ตาก(expose) ลม(wind)”, pronounced [ta:k1 lom0].</S>
			<S sid ="12" ssid = "12">In grapheme-to-phoneme mod ule, it may produce error pronunciations for a homograph which can be pronounced more than one way such as a word “เพลา” which can be pronounced [phlaw0] or [phe:0 la:0].</S>
			<S sid ="13" ssid = "13">Therefore, to improve an accuracy of Thai TTS, we have to focus on solving the problems of word boundary ambiguity and homograph ambiguity which can be viewed as a disambiguation task.</S>
			<S sid ="14" ssid = "14">A number of feature-based methods have been tried for several disambiguation tasks in NLP, including decision lists, Bayesian hybrids, and Winnow.</S>
			<S sid ="15" ssid = "15">These methods are superior to the previously proposed methods in that they can combine evidence from various sources in disambiguation.</S>
			<S sid ="16" ssid = "16">To apply the methods in our task, we treat problems of word boundary and homograph ambiguity as a task of word pronunciation disambiguation.</S>
			<S sid ="17" ssid = "17">This task is to decide using the context which was actually intended.</S>
			<S sid ="18" ssid = "18">Instead of using only one type of syntactic evidence as in N-gram approaches, we employ the synergy of several types of features.</S>
			<S sid ="19" ssid = "19">Following previous works [4, 6], we adopted two types of features: context words, and collections.</S>
			<S sid ="20" ssid = "20">Context-word feature is used to test for the presence of a particular word within +/- K words of the target word and collocation test for a pattern of up to L contiguous words and/or part-of-speech tags surrounding the target word.</S>
			<S sid ="21" ssid = "21">To automatically extract the discriminative features from feature space and to combine them in disambiguation, we have to investigate an efficient technique in our task.</S>
			<S sid ="22" ssid = "22">The problem becomes how to select and combine various kinds of features.</S>
			<S sid ="23" ssid = "23">Yarowsky [11] proposed decision list as a way to pool several types of features, and to solve the target problem by applying a single strongest feature, whatever type it is. Golding [3] proposed a Bayesian hybrid method to take into account all available evidence, instead of only the strongest one.</S>
			<S sid ="24" ssid = "24">The method was applied to the task of context-sentitive spelling correction and was reported to be superior to decision lists.</S>
			<S sid ="25" ssid = "25">Later, Golding and Roth [4] applied Winnow algorithm in the same task and found that the algorithm performs comparably to the Bayesian hybrid method when using pruned feature sets, and is better when using unpruned sets or unfamiliar test set.</S>
			<S sid ="26" ssid = "26">In this paper, we propose a unified framework in solving the problems of word boundary ambiguity and homograph ambiguity altogether.</S>
			<S sid ="27" ssid = "27">Our approach employs both local and long-distance contexts, which can be automatically extracted by a machine learning technique.</S>
			<S sid ="28" ssid = "28">In this task, we employ the machine learning technique called Winnow.</S>
			<S sid ="29" ssid = "29">We then construct our system based on the algorithm and evaluate them by comparing with other existing approaches to Thai homograph problems.</S>
	</SECTION>
	<SECTION title="Problem  Description. " number = "2">
			<S sid ="30" ssid = "1">In Thai TTS, there are two major types of text ambiguities which lead to incorrect pronunciation, namely word boundary ambiguity and homograph ambiguity.</S>
	</SECTION>
	<SECTION title="Fraction such as 25/2 can be pronounced [yi:2. " number = "3">
			<S sid ="31" ssid = "1">sip1 ha:2 thap3 s@:ng4] (for address) or [yi:2 sip1 ha:2 su:an1 s@:ng4] (for fraction).</S>
	</SECTION>
	<SECTION title="Proper  Name  such  as  “สมพล”   is  pronounced. " number = "4">
			<S sid ="32" ssid = "1">[som4 phon0] or [sa1 ma3 phon0].</S>
	</SECTION>
	<SECTION title="Same Part of Speech such as “เพลา” (time) can be. " number = "5">
			<S sid ="33" ssid = "1">pronounced [phe:0 la:0], while “เพลา” (axe) is pro nounced [phlaw0].</S>
	</SECTION>
	<SECTION title="Different Part of Speech such as “แหน”  is pro-. " number = "6">
			<S sid ="34" ssid = "1">nounced [nx:4] or [hx:n4].</S>
			<S sid ="35" ssid = "2">2.1 Wor d Bou ndar y Amb iguit y (WB A) 3 Prev ious Ap pro ach es Thai as well as some other Asian languages has no word boundary delimiter.</S>
			<S sid ="36" ssid = "3">Identifying word boundary, especially in Thai, is a fundamental task in Natural Language Processing (NLP).</S>
			<S sid ="37" ssid = "4">However, it is not a simple problem because many strings can be segmented into words in different ways.</S>
			<S sid ="38" ssid = "5">Word boundary ambiguities for Thai can be classified into two main categories defined by [6]: Context Dependent Segmentation Ambiguity (CDSA), and Context Independent Segmentation Ambiguity (CISA).</S>
			<S sid ="39" ssid = "6">CISA can be almost resolved deterministically by the text itself.</S>
			<S sid ="40" ssid = "7">There is no need to consult any context.</S>
			<S sid ="41" ssid = "8">Though there are many possible segmentations, there is only one plausible segmentation while other alternatives are very unlikely to occur, for example, a string “ไปหามเหสี” which can be segmented into two different ways: “ไป(go) หาม(carry) เห(deviate) ส(color)” [paj0 ha:m4 he:4 si:4] and “ไป(go) หา(see) มเหส(queen)” [paj0ha:4 ma:3 he:4 si:4].</S>
			<S sid ="42" ssid = "9">Only the second choice is plausi ble.</S>
			<S sid ="43" ssid = "10">One may say that it is not semantically ambiguous.</S>
			<S sid ="44" ssid = "11">However, simple algorithms such as maximal matching [6, 9] and longest matching [6] may not be able to discriminate this kind of ambiguity.</S>
			<S sid ="45" ssid = "12">Probabilistic word segmentation can handle this kind of ambiguity successfully.</S>
			<S sid ="46" ssid = "13">CDSA needs surrounding context to decide which segmentation is the most probable one.</S>
			<S sid ="47" ssid = "14">Though the number of possible alternatives occurs less than the context independent one, it is more difficult to disambigu ate and causes more errors.</S>
			<S sid ="48" ssid = "15">For example, a string “ตากลม” can be segmented into “ตา กลม” (round eye) and “ตาก ลม” (to expose wind) which can be pronounced [ta:0 klom0] and [ta:k1 lom0] respectively.</S>
			<S sid ="49" ssid = "16">POS n-gram approaches [7, 10] use statistics of POS bigram or trigram to solve the problem.</S>
			<S sid ="50" ssid = "17">They can solve only the homograph problem that has different POS tag.</S>
			<S sid ="51" ssid = "18">They cannot capture long distance word associations.</S>
			<S sid ="52" ssid = "19">Thus, they are inappropriate of resolving the cases of semantic ambiguities.</S>
			<S sid ="53" ssid = "20">Bayesian classifiers [8] use long distance word associations regardless of position in resolving semantic ambiguity.</S>
			<S sid ="54" ssid = "21">These methods can successful capture long distance word association, but cannot capture local context information and sentence structure.</S>
			<S sid ="55" ssid = "22">Decision trees [2] can handle complex condition, but they have a limitation in consuming very large parame ter spaces and they solve a target problem by applying only the single strongest feature.</S>
			<S sid ="56" ssid = "23">Hybrid approach [3, 12] combines the strengths of other techniques such as Bayesian classifier, n-gram, and decision list.</S>
			<S sid ="57" ssid = "24">It can be capture both local and long distance context in disambiguation task.</S>
			<S sid ="58" ssid = "25">4 Our Model.</S>
			<S sid ="59" ssid = "26">To solve both word boundary ambiguity and homograph ambiguity, we treat these problems as the problem of disambiguating pronunciation.</S>
			<S sid ="60" ssid = "27">We construct a confusion set by listing all of its possible pronunciations.</S>
			<S sid ="61" ssid = "28">For example, C = {[ma:0 kwa:1], [ma:k2 wa:2]} is the confusion set of the string “มากกวา” which is a boundary ambiguity string and C={[phe:0 la:0] ,[phlaw0]} is the confusion set of the homograph “เพลา”.</S>
			<S sid ="62" ssid = "29">We obtain the features that can discriminate each pronunciation in the set by Winnow based on our training set.</S>
			<S sid ="63" ssid = "30">2.2 Hom ogra ph Amb iguit y 4.1 Win nowThai homographs, which cannot be determined the cor rect pronunciation without context, can be classified into six main categories as follows: 1.</S>
			<S sid ="64" ssid = "31">Number such as 10400 in postcode, it can be pro-.</S>
			<S sid ="65" ssid = "32">nounced [nvng1 su:n4 si:1 su:n4 su:n4] or [nvng1 mv:n1 si:1 r@:ji3] in amount.</S>
			<S sid ="66" ssid = "33">2.</S>
			<S sid ="67" ssid = "34">Abbreviation such as ก.พ. can be pronounced.</S>
			<S sid ="68" ssid = "35">[sam4 nak2 nga:n0 kha:2 ra:t2 cha:3 ka:n0 phon0 la:3 rv:an0] (Office Of The Civil Service Commission) or [kum0 pha:0 phan0] (February).</S>
			<S sid ="69" ssid = "36">Winnow algorithm used in our experiment is the algorithm described in [1].</S>
			<S sid ="70" ssid = "37">Winnow is a neuron-like network where several nodes are connected to a target node [4, 5].</S>
			<S sid ="71" ssid = "38">Each node called specialist looks at a particular value of an attribute of the target concept, and will vote for a value of the target concept based on its specialty; i.e. based on a value of the attribute it examines.</S>
			<S sid ="72" ssid = "39">The global algorithm will then decide on weighted-majority votes receiving from those specialists.</S>
			<S sid ="73" ssid = "40">The pair of (at tribute=value) that a specialist examines is a candidate of features we are trying to extract.</S>
			<S sid ="74" ssid = "41">The global algorithm updates the weight of any specialist based on the vote of that specialist.</S>
			<S sid ="75" ssid = "42">The weight of any specialist is initialized to 1.</S>
			<S sid ="76" ssid = "43">In case that the global algorithm predicts incorrectly, the weight of the specialist that predicts incorrectly is halved and the weight of the specialist that predicts correctly is multiplied by 3/2.</S>
			<S sid ="77" ssid = "44">The weight of a specialist is halved when it makes a mistake even if the global algorithm predicts correctly.</S>
			<S sid ="78" ssid = "45">4.2 Features.</S>
			<S sid ="79" ssid = "46">To train the algorithm to resolve pronunciation ambiguity, the context around a homograph or a boundary- ambiguity string is used to form features.</S>
			<S sid ="80" ssid = "47">The features are the context words, and collocations.</S>
			<S sid ="81" ssid = "48">Context words are used to test for the presence of a particular word within +10 words and –10 words from the target word.</S>
			<S sid ="82" ssid = "49">Collocations are patterns of up to 2 contiguous words and part-of-speech tags around the target word.</S>
			<S sid ="83" ssid = "50">Therefore, the total number of features is 10; 2 features for context words, and 8 features for collocations.</S>
			<S sid ="84" ssid = "51">5 Preliminary Experiment.</S>
			<S sid ="85" ssid = "52">To test the performance of the different approaches, we select sentences containing Thai homographs and boundary ambiguity strings from our 25K-words corpus to use in benchmark tests.</S>
			<S sid ="86" ssid = "53">Every sentence is manually separated into words.</S>
			<S sid ="87" ssid = "54">Their parts of speech and pronunciations are manually tagged by linguists.</S>
			<S sid ="88" ssid = "55">The resulting corpus is divided into two parts; the first part, about 80% of corpus, is utilized for training and the rest is used for testing.</S>
			<S sid ="89" ssid = "56">In the experiment, we classify the data into three group depending on types of text ambiguity according to section 2: CDSA, CISA and Homograph, and compare the results from different approaches; Winnow, Bayseian hybrid [3] and POS trigram.</S>
			<S sid ="90" ssid = "57">The results are shown in Table 1.</S>
			<S sid ="91" ssid = "58">information and make the task of Thai homograph dis- ambiguity more accurate.</S>
			<S sid ="92" ssid = "59">The experimental results show that Winnow outperform trigram model and Bayesian hybrid.</S>
			<S sid ="93" ssid = "60">Our future works will investigate other machine learning techniques such as SNoW and SVM.</S>
	</SECTION>
</PAPER>
