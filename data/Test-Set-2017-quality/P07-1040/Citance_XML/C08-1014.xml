<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">This paper studies three techniques that improve the quality of N-best hypotheses through additional regeneration process.</S>
		<S sid ="2" ssid = "2">Unlike the multi-system consensus approach where multiple translation systems are used, our improvement is achieved through the expansion of the N- best hypotheses from a single system.</S>
		<S sid ="3" ssid = "3">We explore three different methods to implement the regeneration process: re- decoding, n-gram expansion, and confusion network-based regeneration.</S>
		<S sid ="4" ssid = "4">Experiments on Chinese-to-English NIST and IWSLT tasks show that all three methods obtain consistent improvements.</S>
		<S sid ="5" ssid = "5">Moreover, the combination of the three strategies achieves further improvements and outperforms the baseline by 0.81 BLEU-score on IWSLT’06, 0.57 on NIST’03, 0.61 on NIST’05 test set respectively.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="6" ssid = "6">State-of-the-art Statistical Machine Translation (SMT) systems usually adopt a two-pass search strategy (Och, 2003; Koehn, et al., 2003) as shown in Figure 1.</S>
			<S sid ="7" ssid = "7">In the first pass, a decoding algorithm is applied to generate an N-best list of translation hypotheses, while in the second pass, the final translation is selected by rescoring and re-ranking the N-best translations through additional feature functions.</S>
			<S sid ="8" ssid = "8">The fundamental assumption behind using a second pass is that the generated N-best list may contain better transla © 2008.</S>
			<S sid ="9" ssid = "9">Licensed under the Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc- sa/3.0/).</S>
			<S sid ="10" ssid = "10">Some rights reserved.</S>
			<S sid ="11" ssid = "11">tions than the best choice found by the decoder.</S>
			<S sid ="12" ssid = "12">Therefore, the performance of a two-pass SMT system can be improved from two aspects, i.e. scoring models and the quality of the N-best hypotheses.</S>
			<S sid ="13" ssid = "13">Rescoring pass improves the performance of machine translation by enhancing the scoring models with more global sophisticated and dis- criminative feature functions.</S>
			<S sid ="14" ssid = "14">The idea for applying two passes instead of one is that some global feature functions cannot be easily decomposed into local scores and computed during decoding.</S>
			<S sid ="15" ssid = "15">Furthermore, rescoring allows some feature functions, such as word and n-gram posterior probabilities, to be estimated on the N-best list (Ueffing, 2003; Chen et al., 2005; Zens and Ney, 2006).</S>
			<S sid ="16" ssid = "16">In this two-pass method, translation performance hinges on the N-best hypotheses that are generated in the first pass (since rescoring occurs on these), so adding the translation candidates generated by other MT systems to these hypotheses could potentially improve the performance.</S>
			<S sid ="17" ssid = "17">This technique is called system combination (Bangalore et al., 2001; Matusov et al., 2006; Sim et al., 2007; Rosti et al., 2007a; Rosti et al., 2007b).</S>
			<S sid ="18" ssid = "18">We have instead chosen to regenerate new hypotheses from the original N-best list, a technique which we call regeneration.</S>
			<S sid ="19" ssid = "19">Regeneration is an intermediate pass between decoding and rescoring as depicted in Figure 2.</S>
			<S sid ="20" ssid = "20">Given the original N-best list (N-best1) generated by the decoder, this regeneration pass creates new translation hypotheses from this list to form another N-best list (N-best2).</S>
			<S sid ="21" ssid = "21">These two N-best lists are then combined and given to the rescoring pass to derive the best translation.</S>
			<S sid ="22" ssid = "22">We implement three methods to regenerate new hypotheses: re-decoding, n-gram expansion and confusion network.</S>
			<S sid ="23" ssid = "23">Re-decoding (Rosti et al., 2007a) based regeneration re-decodes the source sentence using original LM as well as new trans 105 Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 105–112 Manchester, August 2008 Figure 1: Structure of a typical two-pass machine translation system.</S>
			<S sid ="24" ssid = "24">N-best translations are generated by the decoder and the 1-best translation is returned after rescored with additional feature functions.</S>
			<S sid ="25" ssid = "25">didates from the other MT systems.</S>
	</SECTION>
	<SECTION title="SMT. " number = "2">
			<S sid ="26" ssid = "1">Process Phrase-based statistical machine translation systems are usually modeled through a log linear framework (Och and Ney, 2002).</S>
			<S sid ="27" ssid = "2">By introducing the hidden word alignment variable a (Brown et al., 1993), the optimal translation can be searched for based on the following criterion: e * = arg max(∑ λ h (e , f , a)) (1) e,a m =1 m mwhere e is a string of phrases in the target lan guage, f is the source language string of phrases, hm (e , f , a) are feature functions, Figure 2: Structure of a three-pass machine translation system with the new regeneration pass.</S>
			<S sid ="28" ssid = "3">The original N-best translations list (N- best1) is expanded to generate a new N-best translations list (N-best2) before the rescoring pass.</S>
			<S sid ="29" ssid = "4">lation and reordering models that are trained on the source-to-target N-best translations generated in the first pass.</S>
			<S sid ="30" ssid = "5">N-gram expansion (Chen et al., 2007) regenerates more hypotheses by continuously expanding the partial hypotheses through an n-gram language model trained on the original N-best translations.</S>
			<S sid ="31" ssid = "6">And confusion network generates new hypotheses based on confusion network decoding (Matusov et al., 2006), where the confusion network is built on the original N-best translations.</S>
			<S sid ="32" ssid = "7">Confusion network and re-decoding have been well studied in the combination of different MT systems (Bangalore et al., 2001; Matusov et al., 2006; Sim et al., 2007; Rosti et al., 2007a; Rosti et al., 2007b).</S>
			<S sid ="33" ssid = "8">Researchers have used confusion network to compute consensus translations from the outputs of different MT systems and improve the performance over each single systems.</S>
			<S sid ="34" ssid = "9">(Rosti et al., 2007a) also used re-decoding to do system combination by extracting sentence-specific phrase translation tables from the outputs of different MT systems and running a phrase-based decoding with this new translation table.</S>
			<S sid ="35" ssid = "10">Finally, N-gram expansion method (Chen et al., 2007) collects sub-strings occurring in the N-best list to produce alternative translations.</S>
			<S sid ="36" ssid = "11">This work demonstrates that a state-of-the-art MT system can be further improved by means of regeneration which expands its own N-best weights λm are typically optimized to maximize the scoring function (Och, 2003).</S>
			<S sid ="37" ssid = "12">Our MT baseline system is based on Moses decoder (Koehn et al., 2007) with word alignment obtained from GIZA++ (Och et al., 2003).</S>
			<S sid ="38" ssid = "13">The translation model (TM), lexicalized word reordering model (RM) are trained using the tools provided in the open source Moses package.</S>
			<S sid ="39" ssid = "14">Language model (LM) is trained with SRILM toolkit (Stolcke, 2002) with modified KneserNey smoothing method (Chen and Goodman, 1998).</S>
	</SECTION>
	<SECTION title="Regeneration Methods. " number = "3">
			<S sid ="40" ssid = "1">Given the original N-best translations, regeneration pass is to generate M new target translations which are not seen in the original N-best choices.</S>
			<S sid ="41" ssid = "2">3.1 Regeneration with Re-decoding.</S>
			<S sid ="42" ssid = "3">One way of regeneration is by running the decoding again to obtain new hypotheses through a re-decoding process (Rosti et al., 2007a).</S>
			<S sid ="43" ssid = "4">In this work, the same decoder (Moses) is used to produce the new M-best translations using a new translation model and reordering model trained over the word-aligned source input and original N-best target hypotheses.</S>
			<S sid ="44" ssid = "5">Although the target-to- source phrase alignments are available in the original N-best hypotheses, to enlarge the difference between the new M-best translations and the original N-best translations, we realign the words using GIZA++.</S>
			<S sid ="45" ssid = "6">Weights of the decoder are re-optimized by the tool in the Moses package over the development set.</S>
			<S sid ="46" ssid = "7">The process of such a re-decoding is summarized as follows: source input and target N-best translations; 2.</S>
			<S sid ="47" ssid = "8">Train translation and reordering model;.</S>
			<S sid ="48" ssid = "9">3.</S>
			<S sid ="49" ssid = "10">Optimize the weights of the decoder with.</S>
			<S sid ="50" ssid = "11">the new models; ensure more than M new hypotheses are generated.</S>
			<S sid ="51" ssid = "12">1.</S>
			<S sid ="52" ssid = "13">it&apos;s 5 minutes on foot .</S>
	</SECTION>
	<SECTION title="Decode the source input by using new mod-. " number = "4">
			<S sid ="53" ssid = "1">els and new weights to generate N+M distinct translations (“distinct” here refers to the target language string only, not considering the phrase segmentation, etc.);</S>
	</SECTION>
	<SECTION title="Output  M-best  translations  which  are  not. " number = "5">
			<S sid ="54" ssid = "1">seen in the original N-best translations.</S>
			<S sid ="55" ssid = "2">Original hypotheses n-grams 2.</S>
			<S sid ="56" ssid = "3">it is 5 minutes on foot . 3.</S>
			<S sid ="57" ssid = "4">it’s about 5 minutes’ to walk . 4.</S>
			<S sid ="58" ssid = "5">i walk 5 minutes . it&apos;s 5 minutes, 5 minutes on, …… on foot ., about 5 minutes …… 5 minutes . Re-decoding on test set follows the same steps, but without the tuning step, step 3.</S>
			<S sid ="59" ssid = "6">3.2 Regeneration with N-gram Expansion.</S>
			<S sid ="60" ssid = "7">N-gram expansion (Chen et al., 2007) combines the sub-strings occurred in the original N-best translations to generate new hypotheses.</S>
			<S sid ="61" ssid = "8">Firstly, all n-grams from the original N-best translations are collected.</S>
			<S sid ="62" ssid = "9">Then the partial hypotheses are continuously expanded by appending a word through the n-grams collected in the first step.</S>
			<S sid ="63" ssid = "10">We explain this method in more detail using the Figure 3: Example of original hypotheses and 3- grams collected from them.</S>
			<S sid ="64" ssid = "11">partial hyp.</S>
			<S sid ="65" ssid = "12">it’s about 5 minutes n-gram + 5 minutes on new partial hyp.</S>
			<S sid ="66" ssid = "13">it’s about 5 minutes on Figure 4: Expanding a partial hypothesis via a matching n-gram.</S>
			<S sid ="67" ssid = "14">it’s about 5 minutes on foot . following example.</S>
			<S sid ="68" ssid = "15">Suppose we have four original hypotheses shown in Figure 3.</S>
			<S sid ="69" ssid = "16">Firstly, we collect all the 3 New hypotheses it&apos;s 5 minutes . i walk 5 minutes on foot . …… grams from the original hypotheses.</S>
			<S sid ="70" ssid = "17">The first n- grams of all original entries in the N-best list are set as the initial partial hypotheses.</S>
			<S sid ="71" ssid = "18">They are: it&apos;s 5 minutes, it is 5, it’s about 5 and i walk 5.</S>
			<S sid ="72" ssid = "19">Then the expansion of a partial hypothesis starts by computing the set of n-grams matching its last n 1 words.</S>
			<S sid ="73" ssid = "20">As shown in Figure 4, the n-gram 5 minutes on matches the last two words of the partial hypothesis it’s about 5 minutes.</S>
			<S sid ="74" ssid = "21">So the hypothesis is expanded to it’s about 5 minutes on.</S>
			<S sid ="75" ssid = "22">The expansion continues until the partial hypothesis ends with a special end-of-sentence symbol that occurs at the end of all N-best strings.</S>
			<S sid ="76" ssid = "23">Figure 5 shows some new hypotheses that are generated from the example in Figure 3.</S>
			<S sid ="77" ssid = "24">This is an example excerpted from our development data.</S>
			<S sid ="78" ssid = "25">One reference is also given in Figure 5; the first new generated hypothesis is equal to this reference.</S>
			<S sid ="79" ssid = "26">But unfortunately, there is no such hypothesis in the original N-best translations.</S>
			<S sid ="80" ssid = "27">During the new hypotheses generation, the translation outputs of a given source sentence are computed through a beam-search algorithm with a log-linear combination of the feature functions.</S>
			<S sid ="81" ssid = "28">In addition to n-gram frequency and n-gram posterior probability which have been used in (Chen et al., 2007), we also used language model, direct/inverse IBM model 1, and word penalty in Reference it&apos;s about five minutes on foot . Figure 5: New generated hypotheses through n- gram expansion and one reference.</S>
			<S sid ="82" ssid = "29">3.3 Regeneration with Confusion Network.</S>
			<S sid ="83" ssid = "30">Confusion network based regeneration builds a confusion network over the original N-best hypotheses, and then extracts M-best hypotheses from it.</S>
			<S sid ="84" ssid = "31">The word order in the N-best translations could be very different, so we need to choose a hypothesis with the “most correct” word order as the confusion network skeleton (alignment reference), then align and reorder other hypotheses in this word order.</S>
			<S sid ="85" ssid = "32">Some previous work compute the consensus translation under MT system combination, which differ from ours in the way of choosing the skeleton and aligning the words.</S>
			<S sid ="86" ssid = "33">Matusov et al.</S>
			<S sid ="87" ssid = "34">(2006) let every hypothesis play the role of the skeleton once and used GIZA++ to get word alignment.</S>
			<S sid ="88" ssid = "35">Bangalore et al.</S>
			<S sid ="89" ssid = "36">(2001), Sim et al.</S>
			<S sid ="90" ssid = "37">(2007), Rosti et al.</S>
			<S sid ="91" ssid = "38">(2007a), and Rosti et al.</S>
			<S sid ="92" ssid = "39">(2007b) chose the hypothesis that best agrees with other hypotheses on average as the skeleton.</S>
			<S sid ="93" ssid = "40">Bangalore et al.</S>
			<S sid ="94" ssid = "41">(2001) used a WER based alignment and Sim et al.</S>
			<S sid ="95" ssid = "42">(2007), Rosti et al.</S>
			<S sid ="96" ssid = "43">(2007a), and Rosti et al.</S>
			<S sid ="97" ssid = "44">(2007b) used minimum Translation Error Rate (TER) based alignment to build the confusion network.</S>
			<S sid ="98" ssid = "45">Choosing alignment reference: Since the N- best translations are ranked, choosing the first best hypothesis as the skeleton is straightforward in our work.</S>
			<S sid ="99" ssid = "46">Aligning words: As a confusion network can be easily built from a one-to-one alignment, we develop our algorithm based on the one-to-one assumption and use competitive linking algorithm (Melamed, 2000) for our word alignment.</S>
			<S sid ="100" ssid = "47">Firstly, an association score is computed for every possible word pair from the skeleton and sentence to be aligned.</S>
			<S sid ="101" ssid = "48">Then a greedy algorithm is applied to select the best word-alignment.</S>
			<S sid ="102" ssid = "49">In this paper, we use a linear combination of multiple association scores, as suggested in (Kraif and Chen, 2004).</S>
			<S sid ="103" ssid = "50">As the two sentences to be aligned are in the same language, the association scores are computed on the following four clues.</S>
			<S sid ="104" ssid = "51">They are cognate (S1), word class (S2), synonyms (S3), and position difference (S4).</S>
			<S sid ="105" ssid = "52">The four scores are linearly combined with empirically determined weights as shown is Equation 2.</S>
			<S sid ="106" ssid = "53">4 Original hypotheses 1.</S>
			<S sid ="107" ssid = "54">it’s 5 minutes on foot . 2.</S>
			<S sid ="108" ssid = "55">it is 5 minutes on foot . 3.</S>
			<S sid ="109" ssid = "56">it’s about 5 minutes’ to walk . 4.</S>
			<S sid ="110" ssid = "57">i walk 5 minutes . Alignments it’s 5 minutes on foot . ε it 5 minutes on foot . is it’s 5 minutes’ to walk . about i 5 minutes ε walk . Confusion network it’s ε 5 minutes on foot . it is 5 minutes on foot . it’s about 5 minutes’ to walk . i ε 5 minutes ε walk . New hypotheses 1.</S>
			<S sid ="111" ssid = "58">it&apos;s about five minutes on foot . 2.</S>
			<S sid ="112" ssid = "59">it about five minutes on foot . 3.</S>
			<S sid ="113" ssid = "60">it&apos;s about five minutes on walk . 4.</S>
			<S sid ="114" ssid = "61">i about 5 minutes to work . Figure 6: Example of creating a confusion network from the word alignments, and new hypotheses generated through the confusion network.</S>
			<S sid ="115" ssid = "62">The sentence in bold is the alignment reference.</S>
			<S sid ="116" ssid = "63">4 Rescoring.</S>
			<S sid ="117" ssid = "64">model S ( f j , e i ) = ∑ λk × Sk k =1 (2) Since the final N+M-best hypotheses are produced either from different methods or same de Reordering words: After word alignment, the words in all other hypotheses are reordered to match the word order of the skeleton.</S>
			<S sid ="118" ssid = "65">The aligned words are reordered according to their alignment indices.</S>
			<S sid ="119" ssid = "66">The unaligned words are reordered in two strategies: moved with its previousword or next word.</S>
			<S sid ="120" ssid = "67">In this work, additional ex periments suggested that moving the unaligned word with its previous word achieve better performance.</S>
			<S sid ="121" ssid = "68">In the case that the first word is un- aligned, it will be moved with its next word.</S>
			<S sid ="122" ssid = "69">Each word is assigned a score based on a simple voting scheme.</S>
			<S sid ="123" ssid = "70">Figure 6 shows an example of creating a confusion network.</S>
			<S sid ="124" ssid = "71">Extracting M-best translations: New translations are extracted from the confusion network.</S>
			<S sid ="125" ssid = "72">We again use beam-search algorithm to derive new hypotheses.</S>
			<S sid ="126" ssid = "73">The same feature functions proposed in Section 3.2 are used to score the partial hypotheses.</S>
			<S sid ="127" ssid = "74">Moreover, we also use position based word probability (i.e. in Figure 6, the words in position 5, “on” scored a probability of 0.5, and “ ε ” scored a probability of 0.25) as a feature function.</S>
			<S sid ="128" ssid = "75">Figure 6 shows some examples of new hypotheses generated through confusion network regeneration.</S>
			<S sid ="129" ssid = "76">coder with different models, local feature functions of each hypothesis are not directly comparable, and thus inadequate for rescoring.</S>
			<S sid ="130" ssid = "77">We hence exploit rich global feature functions in the rescoring models to compensate the loss of local feature functions.</S>
			<S sid ="131" ssid = "78">We apply the following 10 feature functions and optimize the weight of each feature function using the tool in Moses package.</S>
			<S sid ="132" ssid = "79">• direct and inverse IBM model 1 and 3 • association score, i.e. hyper-geometric distribution probabilities and mutual information • lexicalized word/block reordering rules (Chen et al., 2006) • 6-gram target LM • 8-gram target word-class based LM, word- classes are clustered by GIZA++ • length ratio between source and target sentence • question feature (Chen et al., 2005) • linear sum of n-grams relative frequencies within N-best translations (Chen et al., 2005) • n-gram posterior probabilities within the N- best translations (Zens and Ney, 2006) • sentence length posterior probabilities (Zens and Ney, 2006) 5 Experiments.</S>
			<S sid ="133" ssid = "80">5.1 Tasks.</S>
			<S sid ="134" ssid = "81">We carried out two sets of experiments on two different datasets.</S>
			<S sid ="135" ssid = "82">One is in spoken language domain while the other is on newswire corpus.</S>
			<S sid ="136" ssid = "83">Both experiments are on Chinese-to-English translation.</S>
			<S sid ="137" ssid = "84">Experiments on spoken language domain were carried out on the Basic Traveling Expression Corpus (BTEC) (Takezawa et al., 2002) Chinese- to-English data augmented with HIT- corpus 1 . BTEC is a multilingual speech corpus which contains sentences spoken by tourists.</S>
			<S sid ="138" ssid = "85">40K sentence-pairs are used in our experiment.</S>
			<S sid ="139" ssid = "86">HIT- corpus is a balanced corpus and has 500K sentence-pairs in total.</S>
			<S sid ="140" ssid = "87">We selected 360K sentence- pairs that are more similar to BTEC data according to its sub-topic.</S>
			<S sid ="141" ssid = "88">Additionally, the English sentences of Tanaka corpus2 were also used to train our LM.</S>
			<S sid ="142" ssid = "89">We ran experiments on an IWSLT 3 challenge track which uses IWSLT 20064 DEV clean text set as development set and IWSLT2006 TEST clean text as test set.</S>
			<S sid ="143" ssid = "90">Table 1 summarizes the statistics of the training, dev and test data for IWSLT task.</S>
			<S sid ="144" ssid = "91">Experiments on newswire domain were carried out on the FBIS 5 corpus.</S>
			<S sid ="145" ssid = "92">We used NIST 6 2002 MT evaluation test set as our development.</S>
			<S sid ="146" ssid = "93">set, and the NIST 2003, 2005 test sets as our test sets.</S>
			<S sid ="147" ssid = "94">Table 2 summarizes the statistics of the training, dev and test data for NIST task.</S>
			<S sid ="148" ssid = "95">data Chinese English Train Sentences 406,122 Words 4,443K 4,591K Vocabulary 69,989 61,087 Dev.</S>
			<S sid ="149" ssid = "96">Sentences 489 489 × 7 Words 5,896 45,449 Test Sentences 500 500 × 7 Words 6,296 51,227 Additional target data Sentences 155K Words 1.7M Table 1: Statistics of training, development and test data for IWSLT task.</S>
			<S sid ="150" ssid = "97">1 http://mitlab.hit.edu.cn/ 2 http://www.csse.monash.edu.au/~jwb/tanakacorpus.html 3 International Workshop for Spoken Language Trans-.</S>
			<S sid ="151" ssid = "98">lation 4 http:// www.slc.atr.jp/IWSLT2006/ 5 LDC2003E14.</S>
			<S sid ="152" ssid = "99">6 http://www.nist.gov/speech/tests/mt/ data Chinese English Train Sentences 238,761 Words 7.0M 8.9M Vocabulary 56,223 63,941 NIST 02 (dev) Sentences 878 878 × 4 Words 23,248 108,616 NIST 03 (test) Sentences 919 919 × 4 Words 25,820 116,547 NIST 05 (test) Sentences 1,082 1,082 × 4 Words 30,544 141,915 Additional target data Sentences 2.2M Words 61.5M Table 2: Statistics of training, development and test data for NIST task.</S>
			<S sid ="153" ssid = "100">System #hypo Dev set Test set BLEU NIST BLEU NIST 1-best 29.98 7.468 29.10 7.103 RESC1 1,200 31.60 7.657 30.42 7.165 RD 1,200 32.46 7.664 30.95 7.175 NE 1,200 32.58 7.660 31.02 7.178 CN 1,200 32.33 7.671 30.82 7.200 RESC2 2,000 31.72 7.659 30.55 7.166 COMB 2,000 32.98 7.673 31.36 7.202 Table 3: Translation performances (BLEU% and NIST scores) of IWSLT task: decoder (1-best), rescoring on original 1,200 N-best (RESC1) and 2,000 N-best hypotheses (RESC2), re-decoding (RD), n-gram expansion (NE), confusion network (CN) and combination of all hypotheses (COMB).</S>
			<S sid ="154" ssid = "101">5.2 Results.</S>
			<S sid ="155" ssid = "102">We set N = 800 and M = 400 for IWSLT task, i.e. 800 distinct translations for each source input are extracted from the decoder and used for regeneration; and 400 new hypotheses are generated for each regeneration system: re-decoding (RD), n-gram expansion (NE) and confusion network (CN).</S>
			<S sid ="156" ssid = "103">System COMB combines the original N- best and the three regenerated M-best hypotheses lists (totally, 2,000 distinct hypotheses: 800 + 3 × 400).</S>
			<S sid ="157" ssid = "104">Then each system computes the 1-best translation through rescoring and re-ranking its hypotheses list.</S>
			<S sid ="158" ssid = "105">For comparison purpose, the performance of rescoring on two sets of original N- best translations are also computed and they are applied based on 1,200 (RESC1) and 2,000 (RESC2) distinct hypotheses extracted from the decoder.</S>
			<S sid ="159" ssid = "106">For NIST task, we set N = 1,600, andM = 800, thus, RESC2 and COMB compute 1 System #hypo NIST’02 (dev) NIST’03 (test) NIST’05 (test) BLEU NIST BLEU NIST BLEU NIST 1-best 1 27.67 8.498 26.68 8.271 24.82 7.856 RESC1 2,400 28.13 8.519 27.09 8.312 25.29 7.868 RD 2,400 28.46 8.518 27.34 8.320 25.54 7.897 NE 2,400 28.52 8.539 27.47 8.329 25.65 7.907 CN 2,400 28.40 8.545 27.30 8.332 25.54 7.913 RESC2 4,000 28.27 8.522 27.21 8.320 25.43 7.875 COMB 4,000 28.92 8.602 27.78 8.401 26.04 7.994 Table 4: Translation performances (BLEU% and NIST scores) of NIST task: decoder (1-best), rescoring on original 2,400 N-best (RESC1) and 4,000 N-best hypotheses (RESC2), re-decoding (RD), n-gram expansion (NE), confusion network (CN) and combination of all hypotheses (COMB).</S>
			<S sid ="160" ssid = "107">1 Reference No tax is needed for this item . Thank you . RESC2 you don&apos;t have to do not need to pay duty on this . thank you . COMB (RD) not need to pay duty on this . thank you . 2 Reference Certainly . The fitting room is over there . Please come with me . RESC2 the fitting room is over there . can you come with me . COMB (NE) yes , you can . the fitting room is over there . please come with me . 3 Reference OK . I will bring it to you in five minutes . RESC2 a good five minutes , we will give you . COMB (CN) ok . after five minutes , i will give it to you . Table 5: Translations output by system RESC2 and COMB on IWSLT task (case-insensitive).</S>
			<S sid ="161" ssid = "108">best from 4,000 (1,600 + 3 × 800) distinct hypotheses.</S>
			<S sid ="162" ssid = "109">Our evaluation metrics are BLEU (Papineni et al., 2002) and NIST, which are to perform case insensitive matching of n-grams up to n = 4.</S>
			<S sid ="163" ssid = "110">The translation performance of IWSLT task and NIST task is reported in Tables 3 and 4 respectively.</S>
			<S sid ="164" ssid = "111">The row “1-best” reports the scores of the translations produced by the decoder.</S>
			<S sid ="165" ssid = "112">The column “#hypo” means the size of the N-best hy potheses involved in rescoring.</S>
			<S sid ="166" ssid = "113">Note that on top of the same global feature functions as mentioned in Section 4, the local feature functions used during decoding were also involved in res- coring RESC1 and RESC2.</S>
			<S sid ="167" ssid = "114">First of all, we note that both BLEU and NIST scores of the first decoding step were improved through rescoring.</S>
			<S sid ="168" ssid = "115">If rescoring was applied after regeneration on the N+M best lists, additional improvements were gained for all the development and test sets on all three regeneration systems.</S>
			<S sid ="169" ssid = "116">Absolute improvement on BLEU score of 0.40.6 on IWSLT’06 test set and 0.250.35 on NIST test sets were obtained when compared with system RESC1.</S>
			<S sid ="170" ssid = "117">Comparing the performance of three regeneration methods, we can see that re-decoding and confusion network based method achieved very similar improvement; while n-gram expansion based regeneration obtained slightly better improvement than the other two methods.</S>
			<S sid ="171" ssid = "118">Combining all regenerated hypotheses with the original hypotheses further increased the scores on both tasks.</S>
			<S sid ="172" ssid = "119">Compared with RESC2, system COMB obtained absolute improvement of 0.81 (31.36 – 30.55) BLEU score on IWSLT’06 test set, 0.57 (27.28 – 27.21) BLEU score on NIST’03 and 0.61 (26.04 – 25.43) BLEU score on NIST’05 respectively.</S>
			<S sid ="173" ssid = "120">We further illustrate the effectiveness of the regeneration mechanism using some translation examples obtained from system RESC2 and COMB as shown in Table 5.</S>
	</SECTION>
	<SECTION title="Discussion. " number = "6">
			<S sid ="174" ssid = "1">To better interpret the performance improvement; first let us check if the regeneration pass has produced better hypotheses.</S>
			<S sid ="175" ssid = "2">We computed the oracle scores on all four 1,200-best lists in IWSLT task.</S>
			<S sid ="176" ssid = "3">The oracle chooses the translation with the lowest word error rate (WER) with respect to the references in all cases.</S>
			<S sid ="177" ssid = "4">The results are reported in Table 6.</S>
			<S sid ="178" ssid = "5">It is worth noticing that the first 800- best (original N-best) hypotheses are the same in all four lists, with differences found only in the remaining 400 hypotheses (M-best).</S>
			<S sid ="179" ssid = "6">The consistent improvement of oracle scores shows that the translation candidates have been really improved.</S>
			<S sid ="180" ssid = "7">From another viewpoint, Table 7 shows the number of translations generated by each method in the final translation output (translations of COMB).</S>
			<S sid ="181" ssid = "8">After re-ranking N+3M entries, it is observed that more than 25% (e.g. for IWSLT’06 test set, (50+74+39)/500=32.6%; NIST’03 test set, (77+85+68)/919=25.1%; NIST’05 test set, (95+110+82)/1082=26.5%) of best scored outputs were generated by the regeneration pass, showing that new generated translations are quite often the rescoring winner.</S>
			<S sid ="182" ssid = "9">This also proved that the new-generated hypotheses contain better ones than the original ones.</S>
			<S sid ="183" ssid = "10">List BLEU NIST WER PER Dev.</S>
			<S sid ="184" ssid = "11">Moses 46.10 8.765 36.29 30.94 RD 46.91 8.764 35.29 30.62 NE 46.95 8.811 36.05 30.72 CN 46.85 8.769 36.17 30.83 Test Moses 45.09 8.403 37.07 32.04 RD 45.67 8.418 36.50 31.82 NE 45.82 8.481 36.44 31.70 CN 45.68 8.471 36.55 31.81 Table 6: Oracle scores (BLEU%, NIST, WER% and PER%) on IWSLT task 1,200-best lists of four systems: decoder (Moses), re-decoding (RD), n-gram expansion (NE) and confusion network (CN).</S>
			<S sid ="185" ssid = "12">tion model thus generate better hypotheses.</S>
			<S sid ="186" ssid = "13">N- gram expansion can (almost) fully exploit the search space of target strings, which can be generated by an n-gram LM.</S>
			<S sid ="187" ssid = "14">As a result, it can produce alternative translations which contain word re-orderings and phrase structures not considered by the search algorithm of the decoder (Chen, et al., 2007).</S>
			<S sid ="188" ssid = "15">Confusion network based regeneration reinforces the word choice by considering the posterior probabilities of words occur in the N- best translations.</S>
	</SECTION>
	<SECTION title="Conclusions. " number = "7">
			<S sid ="189" ssid = "1">In this paper, we proposed a novel three-pass SMT framework against the typical two-pass system.</S>
			<S sid ="190" ssid = "2">This framework enhanced the quality of the translation candidates generated by our proposed regeneration pass and improved the final translation performance.</S>
			<S sid ="191" ssid = "3">Three regeneration methods were introduced, namely, re-decoding, word-based n-gram expansion, and confusion network based regeneration.</S>
			<S sid ="192" ssid = "4">Experiments were based on the state-of-the-art phrase-based decoder and carried out on the IWSLT and NIST Chinese-to-English task.</S>
			<S sid ="193" ssid = "5">We showed that all three methods improved the performance with the n-gram expansion method achieving the greatest improvement.</S>
			<S sid ="194" ssid = "6">Moreover, the combination of the three methods further improves the performance.</S>
			<S sid ="195" ssid = "7">We conclude that translation performance can be improved by increasing the potential of translation candidates to contain better translations.</S>
			<S sid ="196" ssid = "8">We have presented an alternative solution to ameliorate the quality of translation candidates in a way that differs from system combination which takes translations from other MT systems.</S>
			<S sid ="197" ssid = "9">We demonstrated that the translation performance could be self-boosted by expanding the N- best list through hypotheses regeneration.</S>
	</SECTION>
</PAPER>
