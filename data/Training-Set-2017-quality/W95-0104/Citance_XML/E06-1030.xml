<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">Web text has been successfully used as training data for many NLP applications.</S>
		<S sid ="2" ssid = "2">While most previous work accesses web text through search engine hit counts, we created a Web Corpus by downloading web pages to create a topic-diverse collection of 10 billion words of English.</S>
		<S sid ="3" ssid = "3">We show that for context-sensitive spelling correction the Web Corpus results are better than using a search engine.</S>
		<S sid ="4" ssid = "4">For thesaurus extraction, it achieved similar overall results to a corpus of newspaper text.</S>
		<S sid ="5" ssid = "5">With many more words available on the web, better results can be obtained by collecting much larger web corpora.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="6" ssid = "6">Traditional written corpora for linguistics research are created primarily from printed text, such as newspaper articles and books.</S>
			<S sid ="7" ssid = "7">With the growth of the World Wide Web as an information resource, it is increasingly being used as training data in Natural Language Processing (NLP) tasks.</S>
			<S sid ="8" ssid = "8">There are many advantages to creating a corpus from web data rather than printed text.</S>
			<S sid ="9" ssid = "9">All web data is already in electronic form and therefore readable by computers, whereas not all printed data is available electronically.</S>
			<S sid ="10" ssid = "10">The vast amount of text available on the web is a major advantage, with Keller and Lapata (2003) estimating that over 98 billion words were indexed by Google in 2003.</S>
			<S sid ="11" ssid = "11">The performance of NLP systems tends to improve with increasing amount of training data.</S>
			<S sid ="12" ssid = "12">Banko and Brill (2001) showed that for context- sensitive spelling correction, increasing the training data size increases the accuracy, for up to 1 billion words in their experiments.</S>
			<S sid ="13" ssid = "13">To date, most NLP tasks that have utilised web data have accessed it through search engines, using only the hit counts or examining a limited number of results pages.</S>
			<S sid ="14" ssid = "14">The tasks are reduced to determining n-gram probabilities which are then estimated by hit counts from search engine queries.</S>
			<S sid ="15" ssid = "15">This method only gathers information from the hit counts but does not require the computationally expensive downloading of actual text for analysis.</S>
			<S sid ="16" ssid = "16">Unfortunately search engines were not designed for NLP research and the reported hit counts are subject to uncontrolled variations and approximations (Nakov and Hearst, 2005).</S>
			<S sid ="17" ssid = "17">Volk (2002) proposed a linguistic search engine to extract word relationships more accurately.</S>
			<S sid ="18" ssid = "18">We created a 10 billion word topic-diverse Web Corpus by spidering websites from a set of seed URLs.</S>
			<S sid ="19" ssid = "19">The seed set is selected from the Open Directory to ensure that a diverse range of topics is included in the corpus.</S>
			<S sid ="20" ssid = "20">A process of text cleaning transforms the HTML text into a form useable by most NLP systems – tokenised words, one sentence per line.</S>
			<S sid ="21" ssid = "21">Text filtering removes unwanted text from the corpus, such as non-English sentences and most lines of text that are not grammatical sentences.</S>
			<S sid ="22" ssid = "22">We compare the vocabulary of the Web Corpus with newswire.</S>
			<S sid ="23" ssid = "23">Our Web Corpus is evaluated on two NLP tasks.</S>
			<S sid ="24" ssid = "24">Context-sensitive spelling correction is a disambiguation problem, where the correction word in aconfusion set (e.g. {their, they’re}) needs to be se lected for a given context.</S>
			<S sid ="25" ssid = "25">Thesaurus extraction is a similarity task, where synonyms of a target word are extracted from a corpus of unlabelled text.</S>
			<S sid ="26" ssid = "26">Our evaluation demonstrates that web text can be used for the same tasks as search engine hit counts and newspaper text.</S>
			<S sid ="27" ssid = "27">However, there is a much larger quantity of freely available web text to exploit.</S>
	</SECTION>
	<SECTION title="Existing Web Corpora. " number = "2">
			<S sid ="28" ssid = "1">The web has become an indispensible resource with a vast amount of information available.</S>
			<S sid ="29" ssid = "2">Many NLP tasks have successfully utilised web data, including machine translation (Grefenstette, 1999), prepositional phrase attachment (Volk, 2001), and other-anaphora resolution (Modjeska et al., 2003).</S>
			<S sid ="30" ssid = "3">2.1 Search Engine Hit Counts.</S>
			<S sid ="31" ssid = "4">Most NLP systems that have used the web access it via search engines such as Altavista and Google.</S>
			<S sid ="32" ssid = "5">N-gram counts are approximated by literal queries “w1 ... wn”.</S>
			<S sid ="33" ssid = "6">Relations between two words are approximated in Altavista by the NEAR operator (which locates word pairs within 10 tokens of each other).</S>
			<S sid ="34" ssid = "7">The overall coverage of the queries can be expanded by morphological expansion of the search terms.</S>
			<S sid ="35" ssid = "8">Keller and Lapata (2003) demonstrated a high degree of correlation between n-gram estimates from search engine hit counts and n-gram frequencies obtained from traditional corpora such as the British National Corpus (BNC).</S>
			<S sid ="36" ssid = "9">The hit counts also had a higher correlation to human plausibility judgements than the BNC counts.</S>
			<S sid ="37" ssid = "10">The web count method contrasts with traditional methods where the frequencies are obtained from a corpus of locally available text.</S>
			<S sid ="38" ssid = "11">While the corpus is much smaller than the web, an accurate count and further text processing is possible because all of the contexts are readily accessible.</S>
			<S sid ="39" ssid = "12">The web count method obtains only an approximate number of matches on the web, with no control over which pages are indexed by the search engines and with no further analysis possible.</S>
			<S sid ="40" ssid = "13">There are a number of limitations in the search engine approximations.</S>
			<S sid ="41" ssid = "14">As many search engines discard punctuation information (especially when using the NEAR operator), words considered adjacent to each other could actually lie in different sentences or paragraphs.</S>
			<S sid ="42" ssid = "15">For example in Volk (2001), the system assumes that a preposition at- taches to a noun simply when the noun appears within a fixed context window of the preposition.</S>
			<S sid ="43" ssid = "16">The preposition and noun could in fact be related differently or be in different sentences altogether.</S>
			<S sid ="44" ssid = "17">The speed of querying search engines is another concern.</S>
			<S sid ="45" ssid = "18">Keller and Lapata (2003) needed to obtain the frequency counts of 26,271 test adjective pairs from the web and from the BNC for the task of prenominal adjective ordering.</S>
			<S sid ="46" ssid = "19">While extract ing this information from the BNC presented no difficulty, making so many queries to the Altavista was too time-consuming.</S>
			<S sid ="47" ssid = "20">They had to reduce the size of the test set to obtain a result.</S>
			<S sid ="48" ssid = "21">Lapata and Keller (2005) performed a wide range of NLP tasks using web data by querying Altavista and Google.</S>
			<S sid ="49" ssid = "22">This included variety of generation tasks (e.g. machine translation candidate selection) and analysis tasks (e.g. prepositional phrase attachment, countability detection).</S>
			<S sid ="50" ssid = "23">They showed that while web counts usually outperformed BNC counts and consistently outperformed the baseline, the best performing system is usually a supervised method trained on annotated data.</S>
			<S sid ="51" ssid = "24">Keller and Lapata concluded that having access linguistic information (accurate n-gram counts, POS tags, and parses) outperforms using a large amount of web data.</S>
			<S sid ="52" ssid = "25">2.2 Spidered Web Corpora.</S>
			<S sid ="53" ssid = "26">A few projects have utilised data downloaded from the web.</S>
			<S sid ="54" ssid = "27">Ravichandran et al.</S>
			<S sid ="55" ssid = "28">(2005) used a collection of 31 million web pages to produce noun similarity lists.</S>
			<S sid ="56" ssid = "29">They found that most NLP algorithms are unable to run on web scale data, especially those with quadratic running time.</S>
			<S sid ="57" ssid = "30">Halacsy et al.</S>
			<S sid ="58" ssid = "31">(2004) created a Hungarian corpus from the web by downloading text from the .hu domain.</S>
			<S sid ="59" ssid = "32">From a 18 million page crawl of the web a 1 billion word corpus is created (removing duplicates and non-Hungarian text).</S>
			<S sid ="60" ssid = "33">A terabyte-sized corpus of the web was collected at the University of Waterloo in 2001.</S>
			<S sid ="61" ssid = "34">A breadth first search from a seed set of university home pages yielded over 53 billion words, requiring 960GB of storage.</S>
			<S sid ="62" ssid = "35">Clarke et al.</S>
			<S sid ="63" ssid = "36">(2002) and Terra and Clarke (2003) used this corpus for their question answering system.</S>
			<S sid ="64" ssid = "37">They obtained increasing performance with increasing corpus size but began reaching asymptotic behaviour at the 300500GB range.</S>
	</SECTION>
	<SECTION title="Creating the Web Corpus. " number = "3">
			<S sid ="65" ssid = "1">There are many challenges in creating a web corpus, as the World Wide Web is unstructured and without a definitive directory.</S>
			<S sid ="66" ssid = "2">No simple method exists to collect a large representative sample of the web.</S>
			<S sid ="67" ssid = "3">Two main approaches exist for collecting representative web samples – IP address sampling and random walks.</S>
			<S sid ="68" ssid = "4">The IP address sampling technique randomly generates IP addresses and explores any websites found (Lawrence and Giles, 1999).</S>
			<S sid ="69" ssid = "5">This method requires substantial resources as many attempts are made for each website found.</S>
			<S sid ="70" ssid = "6">Lawrence and Giles reported that 1 in 269 tries found a web server.</S>
			<S sid ="71" ssid = "7">Random walk techniques attempt to simulate a regular undirected web graph (Henzinger et al., 2000).</S>
			<S sid ="72" ssid = "8">In such a graph, a random walk would produce a uniform sample of the nodes (i.e. the web pages).</S>
			<S sid ="73" ssid = "9">However, only an approximation of such a graph is possible, as the web is directed (i.e. you cannot easily determine all web pages linking to a particular page).</S>
			<S sid ="74" ssid = "10">Most implementations of random walks approximates the number of backward links by using information from search engines.</S>
			<S sid ="75" ssid = "11">3.1 Web Spidering.</S>
			<S sid ="76" ssid = "12">We created a 10 billion word Web Corpus by spidering the web.</S>
			<S sid ="77" ssid = "13">While the corpus is not designed to be a representative sample of the web, we attempt to sample a topic-diverse collection of web sites.</S>
			<S sid ="78" ssid = "14">Our web spider is seeded with links from the Open Directory1.</S>
			<S sid ="79" ssid = "15">The Open Directory has a broad coverage of many topics on the web and allows us to create a topic-diverse collection of pages.</S>
			<S sid ="80" ssid = "16">Before the directory can be use, we had to address several coverage skews.</S>
			<S sid ="81" ssid = "17">Some topics have many more links in the Open Directory than others, simply due to the availability of editors for different topics.</S>
			<S sid ="82" ssid = "18">For example, we found that the topic University of Connecticut has roughly the same number of links as Ontario Universities.</S>
			<S sid ="83" ssid = "19">We would normally expect universities in a whole province of Canada to have more coverage than a single university in the United States.</S>
			<S sid ="84" ssid = "20">The directory was also constructed without keeping more general topics higher in the tree.</S>
			<S sid ="85" ssid = "21">For example, we found that Chicken Salad is higher in the hierarchy than Catholicism.</S>
			<S sid ="86" ssid = "22">The Open Directory is flattened by a rule-based algorithm which is designed to take into account the coverage skews of some topics to produce a list of 358 general topics.</S>
			<S sid ="87" ssid = "23">From the seed URLs, the spider performs a breadth-first search.</S>
			<S sid ="88" ssid = "24">It randomly selects a topic node from the list and next unvisited URL from the node.</S>
			<S sid ="89" ssid = "25">It visits the website associated from the link and samples pages within the same section of the website until a minimum number of words have been collected or all of the pages were visited.</S>
			<S sid ="90" ssid = "26">1 The Open Directory Project, http://www.dmoz.org.</S>
			<S sid ="91" ssid = "27">External links encountered during this process are added to the link collection of the topic node regardless of the actual topic of the link.</S>
			<S sid ="92" ssid = "28">Although websites of one topic tends to link to other websites of the same topic, this process contributes to a topic drift.</S>
			<S sid ="93" ssid = "29">As the spider traverses away from the original seed URLs, we are less certain of the topic included in the collection.</S>
			<S sid ="94" ssid = "30">3.2 Text Cleaning.</S>
			<S sid ="95" ssid = "31">Text cleaning is the term we used to describe the overall process of converting raw HTML found on the web into a form useable by NLP algorithms – white space delimited words, separated into one sentence per line.</S>
			<S sid ="96" ssid = "32">It consists of many low-level processes which are often accomplished by simple rule-based scripts.</S>
			<S sid ="97" ssid = "33">Our text cleaning process is divided into four major steps.</S>
			<S sid ="98" ssid = "34">First, different character encoding of HTML pages are transform into ISO Latin1 and HTML named-entities (e.g. &amp;nbsp; and &amp;amp;) translated into their single character equivalents.</S>
			<S sid ="99" ssid = "35">Second, sentence boundaries are marked.</S>
			<S sid ="100" ssid = "36">Such boundaries are difficult to identify on web text as it does not always consists of grammatical sentences.</S>
			<S sid ="101" ssid = "37">A section of a web page may be mathematical equations or lines of C++ code.</S>
			<S sid ="102" ssid = "38">Grammatical sentences need to be separated from each other and from other non-sentence text.</S>
			<S sid ="103" ssid = "39">Sentence boundary detection for web text is a much harder problem than newspaper text.</S>
			<S sid ="104" ssid = "40">We use a machine learning approach to identifying sentence boundaries.</S>
			<S sid ="105" ssid = "41">We trained a Maximum Entropy classifier following Ratnaparkhi (1998) to disambiguate sentence boundary on web text, training on 153 manually marked web pages.</S>
			<S sid ="106" ssid = "42">Systems for newspaper text only use regular text features, such as words and punctuations.</S>
			<S sid ="107" ssid = "43">Our system for web text uses HTML tag features in addition to regular text features.</S>
			<S sid ="108" ssid = "44">HTML tag features are essential for marking sentence boundaries in web text, as many boundaries in web text are only indicated by HTML tags and not by the text.</S>
			<S sid ="109" ssid = "45">Our system using HTML tag features achieves 95.1% accuracy in disambiguating sentence boundaries in web text compared to 88.9% without using such features.</S>
			<S sid ="110" ssid = "46">Third, tokenisation is accomplished using the sed script used for the Penn Treebank project (MacIntyre, 1995), modified to correctly tokenise URLs, emails, and other web-specific text.</S>
			<S sid ="111" ssid = "47">The final step is filtering, where unwanted text is removed from the corpus.</S>
			<S sid ="112" ssid = "48">A rule-based component analyses each web page and each sentence within a page to identify sections that are unlikely to be useful text.</S>
			<S sid ="113" ssid = "49">Our rules are similar to those employed by Halacsy et al.</S>
			<S sid ="114" ssid = "50">(2004), where the percentage of non-dictionary words in a sentence or document helps identify non-Hungarian text.</S>
			<S sid ="115" ssid = "51">We classify tokens into dictionary words, word-like tokens, numbers, punctuation, and other tokens.</S>
			<S sid ="116" ssid = "52">Sentences or documents with too few dictionary words or too many numbers, punctuation, or other tokens are discarded.</S>
	</SECTION>
	<SECTION title="Corpus Statistics. " number = "4">
			<S sid ="117" ssid = "1">Comparing the vocabulary of the Web Corpus and existing corpora is revealing.</S>
			<S sid ="118" ssid = "2">We compared with the Gigaword Corpus, a 2 billion token collection (1.75 billion words before tokenisation) of newspaper text (Graff, 2003).</S>
			<S sid ="119" ssid = "3">For example, what types of tokens appears more frequently on the web than in newspaper text?</S>
			<S sid ="120" ssid = "4">From each corpus, we randomly select a 1 billion word sample and classified the tokens into seven disjoint categories: Numeric – At least one digit and zero or more punctuation characters, e.g. 2, 3.14, $5.50 Uppercase – Only uppercase, e.g. REUTERS Title Case – An uppercase letter followed by one or more lowercase letters, e.g. Dilbert Lowercase – Only lowercase, e.g. violin Alphanumeric – At least one alphabetic and one digit (allowing for other characters), e.g. B2B, mp3, RedHat9 Hyphenated Word – Alphabetic characters and hyphens, e.g. serb-dominated, visa-vis Other – Any other tokens 4.1 Token Type Analysis.</S>
			<S sid ="121" ssid = "5">An analysis by token type shows big differences between the two corpora (see Table 1).</S>
			<S sid ="122" ssid = "6">The same size samples of the Gigaword and the Web Corpus have very different number of token types.</S>
			<S sid ="123" ssid = "7">Title case tokens is a significant percentage of the token types encountered in both corpora, possibly representing named-entities in the text.</S>
			<S sid ="124" ssid = "8">There are also a significant number of tokens classified as others in the Web Corpus, possibly representing URLs and email addresses.</S>
			<S sid ="125" ssid = "9">While 2.2 million token types are found in the 1 billion word sample of the Giga- word, about twice as many (4.8 million) are found in an equivalent sample of the Web Corpus.</S>
			<S sid ="126" ssid = "10">G i g a w o r d W e b C o r p u s T o k e n s T o ke n T y pe s 1 b i l l i o n 2 . 2 m i l l i o n 1 b i l l i o n 4 . 8 m i l l i o n N u m e r i c U p p e r c a s e T it l e C a s e L o w e r c a s e A l p h an u m e r i c H y p h e n a t e d O t h e r 34 3k 15.6% 9 5 k 4.3% 64 5k 29.3% 26 3k 12.0% 16 5k 7.6% 53 3k 24.3% 15 0k 6.8% 3 7 4 k 7.7% 2 4 1 k 5.0% 9 4 6 k 19.6% 7 3 4 k 15.2% 4 1 7 k 8.6% 9 7 0 k 20.1% 1, 14 6k 23.7% Table 1: Classification of corpus token by type G i g a w o r d W eb C or pu s r r e c e i v e r e c c e i v e r e c e i e v e r e c i v e r e c e i v re ec ei ve re c e si v e re ci ei v e re c ei v c e re c ei v e e re c ei v e a rc ei v e r e c e i e v e r e c i v e r e c v e i v e r e c e i v v e r e c e v e r e c e i v r e y c e i v e 1 . 7 m i s s p e l l i n g s p e r d i c t i o n a r y w o r d 3.7 mi ssp elli ng s per dic tio nar y wo rd 3.</S>
			<S sid ="127" ssid = "11">1 m m is sp el li n gs in 6 9 9 m d i c t . w o r d s 5.6m missp elling s in 66 9m dic t. wo rds Table 2: Misspellings of receive 4.2 Misspelling One factor contributing to the larger number of token types in the Web Corpus, as compared with the Gigaword, is the misspelling of words.</S>
			<S sid ="128" ssid = "12">Web documents are authored by people with a widely varying command of English and their pages are not as carefully edited as newspaper articles.</S>
			<S sid ="129" ssid = "13">Thus, we anticipate a significantly larger number of misspellings and typographical errors.</S>
			<S sid ="130" ssid = "14">We identify some of the misspellings by letter combinations that are one transformation away from a correctly spelled word.</S>
			<S sid ="131" ssid = "15">Consider a target word, correctly spelled.</S>
			<S sid ="132" ssid = "16">Misspellings can be generated by inserting, deleting, or substituting one letter, or by reordering any two adjacent letters (although we keep the first letter of the original word, as very few misspellings change the first letter).</S>
			<S sid ="133" ssid = "17">Table 2 shows some of the misspellings of the word receive found in the Gigaword and the Web Corpus.</S>
			<S sid ="134" ssid = "18">While only 5 such misspellings were found in the Gigaword, 16 were found in the Web Al go rit h m Tr ai ni ng Te sti ng A A W A A U np ru ne d W in no w Br o w n 80 % Br o w n 20 % 94 .1 9 6.</S>
			<S sid ="135" ssid = "19">4 U np ru ne d W in no w Br o w n 80 % W SJ 40 % 89 .5 9 4.</S>
			<S sid ="136" ssid = "20">5 W in no w Se mi Su p. Br o w n 80 % * W SJ 40 % 93 .1 9 6.</S>
			<S sid ="137" ssid = "21">6 Se ar ch En gi ne Al ta vis ta Br o w n 10 0 % 89 .3 N / A Table 3: Context-sensitive spelling correction (* denotes also using 60% WSJ, 5% corrupted) Corpus.</S>
			<S sid ="138" ssid = "22">For all words found in the Unix dictionary, an average of 1.7 misspellings are found per word in the Gigaword by type.</S>
			<S sid ="139" ssid = "23">The proportion of mistakes found in the Web Corpus is roughly double that of the Gigaword, at 3.7 misspellings per dictionary word.</S>
			<S sid ="140" ssid = "24">However, misspellings only represent a small portion of tokens (5.6 million out of 699 million instances of dictionary word are misspellings in the Web Corpus).</S>
	</SECTION>
	<SECTION title="Context-Sensitive Spelling Correction. " number = "5">
			<S sid ="141" ssid = "1">A confusion set is a collection of words which are commonly misused by even native speakers of a language because of their similarity.</S>
			<S sid ="142" ssid = "2">For example, the words {it’s, its}, {affect, effect},and {weather, whether} are often mistakenly inter changed.</S>
			<S sid ="143" ssid = "3">Context-sensitive spelling correction is the task of selecting the correct confusion word in a given context.</S>
			<S sid ="144" ssid = "4">Two different metrics have been used to evaluate the performance of context- sensitive spelling correction algorithms.</S>
			<S sid ="145" ssid = "5">The Average Accuracy (AA) is the performance by type whereas the Weighted Average Accuracy (WAA) is the performance by token.</S>
			<S sid ="146" ssid = "6">5.1 Related Work.</S>
			<S sid ="147" ssid = "7">Golding and Roth (1999) used the Winnow multiplicative weight-updating algorithm for context- sensitive spelling correction.</S>
			<S sid ="148" ssid = "8">They found that when a system is tested on text from a different from the training set the performance drops substantially (see Table 3).</S>
			<S sid ="149" ssid = "9">Using the same algorithm and 80% of the Brown Corpus, the WAA dropped from 96.4% to 94.5% when tested on 40% WSJ instead of 20% Brown.</S>
			<S sid ="150" ssid = "10">For cross corpus experiments, Golding and Roth devised a semi-supervised algorithm that is trained on a fixed training set but also extracts information from the same corpus as the testing set.</S>
			<S sid ="151" ssid = "11">Their experiments showed that even if up to 20% of the testing set is corrupted (using wrong confusion words), a system that trained on both the training and testing sets outperformed the system that only trained on the training set.</S>
			<S sid ="152" ssid = "12">The Winnow Semi-Supervised method increases the WAA back up to 96.6%.</S>
			<S sid ="153" ssid = "13">Lapata and Keller (2005) utilised web counts from Altavista for confusion set disambiguation.</S>
			<S sid ="154" ssid = "14">Their unsupervised method uses collocation features (one word to the left and right) where co-occurrence estimates are obtained from web counts of bigrams.</S>
			<S sid ="155" ssid = "15">This method achieves a stated accuracy of 89.3% AA, similar to the cross corpus experiment for Unpruned Winnow.</S>
			<S sid ="156" ssid = "16">5.2 Implementation.</S>
			<S sid ="157" ssid = "17">Context-sensitive spelling correction is an ideal task for unannotated web data as unmarked text is essentially labelled data for this particular task, as words in a reasonably well-written text are positive examples of the correct usage of confusion words.</S>
			<S sid ="158" ssid = "18">To demonstrate the utility of a large collection of web data on a disambiguation problem, we implemented the simple memory-based learner from Banko and Brill (2001).</S>
			<S sid ="159" ssid = "19">The learner trains on simple collocation features, keeping a count of (wi−1,wi+1), wi−1, and wi+1 for each confusion word wi.</S>
			<S sid ="160" ssid = "20">The classifier first chooses the confusion word which appears with the context bigram most frequently, followed by the left unigram, right uni- gram, and then the most frequent confusion word.</S>
			<S sid ="161" ssid = "21">Three data sets were used in the experiments: the 2 billion word Gigaword Corpus, a 2 billion word sample of our 10 billion word Web Corpus, and the full 10 billion word Web Corpus.</S>
			<S sid ="162" ssid = "22">5.3 Results.</S>
			<S sid ="163" ssid = "23">Our experiments compare the results when the three corpora were trained using the same algorithm.</S>
			<S sid ="164" ssid = "24">The memory-based learner was tested using the 18 confusion word sets from Golding (1995) on the WSJ section of the Penn Treebank and the Brown Corpus.</S>
			<S sid ="165" ssid = "25">For the WSJ testing set, the 2 billion word Web Corpus does not achieve the performance of the Gigaword (see Table 4).</S>
			<S sid ="166" ssid = "26">However, the 10 billion word Web Corpus results approach that of the Gigaword.</S>
			<S sid ="167" ssid = "27">Training on the Gigaword and testing Tr ai ni ng Te sti ng A A W A A Gi ga w or d 2 bil lio n W SJ 10 0 % 93 .7 9 6.</S>
			<S sid ="168" ssid = "28">1 W eb Co rp us 2 bil lio n W SJ 10 0 % 92 .7 9 4.</S>
			<S sid ="169" ssid = "29">1 W eb Co rp us 10 bil lio n W SJ 10 0 % 93 .3 9 5.</S>
			<S sid ="170" ssid = "30">1 Gi ga w or d 2 bil lio n Br o w n 10 0 % 90 .7 9 4.</S>
			<S sid ="171" ssid = "31">6 W eb Co rp us 2 bil lio n Br o w n 10 0 % 90 .8 9 4.</S>
			<S sid ="172" ssid = "32">8 W eb Co rp us 10 bil lio n Br o w n 10 0 % 91 .8 9 5.</S>
			<S sid ="173" ssid = "33">4 Table 4: Memory-based learner results on WSJ is not considered a true cross-corpus experiment, as the two corpora belong to the same genre of newspaper text.</S>
			<S sid ="174" ssid = "34">Compared to the Winnow method, the 10 billion word Web Corpus outperforms the cross corpus experiment but not the semi-supervised method.</S>
			<S sid ="175" ssid = "35">For the Brown Corpus testing set, the 2 billion word Web Corpus and the 2 billion word Giga- word achieved similar results.</S>
			<S sid ="176" ssid = "36">The 10 billion word Web Corpus achieved 95.4% WAA, higher than the 94.6% from the 2 billion Gigaword.</S>
			<S sid ="177" ssid = "37">This and the above result with the WSJ suggests that the Web Corpus approach is comparable with training on a corpus of printed text such as the Gigaword.</S>
			<S sid ="178" ssid = "38">The 91.8% AA of the 10 billion word Web Corpus testing on the WSJ is better than the 89.3% AA achieved by Lapata and Keller (2005) using the Altavista search engine.</S>
			<S sid ="179" ssid = "39">This suggests that a web collected corpus may be a more accurate method of estimating n-gram frequencies than through search engine hit counts.</S>
	</SECTION>
	<SECTION title="Thesaurus Extraction. " number = "6">
			<S sid ="180" ssid = "1">Thesaurus extraction is a word similarity task.</S>
			<S sid ="181" ssid = "2">It is a natural candidate for using web corpora as most systems extract synonyms of a target word from an unlabelled corpus.</S>
			<S sid ="182" ssid = "3">Automatic thesaurus extraction is a good alternative to manual construction methods, as such thesauri can be updated more easily and quickly.</S>
			<S sid ="183" ssid = "4">They do not suffer from bias, low coverage, and inconsistency that human creators of thesauri introduce.Thesauri are useful in many NLP and Informa expand the coverage of system but providing alternatives to the inputed search terms.</S>
			<S sid ="184" ssid = "5">For n-gram estimation using search engine queries, some NLP applications can boost the hit count by offering alternative combination of terms.</S>
			<S sid ="185" ssid = "6">This is especially helpful if the initial hit counts are too low to be reliable.</S>
			<S sid ="186" ssid = "7">In IR applications, synonyms of search terms help identify more relevant documents.</S>
			<S sid ="187" ssid = "8">6.1 Method.</S>
			<S sid ="188" ssid = "9">We use the thesaurus extraction system implemented in Curran (2004).</S>
			<S sid ="189" ssid = "10">It operates on the dis- tributional hypothesis that similar words appear in similar contexts.</S>
			<S sid ="190" ssid = "11">This system only extracts one word synonyms of nouns (and not multi-word expressions or synonyms of other parts of speech).</S>
			<S sid ="191" ssid = "12">The extraction process is divided into two parts.</S>
			<S sid ="192" ssid = "13">First, target nouns and their surrounding contexts are encoded in relation pairs.</S>
			<S sid ="193" ssid = "14">Six different types of relationships are considered: • Between a noun and a modifying adjective • Between a noun and a noun modifier • Between a verb and its subject • Between a verb and its direct object • Between a verb and its indirect object • Between a noun and the head of a modifying prepositional phrase The nouns (including subject and objects) are the target headwords and the relationships are represented in context vectors.</S>
			<S sid ="194" ssid = "15">In the second stage of the extraction process, a comparison is made between context vectors of headwords in the corpus to determine the most similar terms.</S>
			<S sid ="195" ssid = "16">6.2 Evaluation.</S>
			<S sid ="196" ssid = "17">The evaluation of a list of synonyms of a target word is subject to human judgement.</S>
			<S sid ="197" ssid = "18">We use the evaluation method of Curran (2004), against gold standard thesauri results.</S>
			<S sid ="198" ssid = "19">The gold standard list is created by combining the terms found in four thesauri: Macquarie, Moby, Oxford and Roget’s. The inverse rank (InvR) metric allows a comparison to be made between the extracted rank list of synonyms and the unranked gold standard list.</S>
			<S sid ="199" ssid = "20">For example, if the extracted terms at ranks 3, 5, and 28 are found in the gold standard list, then tion Retrieval (IR) applications.</S>
			<S sid ="200" ssid = "21">Synonyms help I nvR = 1 + 1 + 1 ∼= 0.569.</S>
			<S sid ="201" ssid = "22">3 5 28 C o r p u s IN V R IN V R M A X G i g a w o r d W eb C or p us 1.</S>
			<S sid ="202" ssid = "23">8 6 1.</S>
			<S sid ="203" ssid = "24">8 1 5 . 9 2 5 . 9 2 Table 5: Average IN V R for 300 headwords 6.3 Results We used the same 300 evaluation headwords as Curran (2004) and extracted the top 200 synonyms for each headword.</S>
			<S sid ="204" ssid = "25">The evaluation headwords were extracted from two corpora for comparison – a 2 billion word sample of our Web Corpus and the 2 billion words in the Gigaword Corpus.</S>
			<S sid ="205" ssid = "26">Table 5 shows the average InvR scores over the 300 headwords for the two corpora – one of web text and the other newspaper text.</S>
			<S sid ="206" ssid = "27">The InvR values differ by a negligible 0.05 (out of a maximum of 5.92).</S>
			<S sid ="207" ssid = "28">6 . 4 A n a l y s i s . However on a per word basis one corpus can sigif icantly outperform the other.</S>
			<S sid ="208" ssid = "29">Table 6 ranks the 300 headwords by difference in the InvR score.</S>
			<S sid ="209" ssid = "30">While much better results were extracted for words like home from the Gigaword, much better results were extracted for words like chain from the Web CorTable 6: InvR scores ranked by difference, Giga word to Web Corpus Gi ga wo rd (24 ma tch es out of 20 0) h o us e a p ar t m e nt b ui ld in g ru n of fi ce re si d e nt re si d e n ce h e a d q u ar te rs vi ct or y na ti ve pl ac e m an si o n ro o m tri p m il e fa m il y ni g ht h o m et o w n to w n w in ne ig h b or h o o d lif e su bur b sc h o ol re st au ra nt h ot el st or e ci ty st re et se as o n ar ea ro ad h o m er da y ca r sh o p h os pi ta l fri en d ga m e fa r m fa ci lit y ce n- te r n or th ch il d la n d w ee ke n d co m m u ni ty lo ss re tu rn h o ur . . .</S>
			<S sid ="210" ssid = "31">We b Co rpu s (18 ma tch es out of 20 0) p a g e lo a n c o nt ac t h o us e us o w n er se ar c h fi n a n ce m or tg a g e of fi ce m ap li n ks b ui ld in g fa q eq ui ty ne w s ce nt er es ta te pr i- va cy co m m u ni ty in fo b us in es s ca r sit e w eb i m pr o ve m en t ex te nt io n he at in g ra te di re ct or y ro o m a p ar t m e nt fa m il y se rv ic e re nt al cr ed it sh o p lif e ci ty sc h o ol pr o p er ty pl ac e lo ca ti o n jo b o nl in e va ca ti o n st or e fa ci lit y li br ar y fr ee . . .</S>
			<S sid ="211" ssid = "32">Table 7: Synonyms for home Gi ga wo rd (9 ma tch es out of 20 0) st or e re ta il er su p er m ar ke t re st a ur a nt o ut le t o p er at or sh o p sh el f o w ne r gr oc er y co m pa n y h ot el m an uf ac tu re r re ta il fr an ch is e cl er k m ak er di sc o u nt b us in es s sa le su pe rs to re br an d cl ot hi n g fo o d gi an t sh o p pi n g fir m re ta ili n g in d us tr y dr u gs to re di st ri b ut or su p pl ie r ba r in su re r in c. c o n gl o m er - at e ne t w or k u ni t ap pa re l b o ut iq ue m al l el ec tr o ni cs ca rri er di vi si o n br o ke ra ge to y pr o d uc er p ha r m ac y ai rli ne in c . . .</S>
			<S sid ="212" ssid = "33">We b Co rpu s (53 ma tch es out of 20 0) n ec kl ac e su p pl y br ac el et p e n d a nt ro p e b el t ri n g e ar ri n g g ol d be ad sil ve r pi n w ir e co rd re ac ti o n cl as p je w el ry ch ar m fr a m e ba n gl e st ra p st er li n g lo o p ti m in g pl at e m et al co ll ar tu rn h o o k ar m le n gt h st ri n g re ta il er re pa ir st ra n d pl u g di a m o n d w he el in d us tr y tu be su rf ac e ne ck b ro o c h st or e m ol ec ul e ri b b o n p u m p ch o ke r sh af t b o d y . . .</S>
			<S sid ="213" ssid = "34">Table 8: Synonyms for chain pus.</S>
			<S sid ="214" ssid = "35">Table 7 shows the top 50 synoyms extracted for the headword home from the Gigaword and the Web Corpus.</S>
			<S sid ="215" ssid = "36">While similar number of correct synonyms were extracted from both corpora, the Gigaword matches were higher in the extracted list and received a much higher InvR score.</S>
			<S sid ="216" ssid = "37">In the list extracted from the Web Corpus, web-related collocations such as home page and search home appear.</S>
			<S sid ="217" ssid = "38">Table 8 shows the top 50 synoyms extracted for the headword chain from both corpora.</S>
			<S sid ="218" ssid = "39">While there are only a total of 9 matches from the Giga- word Corpus, there are 53 matches from the Web Corpus.</S>
			<S sid ="219" ssid = "40">A closer examination shows that the synonyms extracted from the Gigaword belong only to one sense of the word chain, as in chain stores.</S>
			<S sid ="220" ssid = "41">The gold standard list and the Web Corpus results both contain the necklace sense of the word chain.</S>
			<S sid ="221" ssid = "42">The Gigaword results show a skew towards the business sense of the word chain, while the Web Corpus covers both senses of the word.</S>
			<S sid ="222" ssid = "43">While individual words can achieve better results in either the Gigaword or the Web Corpus than the other, the aggregate results of synonym extraction for the 300 headwords are the same.</S>
			<S sid ="223" ssid = "44">For this task, the Web Corpus can replace the Giga- word without affecting the overall result.</S>
			<S sid ="224" ssid = "45">However, as some words are perform better under different corpora, an aggregate of the Web Corpus and the Gigaword may produce the best result.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "7">
			<S sid ="225" ssid = "1">In this paper, the accuracy of natural language application training on a 10 billion word Web Corpus is compared with other methods using search engine hit counts and corpora of printed text.</S>
			<S sid ="226" ssid = "2">In the context-sensitive spelling correction task, a simple memory-based learner trained on our Web Corpus achieved better results than method based on search engine queries.</S>
			<S sid ="227" ssid = "3">It also rival some of the state-of-the-art systems, exceeding the accuracy of the Unpruned Winnow method (the only other true cross-corpus experiment).</S>
			<S sid ="228" ssid = "4">In the task of thesaurus extraction, the same overall results are obtained extracting from the Web Corpus as a traditional corpus of printed texts.</S>
			<S sid ="229" ssid = "5">The Web Corpus contrasts with other NLP approaches that access web data through search engine queries.</S>
			<S sid ="230" ssid = "6">Although the 10 billion words Web Corpus is smaller than the number of words indexed by search engines, better results have been achieved using the smaller collection.</S>
			<S sid ="231" ssid = "7">This is due to the more accurate n-gram counts in the downloaded text.</S>
			<S sid ="232" ssid = "8">Other NLP tasks that require further analysis of the downloaded text, such a PP attachment, may benefit more from the Web Corpus.</S>
			<S sid ="233" ssid = "9">We have demonstrated that carefully collected and filtered web corpora can be as useful as newswire corpora of equivalent sizes.</S>
			<S sid ="234" ssid = "10">Using the same framework describe here, it is possible to collect a much larger corpus of freely available web text than our 10 billion word corpus.</S>
			<S sid ="235" ssid = "11">As NLP algorithms tend to perform better when more data is available, we expect state-of-the-art results for many tasks will come from exploiting web text.</S>
	</SECTION>
	<SECTION title="Acknowledgements">
			<S sid ="236" ssid = "12">We like to thank our anonymous reviewers and the Language Technology Research Group at the University of Sydney for their comments.</S>
			<S sid ="237" ssid = "13">This work has been supported by the Australian Research Council under Discovery Project DP0453131.</S>
	</SECTION>
</PAPER>
