This paper discusses Foma, a finite state compiler, programming language, and regular expression or finite-state library designed for multi-purpose use with explicit support for automata theoretic research, constructing lexical analyzers for programming languages, and building morphological or phonological analyzers and spellchecking applications.  The aim of Foma is to provide specific support for many natural language processing applications such as producing morphological and phonological analyzers. Foma is licensed under the GNU general public license: in keeping with traditions of free software, the distribution that includes the source code comes with a user manual and a library of examples. Though the main concern with Foma has not been that of efficiency, but of compatibility and extendibility, from a usefulness perspective it is important to avoid bottlenecks in the underlying algorithms that can cause compilation times to skyrocket, especially when constructing and combining large lexical transducers. Several widecoverage morphological analyzers specified in the LEXC/xfst format have been compiled successfully with Foma.