<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">We present an approach to pronoun resolution based on syntactic paths.</S>
		<S sid ="2" ssid = "2">Through a simple bootstrapping procedure, we learn the likelihood of coreference between a pronoun and a candidate noun based on the path in the parse tree between the two entities.</S>
		<S sid ="3" ssid = "3">This path information enables us to handle previously challenging resolution instances, and also robustly addresses traditional syntactic coreference constraints.</S>
		<S sid ="4" ssid = "4">Highly coreferent paths also allow mining of precise probabilistic gender/number information.</S>
		<S sid ="5" ssid = "5">We combine statistical knowledge with well known features in a Support Vector Machine pronoun resolution classifier.</S>
		<S sid ="6" ssid = "6">Significant gains in performance are observed on several datasets.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Pronoun resolution is a difficult but vital part of the overall coreference resolution task.</S>
			<S sid ="8" ssid = "8">In each of the following sentences, a pronoun resolution system must determine what the pronoun his refers to: (1) John needs his friend.</S>
			<S sid ="9" ssid = "9">(2) John needs his support.</S>
			<S sid ="10" ssid = "10">In (1), John and his corefer.</S>
			<S sid ="11" ssid = "11">In (2), his refers to some other, perhaps previously evoked entity.</S>
			<S sid ="12" ssid = "12">Traditional pronoun resolution systems are not designed to distinguish between these cases.</S>
			<S sid ="13" ssid = "13">They lack the specific world knowledge required in the second instance – the knowledge that a person does not usually explicitly need his own support.</S>
			<S sid ="14" ssid = "14">We collect statistical path-coreference information from a large, automatically-parsed corpus to address this limitation.</S>
			<S sid ="15" ssid = "15">A dependency path is defined as the sequence of dependency links between two potentially coreferent entities in a parse tree.</S>
			<S sid ="16" ssid = "16">A path does not include the terminal entities; for example, “John needs his support” and “He needs their support” have the same syntactic path.</S>
			<S sid ="17" ssid = "17">Our algorithm determines that the dependency path linking the Noun and pronoun is very likely to connect coreferent entities for the path “Noun needs pronoun’s friend,” while it is rarely coreferent for the path “Noun needs pronoun’s support.” This likelihood can be learned by simply counting how often we see a given path in text with an initial Noun and a final pronoun that are from the same/different gender/number classes.</S>
			<S sid ="18" ssid = "18">Cases such as “John needs her support” or “They need his support” are much more frequent in text than cases where the subject noun and pronoun terminals agree in gender/number.</S>
			<S sid ="19" ssid = "19">When there is agreement, the terminal nouns are likely to be coreferent.</S>
			<S sid ="20" ssid = "20">When they disagree, they refer to different entities.</S>
			<S sid ="21" ssid = "21">After a sufficient number of occurrences of agreement or disagreement, there is a strong statistical indication of whether the path is coreferent (terminal nouns tend to refer to the same entity) or non-coreferent (nouns refer to different entities).</S>
			<S sid ="22" ssid = "22">We show that including path coreference information enables significant performance gains on three third-person pronoun resolution experiments.</S>
			<S sid ="23" ssid = "23">We also show that coreferent paths can provide the seed information for bootstrapping other, even more important information, such as the gender/number of noun phrases.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "2">
			<S sid ="24" ssid = "1">Coreference resolution is generally conducted as a pairwise classification task, using various constraints and preferences to determine whether two 33 Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 33–40, Sydney, July 2006.</S>
			<S sid ="25" ssid = "2">Qc 2006 Association for Computational Linguistics expressions corefer.</S>
			<S sid ="26" ssid = "3">Coreference is typically only allowed between nouns matching in gender and number, and not violating any intrasentential syntactic principles.</S>
			<S sid ="27" ssid = "4">Constraints can be applied as a preprocessing step to scoring candidates based on distance, grammatical role, etc., with scores developed either manually (Lappin and Leass, 1994), or through a machine-learning algorithm (Kehler et al., 2004).</S>
			<S sid ="28" ssid = "5">Constraints and preferences have also been applied together as decision nodes on a decision tree (Aone and Bennett, 1995).</S>
			<S sid ="29" ssid = "6">When previous resolution systems handle cases like (1) and (2), where no disagreement or syntactic violation occurs, coreference is therefore determined by the weighting of features or learned decisions of the resolution classifier.</S>
			<S sid ="30" ssid = "7">Without path coreference knowledge, a resolution process would resolve the pronouns in (1) and (2) the same way.</S>
			<S sid ="31" ssid = "8">Indeed, coreference resolution research has focused on the importance of the strategy for combining well known constraints and preferences (Mitkov, 1997; Ng and Cardie, 2002), devoting little attention to the development of new features for these difficult cases.</S>
			<S sid ="32" ssid = "9">The application of world knowledge to pronoun resolution has been limited to the semantic compatibility between a candidate noun and the pronoun’s context (Yang et al., 2005).</S>
			<S sid ="33" ssid = "10">We show semantic compatibility can be effectively combined with path coreference information in our experiments below.</S>
			<S sid ="34" ssid = "11">Our method for determining path coreference obj subj gen John needs his support Figure 1: Example dependency tree.</S>
			<S sid ="35" ssid = "12">write the dependency path in this case as “Noun needs pronoun’s support.” The path itself does not include the terminal nouns “John” and “his.” Our algorithm finds the likelihood of coreference along dependency paths by counting the number of times they occur with terminals that are either likely coreferent or non-coreferent.</S>
			<S sid ="36" ssid = "13">In the simplest version, we count paths with terminals that are both pronouns.</S>
			<S sid ="37" ssid = "14">We partition pronouns into seven groups of matching gender, number, and person; for example, the first person singular group contains I, me, my, mine, and myself.</S>
			<S sid ="38" ssid = "15">If the two terminal pronouns are from the same group, coreference along the path is likely.</S>
			<S sid ="39" ssid = "16">If they are from different groups, like I and his, then they are non-coreferent.</S>
			<S sid ="40" ssid = "17">Let NS (p) be the number of times the two terminal pronouns of a path, p, are from the same pronoun group, and let ND (p) be the number of times they are from different groups.</S>
			<S sid ="41" ssid = "18">We define the coreference of p as: NS (p) is similar to an algorithm for discovering paraphrases in text (Lin and Pantel, 2001).</S>
			<S sid ="42" ssid = "19">In that C(p) = NS (p) + ND (p) work, the beginning and end nodes in the paths are collected, and two paths are said to be similar (and thus likely paraphrases of each other) if they have similar terminals (i.e. the paths occur with a similar distribution).</S>
			<S sid ="43" ssid = "20">Our work does not need to store the terminals themselves, only whether they are from the same pronoun group.</S>
			<S sid ="44" ssid = "21">Different paths are not compared in any way; each path is individually assigned a coreference likelihood.</S>
	</SECTION>
	<SECTION title="Path Coreference. " number = "3">
			<S sid ="45" ssid = "1">We define a dependency path as the sequence of nodes and dependency labels between two potentially coreferent entities in a dependency parse tree.</S>
			<S sid ="46" ssid = "2">We use the structure induced by the minimalist parser Minipar (Lin, 1998) on sentences from the news corpus described in Section 4.</S>
			<S sid ="47" ssid = "3">Figure 1 gives the parse tree of (2).</S>
			<S sid ="48" ssid = "4">As a short-form, we Our statistics indicate the example path, “Noun needs pronoun’s support,” has a low C (p) value.</S>
			<S sid ="49" ssid = "5">We could use this fact to prevent us from resolving “his” to “John” when “John needs his support” is presented to a pronoun resolution system.</S>
			<S sid ="50" ssid = "6">To mitigate data sparsity, we represent the path with the root form of the verbs and nouns.</S>
			<S sid ="51" ssid = "7">Also, we use Minipar’s named-entity recognition to replace named-entity nouns by the semantic category of their named-entity, when available.</S>
			<S sid ="52" ssid = "8">All modifiers not on the direct path, such as adjectives, determiners and adverbs, are not considered.</S>
			<S sid ="53" ssid = "9">We limit the maximum path length to eight nodes.</S>
			<S sid ="54" ssid = "10">Tables 1 and 2 give examples of coreferent and non-coreferent paths learned by our algorithm and identified in our test sets.</S>
			<S sid ="55" ssid = "11">Coreferent paths are defined as paths with a C (p) value (and overall number of occurrences) above a certain threshold, indicating the terminal entities are highly likely Table 1: Example coreferent paths: Italicized entities generally corefer.</S>
			<S sid ="56" ssid = "12">P a t t e r n Ex a m pl e 1.</S>
			<S sid ="57" ssid = "13">Noun left ... to pronoun’s wife.</S>
			<S sid ="58" ssid = "14">Bu ffe tt wi ll lea ve th e sto ck to his wi fe.</S>
			<S sid ="59" ssid = "15">2.</S>
			<S sid ="60" ssid = "16">Noun says pronoun intends....</S>
			<S sid ="61" ssid = "17">Th e ne ws pa pe r sa ys it int en ds to fil e a la ws uit . 3.</S>
			<S sid ="62" ssid = "18">Noun was punished for pronoun’s crime..</S>
			<S sid ="63" ssid = "19">Th e cri mi na l wa s pu nis he d for his cri m e. 4.</S>
			<S sid ="64" ssid = "20">... left Noun to fend for pronoun-self Th ey lef t Ja ne to fe nd for he rse lf.</S>
			<S sid ="65" ssid = "21">5.</S>
			<S sid ="66" ssid = "22">Noun lost pronoun’s job..</S>
			<S sid ="67" ssid = "23">Di ck los t his jo b. 6.</S>
			<S sid ="68" ssid = "24">... created Noun and populated pronoun.</S>
			<S sid ="69" ssid = "25">Nz a m e cre ate d th e ea rth an d po pu lat ed it 7.</S>
			<S sid ="70" ssid = "26">Noun consolidated pronoun’s power..</S>
			<S sid ="71" ssid = "27">Th e re vo lut io na rie s co ns oli da te d th eir po we r. 8.</S>
			<S sid ="72" ssid = "28">Noun suffered ... in pronoun’s knee ligament..</S>
			<S sid ="73" ssid = "29">Th e leo pa rd suf fer ed pai n in its kn ee lig am ent . to corefer.</S>
			<S sid ="74" ssid = "30">Non-coreferent paths have a C (p) below a certain cutoff; the terminals are highly unlikely to corefer.</S>
			<S sid ="75" ssid = "31">Especially note the challenge of resolving most of the examples in Table 2 without path coreference information.</S>
			<S sid ="76" ssid = "32">Although these paths encompass some cases previously covered by Binding Theory (e.g. “Mary suspended her,” her cannot refer to Mary by Principle B (Haege- man, 1994)), most have no syntactic justification for non-coreference per se.</S>
			<S sid ="77" ssid = "33">Likewise, although Binding Theory (Principle A) could identify the reflexive pronominal relationship of Example 4 in Table 1, most cases cannot be resolved through syntax alone.</S>
			<S sid ="78" ssid = "34">Our analysis shows that successfully handling cases that may have been handled with Binding Theory constitutes only a small portion of the total performance gain using path coreference.</S>
			<S sid ="79" ssid = "35">In any case, Binding Theory remains a challenge with a noisy parser.</S>
			<S sid ="80" ssid = "36">Consider: “Alex gave her money.” Minipar parses her as a possessive, when it is more likely an object, “Alex gave money to her.” Without a correct parse, we cannot rule out the link between her and Alex through Binding Theory.</S>
			<S sid ="81" ssid = "37">Our algorithm, however, learns that the path “Noun gave pronoun’s money,” is non- coreferent.</S>
			<S sid ="82" ssid = "38">In a sense, it corrects for parser errors by learning when coreference should be blocked, given any consistent parse of the sentence.</S>
			<S sid ="83" ssid = "39">We obtain path coreference for millions of paths from our parsed news corpus (Section 4).</S>
			<S sid ="84" ssid = "40">While Tables 1 and 2 give test set examples, many other interesting paths are obtained.</S>
			<S sid ="85" ssid = "41">We learn coreference is unlikely between the nouns in “Bob married his mother,” or “Sue wrote her obituary.” The ceptions to the coreference or non-coreference of some of these paths can be found; our patterns represent general trends only.</S>
			<S sid ="86" ssid = "42">And, as mentioned above, reliable path coreference is somewhat dependent on consistent parsing.</S>
			<S sid ="87" ssid = "43">Paths connecting pronouns to pronouns are different than paths connecting both nouns and pronouns to pronouns – the case we are ultimately interested in resolving.</S>
			<S sid ="88" ssid = "44">Consider “Company A gave its data on its website.” The pronoun-pronoun path coreference algorithm described above would learn the terminals in “Noun’s data on pronoun’s website” are often coreferent.</S>
			<S sid ="89" ssid = "45">But if we see the phrase “Company A gave Company B’s data on its website,” then “its” is not likely to refer to “Company B,” even though we identified this as a coreferent path!</S>
			<S sid ="90" ssid = "46">We address this problem with a two-stage extraction procedure.</S>
			<S sid ="91" ssid = "47">We first bootstrap gender/number information using the pronoun- pronoun paths as described in Section 4.1.</S>
			<S sid ="92" ssid = "48">We then use this gender/number information to count paths where an initial noun (with probabilistically- assigned gender/number) and following pronoun are connected by the dependency path, recording the agreement or disagreement of their gender/number category.1 These superior paths are then used to re-bootstrap our final gender/number information used in the evaluation (Section 6).</S>
			<S sid ="93" ssid = "49">We also bootstrap paths where the nodes in the path are replaced by their grammatical category.</S>
			<S sid ="94" ssid = "50">This allows us to learn general syntactic constraints not dependent on the surface forms of the words (including, but not limited to, the Binding Theory principles).</S>
			<S sid ="95" ssid = "51">A separate set of these noncoreferent paths is also used as a feature in our sys fact you don’t marry your own mother or write 1 As desired, this modification allows the first example to.</S>
			<S sid ="96" ssid = "52">your own obituary is perhaps obvious, but this is the first time this kind of knowledge has been made available computationally.</S>
			<S sid ="97" ssid = "53">Naturally, ex provide two instances of noun-pronoun paths with terminals from the same gender/number group, linking each “its” to the subject noun “Company A”, rather than to each other.</S>
			<S sid ="98" ssid = "54">Table 2: Example non-coreferent paths: Italicized entities do not generally corefer P a t t e r n Ex a m pl e 1.</S>
			<S sid ="99" ssid = "55">Noun thanked ... for pronoun’s assistance.</S>
			<S sid ="100" ssid = "56">Jo hn th an ke d hi m for his as sis ta nc e. 2.</S>
			<S sid ="101" ssid = "57">Noun wanted pronoun to lie..</S>
			<S sid ="102" ssid = "58">Th e pr esi de nt wa nt ed he r to lie . 3.</S>
			<S sid ="103" ssid = "59">Noun into pronoun’s pool M ax pu t th e flo ati es int o th eir po ol.</S>
			<S sid ="104" ssid = "60">4.</S>
			<S sid ="105" ssid = "61">... use Noun to pronoun’s advantage Th e co m pa ny us ed th e de la y to its ad va nt ag e. 5.</S>
			<S sid ="106" ssid = "62">Noun suspended pronoun.</S>
			<S sid ="107" ssid = "63">M ar y su sp en de d he r. 6.</S>
			<S sid ="108" ssid = "64">Noun was pronoun’s relative..</S>
			<S sid ="109" ssid = "65">Th e S mi ths we re th eir rel ati ve s. 7.</S>
			<S sid ="110" ssid = "66">Noun met pronoun’s demands.</S>
			<S sid ="111" ssid = "67">Th e pl ay ers ’ as so ci ati on m et its de m an ds.</S>
			<S sid ="112" ssid = "68">8.</S>
			<S sid ="113" ssid = "69">... put Noun at the top of pronoun’s list.</S>
			<S sid ="114" ssid = "70">Th e go ve rn m en t pu t saf ety at th e to p of its lis t. tem.</S>
			<S sid ="115" ssid = "71">We also tried expanding our coverage by using paths similar to paths with known path coreference (based on distributionally similar words), but this did not generally increase performance.</S>
	</SECTION>
	<SECTION title="Bootstrapping in Pronoun Resolution. " number = "4">
			<S sid ="116" ssid = "1">Our determination of path coreference can be considered a bootstrapping procedure.</S>
			<S sid ="117" ssid = "2">Furthermore, the coreferent paths themselves can serve as the seed for bootstrapping additional coreference information.</S>
			<S sid ="118" ssid = "3">In this section, we sketch previous approaches to bootstrapping in coreference resolution and explain our new ideas.</S>
			<S sid ="119" ssid = "4">Coreference bootstrapping works by assuming resolutions in unlabelled text, acquiring information from the putative resolutions, and then making inferences from the aggregate statistical data.</S>
			<S sid ="120" ssid = "5">For example, we assumed two pronouns from the same pronoun group were coreferent, and deduced path coreference from the accumulated counts.</S>
			<S sid ="121" ssid = "6">The potential of the bootstrapping approach can best be appreciated by imagining millions of documents with coreference annotations.</S>
			<S sid ="122" ssid = "7">With such a set, we could extract fine-grained features, perhaps tied to individual words or paths.</S>
			<S sid ="123" ssid = "8">For example, we could estimate the likelihood each noun belongs to a particular gender/number class by the proportion of times this noun was labelled as the antecedent for a pronoun of this particular gender/number.</S>
			<S sid ="124" ssid = "9">Since no such corpus exists, researchers have used coarser features learned from smaller sets through supervised learning (Soon et al., 2001; Ng and Cardie, 2002), manually-defined coreference patterns to mine specific kinds of data (Bean and Riloff, 2004; Bergsma, 2005), or accepted the noise inherent in unsupervised schemes (Ge et al., 1998; Cherry and Bergsma, 2005).</S>
			<S sid ="125" ssid = "10">We address the drawbacks of these approaches Table 3: Gender classification performance (%) Cl as sif ierF Sc or e Be rg sm a (2 00 5) Co rp us ba se d 8 5 . 4 Be rg sm a (2 00 5) W eb ba se d 9 0 . 4 Be rg sm a (2 00 5) Co m bi ne d 9 2 . 2 D up lic ate d Co rp us ba se d 8 8 . 0 Co ref er en t Path ba se d 9 0 . 3 by using coreferent paths as the assumed resolutions in the bootstrapping.</S>
			<S sid ="126" ssid = "11">Because we can vary the threshold for defining a coreferent path, we can trade-off coverage for precision.</S>
			<S sid ="127" ssid = "12">We now outline two potential uses of bootstrapping with coreferent paths: learning gender/number information (Section 4.1) and augmenting a semantic compatibility model (Section 4.2).</S>
			<S sid ="128" ssid = "13">We bootstrap this data on our automatically-parsed news corpus.</S>
			<S sid ="129" ssid = "14">The corpus comprises 85 GB of news articles taken from the world wide web over a 1-year period.</S>
			<S sid ="130" ssid = "15">4.1 Probabilistic Gender/Number.</S>
			<S sid ="131" ssid = "16">Bergsma (2005) learns noun gender (and number) from two principal sources: 1) mining it from manually-defined lexico-syntactic patterns in parsed corpora, and 2) acquiring it on the fly by counting the number of pages returned for various gender-indicating patterns by the Google search engine.</S>
			<S sid ="132" ssid = "17">The web-based approach outperformed the corpus-based approach, while a system that combined the two sets of information resulted in the highest performance (Table 3).</S>
			<S sid ="133" ssid = "18">The combined gender-classifying system is a machine-learned classifier with 20 features.</S>
			<S sid ="134" ssid = "19">The time delay of using an Internet search engine within a large-scale anaphora resolution effort is currently impractical.</S>
			<S sid ="135" ssid = "20">Thus we attempted Table 4: Example gender/number probability (%) W or d m as c fe m ne ut pl ur co m pa ny 0 . 6 0 . 1 98 .1 1.</S>
			<S sid ="136" ssid = "21">2 co nd ol ee za ric e 4 . 0 92 .7 0 . 0 3.</S>
			<S sid ="137" ssid = "22">2 pa t 5 8.</S>
			<S sid ="138" ssid = "23">3 30 .6 6 . 2 4.</S>
			<S sid ="139" ssid = "24">9 pr esi de nt 9 4.</S>
			<S sid ="140" ssid = "25">1 3 . 0 1 . 5 1.</S>
			<S sid ="141" ssid = "26">4 wi fe 9 . 9 83 .3 0 . 8 6.</S>
			<S sid ="142" ssid = "27">1 to duplicate Bergsma’s corpus-based extraction of gender and number, where the information can be stored in advance in a table, but using a much larger data set.</S>
			<S sid ="143" ssid = "28">Bergsma ran his extraction on roughly 6 GB of text; we used roughly 85 GB.</S>
			<S sid ="144" ssid = "29">Using the test set from Bergsma (2005), we were only able to boost performance from an F- Score of 85.4% to one of 88.0% (Table 3).</S>
			<S sid ="145" ssid = "30">This result led us to reexamine the high performance of Bergsma’s web-based approach.</S>
			<S sid ="146" ssid = "31">We realized that the corpus-based and web-based approaches are not exactly symmetric.</S>
			<S sid ="147" ssid = "32">The corpus-based approaches, for example, would not pick out gender from a pattern such as “John and his friends...” because “Noun and pronoun’s NP” is not one of the manually-defined gender extraction patterns.</S>
			<S sid ="148" ssid = "33">The web-based approach, however, would catch this instance with the “John * his/her/its/their” template, where “*” is the Google wild-card operator.</S>
			<S sid ="149" ssid = "34">Clearly, there are patterns useful for capturing gender and number information beyond the predefined set used in the corpus-based extraction.</S>
			<S sid ="150" ssid = "35">We thus decided to capture gender/number information from coreferent paths.</S>
			<S sid ="151" ssid = "36">If a noun is connected to a pronoun of a particular gender along a coreferent path, we count this as an instance of that noun being that gender.</S>
			<S sid ="152" ssid = "37">In the end, the probability that the noun is a particular gender is the proportion of times it was connected to a pronoun of that gender along a coreferent path.</S>
			<S sid ="153" ssid = "38">Gender information becomes a single intuitive, accessible feature (i.e. the probability of the noun being that gender) rather than Bergsma’s 20-dimensional feature vector requiring search-engine queries to instantiate.</S>
			<S sid ="154" ssid = "39">We acquire gender and number data for over 3 million nouns.</S>
			<S sid ="155" ssid = "40">We use add-one smoothing for data sparsity.</S>
			<S sid ="156" ssid = "41">Some example gender/number probabilities are given in Table 4 (cf.</S>
			<S sid ="157" ssid = "42">(Ge et al., 1998; Cherry and Bergsma, 2005)).</S>
			<S sid ="158" ssid = "43">We get a performance of 90.3% (Table 3), again meeting our requirements of high performance and allowing for a fast, practical implementation.</S>
			<S sid ="159" ssid = "44">This is lower than Bergsma’s top score of 92.2% (Figure 3), but again, Bergsma’s top system relies on Google search queries for each new word, while ours are all pre-stored in a table for fast access.</S>
			<S sid ="160" ssid = "45">We are pleased to be able to share our gender and number data with the NLP community.2 In Section 6, we show the benefit of this data as a probabilistic feature in our pronoun resolution system.</S>
			<S sid ="161" ssid = "46">Probabilistic data is useful because it allows us to rapidly prototype resolution systems without incurring the overhead of large-scale lexical databases such as WordNet (Miller et al., 1990).</S>
			<S sid ="162" ssid = "47">4.2 Semantic Compatibility.</S>
			<S sid ="163" ssid = "48">Researchers since Dagan and Itai (1990) have variously argued for and against the utility of collocation statistics between nouns and parents for improving the performance of pronoun resolution.</S>
			<S sid ="164" ssid = "49">For example, can the verb parent of a pronoun be used to select antecedents that satisfy the verb’s selectional restrictions?</S>
			<S sid ="165" ssid = "50">If the verb phrase was shatter it, we would expect it to refer to some kind of brittle entity.</S>
			<S sid ="166" ssid = "51">Like path coreference, semantic compatibility can be considered a form of world knowledge needed for more challenging pronoun resolution instances.</S>
			<S sid ="167" ssid = "52">We encode the semantic compatibility between a noun and its parse tree parent (and grammatical relationship with the parent) using mutual information (MI) (Church and Hanks, 1989).</S>
			<S sid ="168" ssid = "53">Suppose we are determining whether ham is a suitable antecedent for the pronoun it in eat it.</S>
			<S sid ="169" ssid = "54">We calculate the MI as: Pr(eat:obj:ham) MI(eat:obj, ham) = log Pr(eat:obj)Pr(ham) Although semantic compatibility is usually only computed for possessive-noun, subject-verb, and verb-object relationships, we include 121 different kinds of syntactic relationships as parsed in our news corpus.3 We collected 4.88 billion parent:rel:node triples, including over 327 million possessive-noun values, 1.29 billion subject-verb and 877 million verb-direct object.</S>
			<S sid ="170" ssid = "55">We use small probability values for unseen Pr(parent:rel:node), Pr(parent:rel), and Pr(node) cases, as well as a default MI when no relationship is parsed, roughly optimized for performance on the training set.</S>
			<S sid ="171" ssid = "56">We 2 Available at http://www.cs.ualberta.ca/˜bergsma/Gender/.</S>
			<S sid ="172" ssid = "57">3 We convert prepositions to relationships to enhance our model’s semantics, e.g. Joan:of:Arc rather than Joan:prep:of include both the MI between the noun and the pronoun’s parent as well as the MI between the pronoun and the noun’s parent as features in our pronoun resolution classifier.</S>
			<S sid ="173" ssid = "58">Kehler et al.</S>
			<S sid ="174" ssid = "59">(2004) saw no apparent gain from using semantic compatibility information, while Yang et al.</S>
			<S sid ="175" ssid = "60">(2005) saw about a 3% improvement with compatibility data acquired by searching on the world wide web.</S>
			<S sid ="176" ssid = "61">Section 6 analyzes the contribution of MI to our system.</S>
			<S sid ="177" ssid = "62">Bean and Riloff (2004) used bootstrapping to extend their semantic compatibility model, which they called contextual-role knowledge, by identifying certain cases of easily-resolved anaphors and antecedents.</S>
			<S sid ="178" ssid = "63">They give the example “Mr.</S>
			<S sid ="179" ssid = "64">Bush disclosed the policy by reading it.” Once we identify that it and policy are coreferent, we include read:obj:policy as part of the compatibility model.</S>
			<S sid ="180" ssid = "65">Rather than using manually-defined heuristics to bootstrap additional semantic compatibility information, we wanted to enhance our MI statistics automatically with coreferent paths.</S>
			<S sid ="181" ssid = "66">Consider the phrase, “Saddam’s wife got a Jordanian lawyer for her husband.” It is unlikely we would see “wife’s husband” in text; in other words, we would not know that husband:gen:wife is, in fact, semantically compatible and thereby we would discourage selection of “wife” as the antecedent at resolution time.</S>
			<S sid ="182" ssid = "67">However, because “Noun gets ... for pronoun’s husband” is a coreferent path, we could capture the above relationship by adding a parent:rel:node for every pronoun connected to a noun phrase along a coreferent path in text.</S>
			<S sid ="183" ssid = "68">We developed context models with and without these path enhancements, but ultimately we could find no subset of coreferent paths that improve the semantic compatibility’s contribution to training set accuracy.</S>
			<S sid ="184" ssid = "69">A mutual information model trained on 85 GB of text is fairly robust on its own, and any kind of bootstrapped extension seems to cause more damage by increased noise than can be compensated by increased coverage.</S>
			<S sid ="185" ssid = "70">Although we like knowing audiences have noses, e.g. “the audience turned up its nose at the performance,” such phrases are apparently quite rare in actual test sets.</S>
	</SECTION>
	<SECTION title="Experimental Design. " number = "5">
			<S sid ="186" ssid = "1">The noun-pronoun path coreference can be used directly as a feature in a pronoun resolution system.</S>
			<S sid ="187" ssid = "2">However, path coreference is undefined for cases where there is no path between the pro noun and the candidate noun – for example, when the candidate is in the previous sentence.</S>
			<S sid ="188" ssid = "3">Therefore, rather than using path coreference directly, we have features that are true if C (p) is above or below certain thresholds.</S>
			<S sid ="189" ssid = "4">The features are thus set when coreference between the pronoun and candidate noun is likely (a coreferent path) or unlikely (a non-coreferent path).</S>
			<S sid ="190" ssid = "5">We now evaluate the utility of path coreference within a state-of-the-art machine-learned resolution system for third-person pronouns with nominal antecedents.</S>
			<S sid ="191" ssid = "6">A standard set of features is used along with the bootstrapped gender/number, semantic compatibility, and path coreference information.</S>
			<S sid ="192" ssid = "7">We refer to these features as our “probabilistic features” (Prob.</S>
			<S sid ="193" ssid = "8">Features) and run experiments using the full system trained and tested with each absent, in turn (Table 5).</S>
			<S sid ="194" ssid = "9">We have 29 features in total, including measures of candidate distance, frequency, grammatical role, and different kinds of parallelism between the pronoun and the candidate noun.</S>
			<S sid ="195" ssid = "10">Several reliable features are used as hard constraints, removing candidates before consideration by the scoring algorithm.</S>
			<S sid ="196" ssid = "11">All of the parsing, noun-phrase identification, and named-entity recognition are done automatically with Minipar.</S>
			<S sid ="197" ssid = "12">Candidate antecedents are considered in the current and previous sentence only.</S>
			<S sid ="198" ssid = "13">We use SVMlight (Joachims, 1999) to learn a linear-kernel classifier on pairwise examples in the training set.</S>
			<S sid ="199" ssid = "14">When resolving pronouns, we select the candidate with the farthest positive distance from the SVM classification hyperplane.</S>
			<S sid ="200" ssid = "15">Our training set is the anaphora-annotated portion of the American National Corpus (ANC) used in Bergsma (2005), containing 1270 anaphoric pronouns4 . We test on the ANC Test set (1291 instances) also used in Bergsma (2005) (highest resolution accuracy reported: 73.3%), the anaphora- labelled portion of AQUAINT used in Cherry and Bergsma (2005) (1078 instances, highest accuracy: 71.4%), and the anaphoric pronoun subset of the MUC7 (1997) coreference evaluation formal test set (169 instances, highest precision of 62.1 reported on all pronouns in (Ng and Cardie, 2002)).</S>
			<S sid ="201" ssid = "16">These particular corpora were chosen so we could test our approach using the same data as comparable machine-learned systems exploiting probabilistic information sources.</S>
			<S sid ="202" ssid = "17">Parameters 4 See http://www.cs.ualberta.ca/˜bergsma/CorefTags/ for instructions on acquiring annotations Table 5: Resolution accuracy (%) 1 0 . 9 5 0.9 0.85 0.8 0.75 0.7 Top-3 Top-2 Top-1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Recall were set using cross-validation on the training set; test sets were used only once to obtain the final performance values.</S>
			<S sid ="203" ssid = "18">Evaluation Metric: We report results in terms of accuracy: Of all the anaphoric pronouns in the test set, the proportion we resolve correctly.</S>
	</SECTION>
	<SECTION title="Results and Discussion. " number = "6">
			<S sid ="204" ssid = "1">We compare the accuracy of various configurations of our system on the ANC, AQT and MUC datasets (Table 5).</S>
			<S sid ="205" ssid = "2">We include the score from picking the noun immediately preceding the pronoun (after our hard filters are applied).</S>
			<S sid ="206" ssid = "3">Due to the hard filters and limited search window, it is not possible for our system to resolve every noun to a correct antecedent.</S>
			<S sid ="207" ssid = "4">We thus provide the performance upper bound (i.e. the proportion of cases with a correct answer in the filtered candidate list).</S>
			<S sid ="208" ssid = "5">On ANC and AQT, each of the probabilistic features results in a statistically significant gain in performance over a model trained and tested with that feature absent.5 On the smaller MUC set, none of the differences in 36 are statistically significant, however, the relative contribution of the various features remains reassuringly constant.</S>
			<S sid ="209" ssid = "6">Aside from missing antecedents due to the hard filters, the main sources of error include inaccurate statistical data and a classifier bias toward preceding pronouns of the same gender/number.</S>
			<S sid ="210" ssid = "7">It would be interesting to see whether performance could be improved by adding WordNet and web-mined features.</S>
			<S sid ="211" ssid = "8">Path coreference itself could conceivably be determined with a search engine.</S>
			<S sid ="212" ssid = "9">Gender is our most powerful probabilistic feature.</S>
			<S sid ="213" ssid = "10">In fact, inspecting our system’s decisions, gender often rules out coreference regardless of path coreference.</S>
			<S sid ="214" ssid = "11">This is not surprising, since we based the acquisition of C (p) on gender.</S>
			<S sid ="215" ssid = "12">That is, 5 We calculate significance with McNemar’s test, p=0.05..</S>
			<S sid ="216" ssid = "13">Figure 2: ANC pronoun resolution accuracy for varying SVM-thresholds.</S>
			<S sid ="217" ssid = "14">our bootstrapping assumption was that the majority of times these paths occur, gender indicates coreference or lack thereof.</S>
			<S sid ="218" ssid = "15">Thus when they occur in our test sets, gender should often sufficiently indicate coreference.</S>
			<S sid ="219" ssid = "16">Improving the orthogonality of our features remains a future challenge.</S>
			<S sid ="220" ssid = "17">Nevertheless, note the decrease in performance on each of the datasets when C (p) is excluded (#5).</S>
			<S sid ="221" ssid = "18">This is compelling evidence that path coreference is valuable in its own right, beyond its ability to bootstrap extensive and reliable gender data.</S>
			<S sid ="222" ssid = "19">Finally, we can add ourselves to the camp of people claiming semantic compatibility is useful for pronoun resolution.</S>
			<S sid ="223" ssid = "20">Both the MI from the pronoun in the antecedent’s context and vice-versa result in improvement.</S>
			<S sid ="224" ssid = "21">Building a model from enough text may be the key.</S>
			<S sid ="225" ssid = "22">The primary goal of our evaluation was to assess the benefit of path coreference within a competitive pronoun resolution system.</S>
			<S sid ="226" ssid = "23">Our system does, however, outperform previously published results on these datasets.</S>
			<S sid ="227" ssid = "24">Direct comparison of our scoring system to other current top approaches is made difficult by differences in preprocessing.</S>
			<S sid ="228" ssid = "25">Ideally we would assess the benefit of our probabilistic features using the same state-of-the-art preprocessing modules employed by others such as (Yang et al., 2005) (who additionally use a search engine for compatibility scoring).</S>
			<S sid ="229" ssid = "26">Clearly, promoting competitive evaluation of pronoun resolution scoring systems by giving competitors equivalent real-world preprocessing output along the lines of (Barbu and Mitkov, 2001) remains the best way to isolate areas for system improvement.</S>
			<S sid ="230" ssid = "27">Our pronoun resolution system is part of a larger information retrieval project where resolution ac curacy is not necessarily the most pertinent measure of classifier performance.</S>
			<S sid ="231" ssid = "28">More than one candidate can be useful in ambiguous cases, and not every resolution need be used.</S>
			<S sid ="232" ssid = "29">Since the SVM ranks antecedent candidates, we can test this ranking by selecting more than the top candidate (Top- n) and evaluating coverage of the true antecedents.</S>
			<S sid ="233" ssid = "30">We can also resolve only those instances where the most likely candidate is above a certain distance from the SVM threshold.</S>
			<S sid ="234" ssid = "31">Varying this distance varies the precision-recall (PR) of the overall resolution.</S>
			<S sid ="235" ssid = "32">A representative PR curve for the Top-n classifiers is provided (Figure 2).</S>
			<S sid ="236" ssid = "33">The corresponding information retrieval performance can now be evaluated along the Top-n / PR configurations.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "7">
			<S sid ="237" ssid = "1">We have introduced a novel feature for pronoun resolution called path coreference, and demonstrated its significant contribution to a state-of-the- art pronoun resolution system.</S>
			<S sid ="238" ssid = "2">This feature aids coreference decisions in many situations not handled by traditional coreference systems.</S>
			<S sid ="239" ssid = "3">Also, by bootstrapping with the coreferent paths, we are able to build the most complete and accurate table of probabilistic gender information yet available.</S>
			<S sid ="240" ssid = "4">Preliminary experiments show path coreference bootstrapping can also provide a means of identifying pleonastic pronouns, where pleonastic neutral pronouns are often followed in a dependency path by a terminal noun of different gender, and cataphoric constructions, where the pronouns are often followed by nouns of matching gender.</S>
	</SECTION>
</PAPER>
