<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">two different problems: thematic segmentation into rather large topically self- contained sections and splitting into paragraphs, i.e., lexico-grammatical segmentation of lower level.</S>
		<S sid ="2" ssid = "2">In this paper we consider the latter problem.</S>
		<S sid ="3" ssid = "3">We propose a method of reasonably splitting text into paragraph based on a text cohesion measure.</S>
		<S sid ="4" ssid = "4">Specifically, we propose a method of quantitative evaluation of text cohesion based on a large linguistic resource – a collocation network.</S>
		<S sid ="5" ssid = "5">At each step, our algorithm compares word occurrences in a text against a large DB of collocations and semantic links between words in the given natural language.</S>
		<S sid ="6" ssid = "6">The procedure consists in evaluation of the cohesion function, its smoothing, normalization, and comparing with a specially constructed threshold.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">In the recent decade, automatic text segmentation became a popular research area [4 13, 15, 17, 19].</S>
			<S sid ="8" ssid = "8">In most cases, thematic segmentation is considered, i.e., the borders to be searched subdivide the text to rather long thematically self-contained parts.</S>
			<S sid ="9" ssid = "9">In contrast to most works in the area, in this paper we propose a method for a low-level, lexico-grammatical segmentation.</S>
			<S sid ="10" ssid = "10">The difference between these two segmentation tasks can be explained as follows.</S>
			<S sid ="11" ssid = "11">A good application of thematic segmentation is automatic extraction of thematically relevant part(s) from a long unstructured file.</S>
			<S sid ="12" ssid = "12">When a file is too long for the user to read it through completely, a computer tool – a segmentation program – is quite handy.</S>
			<S sid ="13" ssid = "13">Another application of such segmentation is consulting a novice author on a better splitting his/her large and not yet brushed scitech text to balanced and thematically diverse sections.As the main tool for thematic segmentation, the sets of terms belonging to each po tential segment are considered.</S>
			<S sid ="14" ssid = "14">For example, the words most frequently used in the whole text are selected, the stop-words (mainly functional) are discarded, and then the similarity between adjacent potential segments is measured across the potential border as the cosine coefficient of occurrence numbers of the rest content words.</S>
			<S sid ="15" ssid = "15">In such a task, the segmentation of the lower level, i.e., the division of text into sentences and paragraphs is supposed to have been done.</S>
			<S sid ="16" ssid = "16">Thus, paragraphs are considered as minimal text units with already determined lengths (measured in words or sentences) and terminological content.</S>
			<S sid ="17" ssid = "17">However, this is by itself a problem faced by every author, namely, the problem of optimally splitting the text into paragraphs.</S>
			<S sid ="18" ssid = "18">One might consider rational splitting text into paragraphs a component of general education at school in writing correct texts.</S>
			<S sid ="19" ssid = "19">However, numerous manuscripts of master-level students show that this component of school education is not efficient: many people who have to write scitech texts do not do it well.</S>
			<S sid ="20" ssid = "20">Specifically, grammatically correct texts written by humans are frequently subdivided into paragraphs in a rather arbitrary manner impeding smooth reading.According to [22], the rational low level structuring of scitech texts is rather diffi cult even for humans.</S>
			<S sid ="21" ssid = "21">Besides splitting text into paragraphs it includes other difficult tasks, e.g., introduction of numbered or dotted items.</S>
			<S sid ="22" ssid = "22">In this paper we confine ourselves only to the task of splitting text into paragraphs.</S>
			<S sid ="23" ssid = "23">It is a commonplace that singling out a paragraph conforms to some grammatical and logical rules that seem to be so far not formalized and thus not computable.</S>
			<S sid ="24" ssid = "24">From this point of view, the work [21] is an important step to this objective, but it supposes the problem of how to represent automatically by logical terms the meaning of any sentence and a text as a whole to have been solved, whereas modern computational linguistics only aims at this goal.</S>
			<S sid ="25" ssid = "25">In this paper, we propose a method of lexico-grammatical segmentation of lower level, i.e., splitting texts into paragraphs.</S>
			<S sid ="26" ssid = "26">It is based on the following conjectures: Splitting text into paragraphs is determined by current text cohesion.</S>
			<S sid ="27" ssid = "27">Cohesive links are clustered within paragraphs, whereas the links between them are significantly weaker.</S>
			<S sid ="28" ssid = "28">At present, text cohesion has no formal definition.</S>
			<S sid ="29" ssid = "29">A human considers a text cohesive if it consistently narrates about selected entities (persons, things, relations, actions, processes, properties, etc.).</S>
			<S sid ="30" ssid = "30">At the level of semantic representation of text, cohesion is ‘observable’ in the form of linked terms and predicates of logical types, but it is not well explored how one can observe the same links ‘at the surface.’ In such conditions, it is worthwhile to suppose that text cohesion can be approximately determined through syntactic, pseudo-syntactic, and semantic links between words in a text.</S>
			<S sid ="31" ssid = "31">By pseudo-syntactic link we mean links that are similar to syntactic ones but hold between words of different sentences, for example, the link between chief and demanded in the text She insulted her chief.</S>
			<S sid ="32" ssid = "32">He demanded on apology.1 Syntactic links are considered as in dependency grammars [14], which arrange words of any sentence in dependency trees.</S>
			<S sid ="33" ssid = "33">In the example (she hurriedly) went through (the big) forest, the words out of parentheses constitute a dependency subtree (in this case, a chain) with the highlighted content words at the ends and the functional (auxiliary) word in between.</S>
			<S sid ="34" ssid = "34">The words within parentheses, as well as all other possible words of the sentence, are linked into the same tree, and other pairs of linked content words can be observed among them, such as hurriedly went or big forest.Syntactic links between two content words are called collocations,2 whereas func tional words only subcategorize them.</S>
			<S sid ="35" ssid = "35">Indeed, collocations can be of various 1 Formally, we define such a link to hold between words a and b (not necessarily in the same.</S>
			<S sid ="36" ssid = "36">sentence) if in the text there is a word c coreferent with a and syntactically linked to b. classes: the first example above represents a combination of the ruling verb and its (prepositional) complement, while two other examples give combinations of verb or noun with their modifiers.</S>
			<S sid ="37" ssid = "37">Semantic links are well known.</S>
			<S sid ="38" ssid = "38">They connect synonyms, hyponym with a corresponding hyperonym, the whole with its part, or a word with its semantic derivative, like possessor to possessive or to possess.</S>
			<S sid ="39" ssid = "39">When occurring in the same text, such words are rarely linked syntactically.</S>
			<S sid ="40" ssid = "40">Their co-occurrences have other reason.</S>
			<S sid ="41" ssid = "41">Namely, the anaphoric (coreferential) entities can be represented in a text not only by direct repetitions and pronouns, but also by their synonyms or hyperonyms.</S>
			<S sid ="42" ssid = "42">A quantitative measure of cohesion implied by (pseudo-)syntactic and semantic links can be proposed.</S>
			<S sid ="43" ssid = "43">This measure experiences fluctuations along the texts, with maximums in the middle of the sentences and minimums between them.</S>
			<S sid ="44" ssid = "44">Some local minimums are deeper than others.</S>
			<S sid ="45" ssid = "45">Just they should be taken as splitting borders.</S>
			<S sid ="46" ssid = "46">This paper proposes a method of quantitative evaluation of text cohesion.</S>
			<S sid ="47" ssid = "47">It compares word occurrences in a text against a large DB of collocations and semantic links in a given natural language.</S>
			<S sid ="48" ssid = "48">(Pseudo-)syntactic links are more important since within segments comparable with paragraphs by length no statistics of relevant terms can be collected.</S>
			<S sid ="49" ssid = "49">Taking into account the co-occurrences, our method processes cohesion function stage by stage, i.e., recurrently evaluates this function, smoothes it, normalizes, and compares it with a specially constructed threshold.</S>
	</SECTION>
	<SECTION title="Databases of Collocations and Semantic Relations. " number = "2">
			<S sid ="50" ssid = "1">An example of a huge DB containing semantic relations between English words is WordNet [3].</S>
			<S sid ="51" ssid = "2">The EuroWordNet system [20] presents the same semantic relations for several other European languages.</S>
			<S sid ="52" ssid = "3">Regrettably, there are no collocations in these databases, in our definition of this term.</S>
			<S sid ="53" ssid = "4">Though semantic relations can be found in these sources, they alone do not solve the problem of evaluation of cohesion.The only large DB of collocations and semantic links we know is CrossLexica sys tem [1, 2].</S>
			<S sid ="54" ssid = "5">Unfortunately, it covers only Russian language.</S>
			<S sid ="55" ssid = "6">However, we consider a system of this type as a base for our algorithm, in the hope that large resourced of this type will be available soon for other languages such as English or Spanish.</S>
			<S sid ="56" ssid = "7">Let us discuss now the notion of pseudo-syntactic links in more detail, since such links are very important for our purposes.</S>
			<S sid ="57" ssid = "8">Syntactic links hold within a sentence.</S>
			<S sid ="58" ssid = "9">Hence, if a pair of content words co- occurring in the same sentence is found in the collocation DB as potentially forming a link, the probability of this syntactic link between them in the given sentence is very high.</S>
			<S sid ="59" ssid = "10">Even if the link between the words in the text is different from the link registered in the DB for these words (e.g., the text contains the woman who went... while the DB contains woman go), the observed co-occurrence almost always gives evidence for some cohesion.</S>
			<S sid ="60" ssid = "11">In essence, we take into account anaphoric links in such cases.</S>
			<S sid ="61" ssid = "12">2 There are different definitions of a collocation, e.g., [4, 11].</S>
			<S sid ="62" ssid = "13">Some of them are based on.</S>
			<S sid ="63" ssid = "14">statistical properties of word occurrences, e.g., mutual information.</S>
			<S sid ="64" ssid = "15">However, we define a Similarly, anaphoric links, which we cannot detect directly, permit us to suppose cohesion between lexemes chief and demand when they are registered in the DB as immediately linked but occurred in the adjacent (but different) sentences: She insulted her chief.</S>
			<S sid ="65" ssid = "16">He demanded on apology.</S>
			<S sid ="66" ssid = "17">As to the semantic links, they hold across sentence borders even more frequently than the anaphorically conditioned pseudo-syntactic links mentioned above.</S>
			<S sid ="67" ssid = "18">All these considerations give us grounds to ignore full stops in a text for detecting cohesive pairs in adjacent sentences.</S>
	</SECTION>
	<SECTION title="Quantitative evaluation of text cohesion. " number = "3">
			<S sid ="68" ssid = "1">In this section we present the algorithm of calculation of the text cohesion.</S>
			<S sid ="69" ssid = "2">The algorithm uses a discrete variable i – the number of the word in the text.</S>
			<S sid ="70" ssid = "3">Punctuation marks have no numbers, and full stops ending sentences are not taken into account at this stage.</S>
			<S sid ="71" ssid = "4">At each step, for the given position in the text the algorithm calculates the value of a special function that is to be compared with a threshold; the current position is then advanced.</S>
			<S sid ="72" ssid = "5">As soon as the value of the function crosses the threshold, a new paragraph is started, and the internal variables are reset.</S>
			<S sid ="73" ssid = "6">The details of the calculation of the function are explained below.</S>
			<S sid ="74" ssid = "7">Let i be the current observation point within a text.</S>
			<S sid ="75" ssid = "8">To the left, some syntactically interconnected word pairs {pk, qk}, pk &lt; qk i, have occurred.</S>
			<S sid ="76" ssid = "9">We define a partial measure of cohesion implied by k-th such pair as the function U(qk – pk), where qk – pk is the distance between words in the pair.</S>
			<S sid ="77" ssid = "10">Naturally, U decreases with the growth of qk – pk.</S>
			<S sid ="78" ssid = "11">We may suppose also that U depends on the class Tk of the syntactic relation within the pair and on the specific lexemes &apos;A(k) occurred at the points k. However, in a rough approximation we ignore the dependence on the class and the lexemes.</S>
			<S sid ="79" ssid = "12">It is natural to suppose that the impact of the pair {pk, qk} decreases at the point i along with its moving away from qk.</S>
			<S sid ="80" ssid = "13">We evaluate this by the exponential factor exp(– (i – qk)).</S>
			<S sid ="81" ssid = "14">For the accumulated impact on the text cohesion of all (pseudo-)syntactically related words to the left of i (including pairs with the latter word in i), we have the following value: U qk pk i pk exp i qk .</S>
			<S sid ="82" ssid = "15">(1) For each semantically related pair {mk, nk }, mk&lt; nk i, the partial measure of cohesion is taken as V(nk – mk), and the dependence of V on the distance nk – mk is generally different from that for V. Again, let us ignore the dependence of V on the semantic relation class Sk of the k-th pair and specific semantically linked lexemes.</S>
			<S sid ="83" ssid = "16">With the same exponent reflecting the ‘forgetting’ process, the measure of the total prehistory for semantically related pairs is: nk i V nk mk exp i nk .</S>
			<S sid ="84" ssid = "17">(2) By (1) and (2), the global cohesion function F(i) satisfies the equation where Q(i) = U qk pk i pk + V nk nk i mk .</S>
			<S sid ="85" ssid = "18">(4) The functions U and V were taken also in the exponential form: U(nk – mk) = A exp(– (nk – mk); V(nk – mk) = B exp(– (nk – mk)), where A and B are constants with a ratio between to be selected experimentally; = (1...3)/L; = (0.5...1)/L; L is the mean length of the sentence.</S>
			<S sid ="86" ssid = "19">We can evaluate the equation (3) recurrently, since its current value is composed of the previous value taken with a coefficient less that 1 and the contribution Q(i) of all pairs whose former points coincide with the current observation point.</S>
			<S sid ="87" ssid = "20">Strictly speaking, the impact of the pairs extends backward to the very beginning of text, but really the only pairs distant not more than approximately 1/ from the observation point are influent.</S>
			<S sid ="88" ssid = "21">It can be considered as the ‘window width’ of the computing algorithm.</S>
	</SECTION>
	<SECTION title="Smoothing and Normalizing the Cohesion Function. " number = "4">
			<S sid ="89" ssid = "1">The cohesion function F(i) obtained above has two sources of randomness.</S>
			<S sid ="90" ssid = "2">First, it is heavily saw-toothed, i.e., contains many local minimums and maximums, which that is caused by random scattering of content words in sentences.</S>
			<S sid ="91" ssid = "3">Before searching relevant minimums in this curve it is necessary to smooth it.</S>
			<S sid ="92" ssid = "4">The simplest smoothing is linear [16], when the output (smoothed) function G(i) is obtained by values of an input function F(i) (to be smoothed) by the formula G(i) = F i j 0 j R j , where R(j) is reaction of the smoothing filter to a single value equal to 1.</S>
			<S sid ="93" ssid = "5">To conserve the scaling of the output function, we subject R(j) to the normalizing condition: R( j) 1 . j 0 The most convenient options for R(j) are: Exponent R(i) = (1–q) qi , where i = 0, 1,...; 0 &lt; q &lt; 1.</S>
			<S sid ="94" ssid = "6">This gives a recurrent formula: G(i) qG(i 1) (1 q)F(i).</S>
			<S sid ="95" ssid = "7">To effectively determine the result by few recent values of input function, q should be in the interval 0,5...0,7.</S>
			<S sid ="96" ssid = "8">Symmetric peak taking three adjacent values of the input function: R(0) = R(2) = q/(1+2q); R(1) = 1/(1+2q); 0 &lt; q &lt; 1, so that G(i) q 1 2q F(i 2) 1 1 2q F(i 1) q 1 2q F(i).</S>
			<S sid ="97" ssid = "9">This option is not recurrent but also simple, since it stores only two previous values of F on each step.</S>
			<S sid ="98" ssid = "10">For q = 1, the three adjacent values of the input function are summed up with the equal weights 1/3 and the smoothing is the greatest, for q = 0 the smoothing is absent.</S>
			<S sid ="99" ssid = "11">The dispersion of independent input peaks decreases at the output by (1–q)2/(1–q2) for the exponent (e.g., for q = 0.5 the decrease is 3); by (1+2q2)/(1+2q)2 for the peak (e.g., for q = 0.5 the decrease is 2.33).</S>
			<S sid ="100" ssid = "12">At the same time, all slow components of F(i) comes through the filter unimpeded.</S>
			<S sid ="101" ssid = "13">The second source of the cohesion function randomness is the inevitable incom pleteness of any DB of collocations.</S>
			<S sid ="102" ssid = "14">For any given language, in order to collect the collocations covering an average text up to, say, 95%, it is necessary to scan through (automatically, with further manual control and post-editing) such a huge and poly- thematic corpus of text that this needs too much labor.</S>
			<S sid ="103" ssid = "15">What is more, natural language is not static and new candidates for stable collocations appear in texts continuously.</S>
			<S sid ="104" ssid = "16">In such a situation, it is more convenient to normalize the smoothed cohesion curve somehow.</S>
			<S sid ="105" ssid = "17">For this reason we propose to form the current mean value of the function Q(i) given by the formula (4).</S>
			<S sid ="106" ssid = "18">The mean value is calculated through the whole document beginning from i = 1 by the recurrent formula M(i) = (1 – 1 ) M (i – 1) + 1 Q(i).</S>
			<S sid ="107" ssid = "19">i i After passing several sentences, the current mean value experiences little fluctuation.</S>
			<S sid ="108" ssid = "20">Dividing G(i) by M(i), we obtain a normalized function that fluctuates respecting to 1, with local maximums near the middle points of sentences and comparable minimums at their ends.</S>
			<S sid ="109" ssid = "21">Besides of partial compensation of the DB incompleteness, the normalization decreases the arbitrariness of the selection of the functions U and V, especially with respect to the fertility of lexemes.</S>
	</SECTION>
	<SECTION title="Splitting Text into Paragraphs. " number = "5">
			<S sid ="110" ssid = "1">Now let us use the normalized cohesion function for splitting a text into paragraphs.</S>
			<S sid ="111" ssid = "2">We take into account the following considerations: The sequential point of splitting should be near a minimum of the normalized curve.</S>
			<S sid ="112" ssid = "3">The selected local minimum should be less than the recent minimums that have not been admitted paragraph boundaries at the previous steps of the algorithm.</S>
			<S sid ="113" ssid = "4">Usually an author unconsciously has in mind a mean length value P of a paragraph.</S>
			<S sid ="114" ssid = "5">If the distance from the current point i to the initial point j of the given paragraph is fairly less than P, the current cohesion measure is not so important, but near P, any noticeable minimum implies the decision to interrupt the paragraph.</S>
			<S sid ="115" ssid = "6">These requirements are met by the continuous comparison of G(i)/M(i) with the threshold C(i,j) = C0 + Cs((i – j)/(P + )s, where C0 [0.05 … 0.2]; Cs = 1 – C0; s [3…5], [1…3].</S>
			<S sid ="116" ssid = "7">F (i) M (i) G (i) / M (i) 1 Threshold value i Paragraph boundary Paragraph boundary Figure 1.</S>
			<S sid ="117" ssid = "8">Correlation between cohesion-driven functions.</S>
			<S sid ="118" ssid = "9">As soon as C(i,j) crosses G(i)/M(i) in a point i0, the word before the nearest full stop to the left of i0 is taken as the end of the current paragraph, and the splitting algorithm continues scanning the text.</S>
			<S sid ="119" ssid = "10">The relations between functions F(i), M(i), G(i)/M(i), and the threshold value C(i,j) are illustrated in Figure 1.</S>
	</SECTION>
	<SECTION title="A simple experiment" number = "6">
			<S sid ="120" ssid = "1">For the simplest experimentation with the proposed algorithm, we have taken an article from Mexican newspaper with the following features: 997 words, 27 sentences, and 11 paragraphs selected by the author.</S>
			<S sid ="121" ssid = "2">All syntactic, pseudo-syntactic, and semantic links where marked manually beforehand.</S>
			<S sid ="122" ssid = "3">The algorithm was applied to the text lacking paragraph boundaries, using the following parameters: = 5 / L, = 2 / L, = 0.75 / L, A = B = 1, q = 0.6, C0 = 0.1, s =4, = 3.</S>
			<S sid ="123" ssid = "4">The results were measured by recall and precision as compared to bounda ries selected by the author.</S>
			<S sid ="124" ssid = "5">Also we proposed the same task to three experts.</S>
			<S sid ="125" ssid = "6">The results of all experiments are gathered in the following table: B o u n d ar ie s se le ct e d re ca ll pr ec isi o n Alg orit hm 9 0.</S>
			<S sid ="126" ssid = "7">6 0 0 . 6 6 Exp ert 1 9 0.</S>
			<S sid ="127" ssid = "8">5 0 0 . 6 6 Exp ert 2 6 0.</S>
			<S sid ="128" ssid = "9">5 0 0 . 8 3 Expert 3 13 0.80 0.61 One can see that the algorithm restores the paragraphs boundaries not worse than educated native speakers of Spanish.</S>
			<S sid ="129" ssid = "10">The results seem not persuasive but promising.</S>
	</SECTION>
	<SECTION title="Conclusion and Future Work. " number = "7">
			<S sid ="130" ssid = "1">A method of splitting text into paragraphs is proposed.</S>
			<S sid ="131" ssid = "2">It is based on the supposition that such splitting is implied by a measure of current text cohesion.</S>
			<S sid ="132" ssid = "3">The cohesion function is constructed basing on close co-occurrences of words pairs contained in a large database of collocations and semantic links.</S>
			<S sid ="133" ssid = "4">The computation includes several steps: estimation of the cohesion function, its smoothing, normalization, and comparison with a variable threshold depending on the expected paragraph length.</S>
			<S sid ="134" ssid = "5">Our preliminary experiments show promising results.</S>
	</SECTION>
</PAPER>
