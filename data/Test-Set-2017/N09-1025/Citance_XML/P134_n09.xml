<PAPER>
	<ABSTRACT>
	<SECTION title="Initial System Development. " number = "1">
			<S sid ="1" ssid = "1">We start with systems (Haddow and Koehn, 2012) that we developed for the 2012 Workshop on Statistical Machine Translation (CallisonBurch et al., 2012).</S>
			<S sid ="2" ssid = "2">The notable features of these systems are: • Moses phrase-based models with mostly de­ fault settings • training on all available parallel data, includ­ ing the large UN parallel data, the French­ English 109 parallel data and the LDC Giga­ worddata • very large tuning set consisting of the test sets from 20082010, with a total of 7,567 sen­ tences per language • GermanEnglish with syntactic pre­ reordering (Collins et al., 2005), compound splitting (Koehn and Knight, 2003) and use of factored representation for a POS target sequence model (Koehn and Hoang, 2007) • EnglishGerman with morphological target sequence model Note that while our final 2012 systems in­ cluded subsarnpling of training data with modified MooreLewis filtering (Axelrod et al., 2011), we did not use such filtering at the slatting point of our development.</S>
			<S sid ="3" ssid = "3">We will report on such filtering in Section 2.</S>
			<S sid ="4" ssid = "4">Moreover, our system development initially used the WMT 2012 data condition, since it took place throughout 2012, and we switched to WMT 2013 traitting data at a later stage.</S>
			<S sid ="5" ssid = "5">In this sec­ tion, we report cased BLEU scores (Papineni et al., 2001) on newstest20ll.</S>
			<S sid ="6" ssid = "6">1.1 Factored Backoff (GermanEnglish).</S>
			<S sid ="7" ssid = "7">We have consistently used factored models in past WMT systems for the GermanEnglish language pairs to include POS and morphological target se­ quence models.</S>
			<S sid ="8" ssid = "8">But we did not use the factored decomposition of translation options into multi­ ple mapping steps, since this usually lead to much slower systems with usually worse results.</S>
			<S sid ="9" ssid = "9">A good place, however, for factored decompo­ sition is the handling of rare and unknown source words which have more frequent morphological variants (Koehn and Haddow, 2012a).</S>
			<S sid ="10" ssid = "10">Here, we used ouly factored backoff for unknown words, giving gains in BLEU of +.12 for GermanEnglish.</S>
			<S sid ="11" ssid = "11">1.2 Tuning with k-best MIRA.</S>
			<S sid ="12" ssid = "12">In preparation for training with sparse features, we moved away from MERT which is known to fall 114 Proceedings of the Eighth Workshop on Statistical Machine Translation, pages 114121, Sofia, Bulgaria, August 89, 2013 @2013 Association for Computational Unguistics apart with many more than a couple of dozen fea­ tures.</S>
			<S sid ="13" ssid = "13">Instead, we used k-best MIRA (Cherry and Foster, 2012).</S>
			<S sid ="14" ssid = "14">For the different language pairs, we saw improvements in BLEU of -.05 to +.39, with an average of +.09.</S>
			<S sid ="15" ssid = "15">There was only a minimal change in the length ratio (Table 1) The lexical features were restricted to the 50 most frequent words.</S>
			<S sid ="16" ssid = "16">All these features together only gave minor improvements (Table 3).</S>
			<S sid ="17" ssid = "17">Table 1:Thning with k-best MIRA instead of MERT (cased BLEU scores with length ratio) 1.3 Translation Table Smoothing with.</S>
			<S sid ="18" ssid = "18">KneserNey Discounting Previously, we smoothed counts for the phrasal conditional probability distributions in the trans­ lation model with Good Turing discounting.</S>
			<S sid ="19" ssid = "19">We explored the use of KneserNey discounting, but resnlts are mixed (no difference on average, see Table 2), so we did not pursue this further.</S>
			<S sid ="20" ssid = "20">Table 3: Sparse features We also explored domain features in the sparse feature framework, in three different variations.</S>
			<S sid ="21" ssid = "21">Assume that we have three domains, and a phrase pair occurs in domain A 15 times, in domain B 5 times, and in domain C never.</S>
			<S sid ="22" ssid = "22">We compute three types of domain features: • binary indicator, if phrase-pairs occurs in do­ main (example: indA = 1, indB = 1, indo = 0) • ratio how frequent the phrase pairs occurs in domain (example: ratioA = 1i!s = .75, ratioB = 15 5 = .25, ratioc = 0) • subset of domains in which phrase pair oc­ curs (example: subsetAB = 1, other subsets 0) We tested all three feature types, and found the biggest gain with the domain indicator feature (+.11, Table 4).</S>
			<S sid ="23" ssid = "23">Note that we define as domain the different corpora (Europarl, etc.).</S>
			<S sid ="24" ssid = "24">The number of domains ranges from 2 to 9 (see column #d).1 Table 2: Translation model smoothing with KneserNey 1.4 Sparse Features.</S>
			<S sid ="25" ssid = "25">A significant extension of the Moses system over the last couple of years was the support for large numbers of sparse features.</S>
			<S sid ="26" ssid = "26">This year, we tested this capability on our big WMT systems.</S>
			<S sid ="27" ssid = "27">First, we used features proposed by Chiang et al.</S>
			<S sid ="28" ssid = "28">(2009): • phrase pair count bin features (bins 1, 2, 3, 45, 69, 10+) • target word insertion features • source word deletion features • word translation features • phrase length feature (source, target, both) Table 4:Sparse domain features When combining the domain features and the other sparse features, we see roughly additive gains (Table 5).</S>
			<S sid ="29" ssid = "29">We use the domain indicator fea­ ture and the other sparse features in subsequent ex­ periments.</S>
			<S sid ="30" ssid = "30">1In the final experiments on the 2013 data condition, one domain (commoncrawl) was added for all language pairs.</S>
			<S sid ="31" ssid = "31">bas elin e in di ca to r r a t i o s u b s e t de en fr e n es en cs en en de enfr en es en cs 22 .1 0 30 .1 1 30 .6 3 25 .4 9 1 6.</S>
			<S sid ="32" ssid = "32">1 2 29 .6 5 31 .9 5 1 7.</S>
			<S sid ="33" ssid = "33">4 2 22.</S>
			<S sid ="34" ssid = "34">18 +.0 8 30.</S>
			<S sid ="35" ssid = "35">41 +.3 0 30.</S>
			<S sid ="36" ssid = "36">75 +.1 2 25.</S>
			<S sid ="37" ssid = "37">56 +.0 7 15.</S>
			<S sid ="38" ssid = "38">95 .17 29.</S>
			<S sid ="39" ssid = "39">96 +.3 1 32.</S>
			<S sid ="40" ssid = "40">12 +.1 7 17.</S>
			<S sid ="41" ssid = "41">38 .04 22.</S>
			<S sid ="42" ssid = "42">10 ±.0 0 30.</S>
			<S sid ="43" ssid = "43">49 +.3 8 30.</S>
			<S sid ="44" ssid = "44">56 .07 25.</S>
			<S sid ="45" ssid = "45">63 +.1 4 15 .96 .1 6 29.</S>
			<S sid ="46" ssid = "46">88 +.2 3 32.</S>
			<S sid ="47" ssid = "47">16 +.2 1 17 .35 .0 7 22.</S>
			<S sid ="48" ssid = "48">16 +.0 6 30.</S>
			<S sid ="49" ssid = "49">36 +.2 5 30.</S>
			<S sid ="50" ssid = "50">85 +.2 2 25.43 .06 16.</S>
			<S sid ="51" ssid = "51">05 .07 29.</S>
			<S sid ="52" ssid = "52">92 +.2 7 32.</S>
			<S sid ="53" ssid = "53">08 +.2 3 17.</S>
			<S sid ="54" ssid = "54">40 .02 avg . + . 1 1 + . 0 9 + . 1 1 Table 5: Combining domain and other sparse features 1.5 Thning Settings.</S>
			<S sid ="55" ssid = "55">Given the opportunity to explore the parameter tuning of models with sparse features across many language pairs, we investigated a number of set­ tings.</S>
			<S sid ="56" ssid = "56">We expect tuning to work better with more iterations, longer n-best lists and bigger cube prun­ ing pop limits.</S>
			<S sid ="57" ssid = "57">Our baseline settings are 10 itera­ tions with 100-best lists (accumulating) and a pop limit ofI000 for tuning and 5000 for testing.</S>
			<S sid ="58" ssid = "58">Table 7: Maximum phrase length, reduced from baseline 1.7 Unpruned Language Models.</S>
			<S sid ="59" ssid = "59">Previously, we trained 5-gram language models using the default settings of the SRILM toolkit in terms of singleton pruning.</S>
			<S sid ="60" ssid = "60">Thus, training throws out all singletons n-grams of order 3 and higher.</S>
			<S sid ="61" ssid = "61">We explored whether unpruned language models could give better performance, even if we are ouly able to train 4-gram models due to memory con­ straints.</S>
			<S sid ="62" ssid = "62">At the time, we were not able to build un­ pruned 4-gram language models for English, but for the other language pairs we did see improve­ ments of -.07 to +.13 (Table 8).</S>
			<S sid ="63" ssid = "63">We adopted such models for these language pairs.</S>
			<S sid ="64" ssid = "64">5g pru ne d 4gu npr une den fr en es en cs 2 9 . 8 9 3 2 . 2 7 1 7 . 4 1 2 9 . 8 3 3 2 . 3 4 1 7 . 5 4 .0 7 +.0 7 +.1 3 Table 8: Language models without singleton pruning Table 6: Tuning settings (number of iterations, size of n-best list, and cube pruning pup limit) Results support running tuning for 25 iterations but we see no gains for 5000 pops.</S>
			<S sid ="65" ssid = "65">There is ev­ idence that ann-best list size of 1000 is better in tuning but we did not adopt this since these large lists take up a lot of disk space and slow down the MIRA optimization step (Table 6).</S>
			<S sid ="66" ssid = "66">1.6 Smaller Phrases.</S>
			<S sid ="67" ssid = "67">Given the very large corpus sizes (up to a billion words of parallel data for French-Englisb), the size of translation model and lexicalized reorder­ ing model becomes a challenge.</S>
			<S sid ="68" ssid = "68">Hence, we want to examine if restriction to smaller phrases is fea­ sible without loss in translation quality.</S>
			<S sid ="69" ssid = "69">Results in Table 7 suggest that a maximum phrase length of 5 gives almost identical results, and ouly with a phrase length limit of 4 significant losses occur.</S>
			<S sid ="70" ssid = "70">We adopted the limit of 5.</S>
			<S sid ="71" ssid = "71">1.8 Translations per Input Phrase.</S>
			<S sid ="72" ssid = "72">Finally, we explored one more parameter: the limit on how many translation options are considered per input phrase.</S>
			<S sid ="73" ssid = "73">The default for this setting is 20.</S>
			<S sid ="74" ssid = "74">However, our experiments (Table 9) sbow that we can get better results with a translation table limit of I00, so we adopted this.</S>
			<S sid ="75" ssid = "75">ttl 20 ttl 30 ttl 50 ttll OO de enfr en es en cs en en de enfr en es en cs 21.</S>
			<S sid ="76" ssid = "76">05 30.</S>
			<S sid ="77" ssid = "77">39 30.</S>
			<S sid ="78" ssid = "78">86 25.</S>
			<S sid ="79" ssid = "79">53 15.</S>
			<S sid ="80" ssid = "80">97 29.</S>
			<S sid ="81" ssid = "81">83 32.</S>
			<S sid ="82" ssid = "82">34 17.</S>
			<S sid ="83" ssid = "83">54 +.0 6 .0 2 ±.0 0 +.2 4 +.0 3 +.1 4 +.0 8 .0 5 +.0 9 +.0 5 .0 3 +.1 3 +.0 7 +.1 9 +.1 0 .0 2 +.</S>
			<S sid ="84" ssid = "84">01 +.</S>
			<S sid ="85" ssid = "85">07 .0 7 +.</S>
			<S sid ="86" ssid = "86">20 +.</S>
			<S sid ="87" ssid = "87">11 +.</S>
			<S sid ="88" ssid = "88">13 +.</S>
			<S sid ="89" ssid = "89">07 +.</S>
			<S sid ="90" ssid = "90">01 avg +.0 6 +.0 7 +.</S>
			<S sid ="91" ssid = "91">07 Table 9: Maximal number translations per input phrase 1.9 Other Experiments.</S>
			<S sid ="92" ssid = "92">We explored a number of other settings and fea­ tures, but did not observe any gains.</S>
			<S sid ="93" ssid = "93">• Using HMM alignment instead of IBM Model4 leads to losses of -.01 to -.27.</S>
			<S sid ="94" ssid = "94">• An earlier check of modified MooreLewis filtering (see also below in Section 3) gave very inconsistent results.</S>
			<S sid ="95" ssid = "95">• Filtering the phrase table with significance filtering (Johnson eta!., 2007) leads to losses of -.19 to -.63.</S>
			<S sid ="96" ssid = "96">• Throwing out phrase pairs with direct transla­ tion probability cf&gt;( elf) of less than w-5 has almost no effect.</S>
			<S sid ="97" ssid = "97">• Double-checking the contribution of the sparse lexical features in the final setup, we observe an average losses of -.07 when drop­ ping these features.</S>
			<S sid ="98" ssid = "98">• For the GermanEnglish language pairs we saw some benefits to using sparse lexical fea­ tures over POS tags instead of words, so we used this in the final system.</S>
			<S sid ="99" ssid = "99">1.10 Summary.</S>
			<S sid ="100" ssid = "100">We adopted a number of changes that improved our baseline system by an average of +.30, see Ta­ ble 10 for a breakdown.</S>
			<S sid ="101" ssid = "101">avg.</S>
			<S sid ="102" ssid = "102">method +.01 factored backoff +.09 kbest MIRA +.11 sparse features and domain indicator +.03 tuning with 25 iterations -.03 maximum phrase length 5 +.02 unpruned4gramLM +.07 translation table limit 100 +.30 total Table 10: Summary of impact of clumges Minor improvements that we did not adopt was avoiding reducing maximum phrase length to 5 (average +.03) and turting with 1000-best lists (+.02).</S>
			<S sid ="103" ssid = "103">The improvements differed significantly by lan­ guage pair, as detailed in Table 11, with the biggest gains for English-French (+.70), no gain for EnglishGerman and no gain for English­ German.</S>
			<S sid ="104" ssid = "104">1.11 New Data.</S>
			<S sid ="105" ssid = "105">The final experiment of the initial system devel­ opment phase was to train the systems on the new data, adding newstest2011 to the turting set (now 10,068 sentences).</S>
			<S sid ="106" ssid = "106">Table 12 reports the gains on newstest2012 due to added data, indicating very clearly that valuable new data resources became available this year.</S>
			<S sid ="107" ssid = "107">bas elin e imp rov ed L J .de enfr en es en cs en en de enfr en es en cs 2 1.</S>
			<S sid ="108" ssid = "108">9 9 3 0.</S>
			<S sid ="109" ssid = "109">0 0 3 0.</S>
			<S sid ="110" ssid = "110">4 2 2 5.</S>
			<S sid ="111" ssid = "111">5 4 1 6.</S>
			<S sid ="112" ssid = "112">0 8 2 9.</S>
			<S sid ="113" ssid = "113">2 6 3 1.</S>
			<S sid ="114" ssid = "114">9 2 1 7.</S>
			<S sid ="115" ssid = "115">3 8 2 2.</S>
			<S sid ="116" ssid = "116">0 9 3 0 . 4 6 3 0 . 7 9 2 5.</S>
			<S sid ="117" ssid = "117">7 3 1 6 . 0 8 2 9.</S>
			<S sid ="118" ssid = "118">9 6 3 2 . 4 1 1 7 . 5 5 +.1 0 +.4 6 +.3 7 +.1 9 ±.0 0 +.7 0 +.4 9 +.1 7 Table 11: Overall improvements per language pair W M T2 01 2 W M T2 01 3 L J .de enfr en es en cs en ru en en de enfr en -es en -cs enru 2 3 . 1 1 2 9 . 2 5 3 2 . 8 0 2 2 . 5 3 1 6 . 7 8 2 7 . 9 2 3 3 . 4 1 1 5 . 5 1 2 4 . 0 1 3 0 . 7 7 3 3 . 9 9 2 2 . 8 6 3 1 . 6 7 1 7 . 9 5 2 8 . 7 6 3 4 . 0 0 1 5 . 7 8 2 3 . 7 8 +0.</S>
			<S sid ="119" ssid = "119">90 +1.</S>
			<S sid ="120" ssid = "120">52 +1.</S>
			<S sid ="121" ssid = "121">19 +0.</S>
			<S sid ="122" ssid = "122">33 +1.</S>
			<S sid ="123" ssid = "123">17 +0.</S>
			<S sid ="124" ssid = "124">84 +0.</S>
			<S sid ="125" ssid = "125">59 +0.</S>
			<S sid ="126" ssid = "126">27 Table 12: Training with new data (newstest2012 scores)</S>
	</SECTION>
	<SECTION title="Domain Adaptation Techniques. " number = "2">
			<S sid ="127" ssid = "1">We explored two additional domain adaptation techniques: phrase table interpolation and modi­ fied MooreLewis filtering.</S>
			<S sid ="128" ssid = "2">2.1 Phrase Table Interpolation.</S>
			<S sid ="129" ssid = "3">We experimented with phrase-table interpolation using perplexity minimisation (Foster eta!., 2010; Sennrich, 2012).</S>
			<S sid ="130" ssid = "4">1n particular, we used the im­ plementation released with Sennrich (2012) and available in Moses, comparing both the naive and modified interpolation methods from that paper.</S>
			<S sid ="131" ssid = "5">For each language pair, we took the alignments created from all the data concatenated, built sepa­ rate phrase tables from each of the individual cor­ para, and interpolated using each method.</S>
			<S sid ="132" ssid = "6">The re­ sults are shown in Table 13 bas elin e n a i v e m od ifi ed f r e n es en • cs en &quot;&apos; ru en e n f r e n e s e n c s e n r u 3 0.</S>
			<S sid ="133" ssid = "7">7 7 3 3.</S>
			<S sid ="134" ssid = "8">9 8 2 3.</S>
			<S sid ="135" ssid = "9">1 9 3 1.</S>
			<S sid ="136" ssid = "10">6 7 28 .7 6 3 4.</S>
			<S sid ="137" ssid = "11">0 0 1 5.</S>
			<S sid ="138" ssid = "12">7 8 23 .7 8 30.</S>
			<S sid ="139" ssid = "13">63 .14 33.</S>
			<S sid ="140" ssid = "14">83 .15 22.77 .42 31.</S>
			<S sid ="141" ssid = "15">42 .25 28.</S>
			<S sid ="142" ssid = "16">88 +.1 2 34.</S>
			<S sid ="143" ssid = "17">07 +.0 7 15.</S>
			<S sid ="144" ssid = "18">88 +.1 0 23.</S>
			<S sid ="145" ssid = "19">84 +.0 6 34.</S>
			<S sid ="146" ssid = "20">03 +.0 5 23.03 .17 31.59 .08 34.</S>
			<S sid ="147" ssid = "21">31 +.3 1 15.</S>
			<S sid ="148" ssid = "22">87 +.0 9 23.68 .10 Table 13: Comparison of phrase-table interpolation (two methods) with baseline (on newstest2012).</S>
			<S sid ="149" ssid = "23">The baselines are as Table 12 except for the starred rows where tuning with PRO was found to be better.</S>
			<S sid ="150" ssid = "24">The modified interpolation was not possible in fr++en as it uses to much RAM.</S>
			<S sid ="151" ssid = "25">The results from the phrase-table interpolation are quite mixed, and we ouly used the technique for the final system in en-es.</S>
			<S sid ="152" ssid = "26">An interpolation based on PRO has recently been shown (Haddow, 2013) to improve on perplexity minimisation is some cases, but the current implementation of this method is limited to 2 phrase-tables, so we did not use it in this evaluation.</S>
			<S sid ="153" ssid = "27">2.2 Modified MooreLewis Filtering.</S>
			<S sid ="154" ssid = "28">In last year&apos;s evaluation (Koehn and Haddow, 2012b) we had some success with modified MooreLewis filtering (Moore and Lewis, 2010; Axelrod et al., 2011) of the training data.</S>
			<S sid ="155" ssid = "29">This year we conducted experiments in most of the lan­ guage pairs using MML filtering, and also exper­ imented using instance weighting (Mansour and Ney, 2012) using the (exponential of) the MML weights.</S>
			<S sid ="156" ssid = "30">The results are show in Table 14 ba se lin e M M L 2 0 % Tn st. W t Tn st. W t (s c al e ) f r e n es en * cs en * r u e n e n f r e n e s e n c s e n r u 30.</S>
			<S sid ="157" ssid = "31">77 33.</S>
			<S sid ="158" ssid = "32">98 23.</S>
			<S sid ="159" ssid = "33">19 31.</S>
			<S sid ="160" ssid = "34">67 28.</S>
			<S sid ="161" ssid = "35">67 34.</S>
			<S sid ="162" ssid = "36">00 15.</S>
			<S sid ="163" ssid = "37">78 23.</S>
			<S sid ="164" ssid = "38">78 34.</S>
			<S sid ="165" ssid = "39">26 +.2 8 22 .62 .5 7 31 .58 .0 9 28.</S>
			<S sid ="166" ssid = "40">74 +.0 7 34.</S>
			<S sid ="167" ssid = "41">07 +.0 7 15 .37 .4 1 22 .90 .8 8 33.85 .13 23.17 .02 31.57 .10 28.</S>
			<S sid ="168" ssid = "42">81 +.1 7 34.</S>
			<S sid ="169" ssid = "43">27 +.2 7 15.</S>
			<S sid ="170" ssid = "44">87 +.0 9 23.</S>
			<S sid ="171" ssid = "45">82 +.0 5 33.</S>
			<S sid ="172" ssid = "46">98 ±.0 0 23.13 .06 31.62 .05 28.63 .04 34.</S>
			<S sid ="173" ssid = "47">03 +.0 3 15.</S>
			<S sid ="174" ssid = "48">89 +.I I 23.72 .06 Table 14: Comparison of MML filtering and weighting with baseline.</S>
			<S sid ="175" ssid = "49">The MML uses monolingual news as in-domain, and selects from all training data after alignment.The weight­ ing uses the MML weights, optionally downscaled by 10, then exponentiated.</S>
			<S sid ="176" ssid = "50">Baselines are as Table 13.</S>
			<S sid ="177" ssid = "51">As with phrase-table interpolation, MML filter­ ing and weighting shows a very mixed picture, and not the consistent improvements these techniques offer on IWSLT data.</S>
			<S sid ="178" ssid = "52">In the final systems, we used MML filtering only for es-en.</S>
	</SECTION>
	<SECTION title="Operation Sequence Model (OSM). " number = "3">
			<S sid ="179" ssid = "1">We enhanced the phrase segmentation and re­ ordering mechanism by integrating OSM: an op­ eration sequence N-gram-based translation and re­ ordering model (Durrani et al., 2011) into the Moses phrase-based decoder.</S>
			<S sid ="180" ssid = "2">The model is based on minimal translation units (MTUs) and Markov chains over sequences of operations.</S>
			<S sid ="181" ssid = "3">An opera­ tion can be (a) to jointly generate a bi-language MTU, composed from sou rce and target words, or (b) to perform reordering by inserting gaps and do­ ing jumps.</S>
			<S sid ="182" ssid = "4">Model: Given a bilingual sentence pair &lt; F, E &gt; and its alignment A, we transform it to If h g aycht z/Jn hars I do o tfthhotse Figure 1: Bilingual Sentence with Alignments sequence of operations (01, 02 , . . .</S>
			<S sid ="183" ssid = "5">, OJ) and learn a Markov model over this sequence as: JPosm(F, E,A) = p(o{) = IJ p(ojlOj-n+l, ...,Oj 1) j = l By coupling reordering with lexical generation, each (translation or reordering) decision condi­ tions on n - 1 previous (translation and reorder­ ing) decisions spann ing across phrasal boundaries thus overcoming the problematic phrasal indepen­ dence assumption in the phrase-based model.</S>
			<S sid ="184" ssid = "6">In the OSM model, the reordering decisions influ­ ence lexical selection and vice versa.</S>
			<S sid ="185" ssid = "7">Lexical gen­ eration is strongly coupled with reordering thus improving the overall reordering mechanism.</S>
			<S sid ="186" ssid = "8">We used the modified version of the OSM model (Durrani et al., 2013b) that addition­ ally handles discontinuous and unaligned target MTUs3.</S>
			<S sid ="187" ssid = "9">We borrow 4 count based supportive fea­ tures, the Gap, Open Gap, Gap-width and Dele­ tion penalties from Durrani eta!.</S>
			<S sid ="188" ssid = "10">(2011).</S>
			<S sid ="189" ssid = "11">Training: During training, each bilingual sen­ tence pair is deterministically converted to a unique sequence of operations.</S>
			<S sid ="190" ssid = "12">Please refer to Durrani et al.</S>
			<S sid ="191" ssid = "13">(2011) for a list of operations and the conversion algorithm and see Figure 1 and Ta­ ble 15 for a sample bilingual sentence pair and its step-wise conversion into a sequence of oper­ ation.</S>
			<S sid ="192" ssid = "14">A 9-gram KneserNey smoothed operation sequence model is trained with SRILM.</S>
			<S sid ="193" ssid = "15">Search: Although the OSM model is based on minimal uni ts, phrase-based search on top of OSM model was found to be superior to the MTU-based decoding in Durrani et al.</S>
			<S sid ="194" ssid = "16">(2013a).</S>
			<S sid ="195" ssid = "17">Following this framework allows us to use OSM model in tandem with phrase-based models.</S>
			<S sid ="196" ssid = "18">We integrated the gen­ erative story of the OSM model into the hypothe­ sis extension of the phrase-based Moses decoder.</S>
			<S sid ="197" ssid = "19">Please refer to (Durrani et al., 2013b) for details.</S>
			<S sid ="198" ssid = "20">Results: Table 16 shows case-sensitive BLEU scores on newstest2012 and newstest2013 for fi 3 In the original OSM model these are removed from the alignments through a post-processing heuristic which hurt.s in some language pairs.</S>
			<S sid ="199" ssid = "21">See Durrani et al.</S>
			<S sid ="200" ssid = "22">(2013b) for deta1led experiments.</S>
			<S sid ="201" ssid = "23">393m 3,775m 17,629m 39,919m 59,794m Table 17: Counts of unique n-grams (m for millions) for the 5 orders in the unconstrained language model Table 15: Step-Wise Generation ofFtgore I The large language model was 1hen quantized to 10 bits and compressed to 643 GB wi1h KenLM (Heafield, 2011), loaded onto a machine wi1h 1 TB RAM, and used as an additional feature in unconstrained French-English, SpanishEnglish, and CzechEnglish submissions.</S>
			<S sid ="202" ssid = "24">This additional language model is 1he ouly difference between our final constrained and unconstrained submissions; no additional parallel data was used.</S>
			<S sid ="203" ssid = "25">Results are shown in Table 18.</S>
			<S sid ="204" ssid = "26">Improvement from large lan­ guage models is not a new result (Brants et al., 2007); 1he primary contribution is estimating on a single machine.</S>
			<S sid ="205" ssid = "27">Co nst rai ned Un con stra ine d f ) . fr e n es en cs en ru eo 3 1 . 4 6 3 0 . 5 9 2 7 . 3 8 2 4 . 3 3 3 2 . 2 4 3 1 . 3 7 2 8 . 1 6 2 5 . 1 4 +.7 8 +.7 8 +.7 8 +.8 1 Table 16: Results using the OSM Feature nal systems from Section 1 and 1hese systems aug­ mented wi1h 1he operation sequence model.</S>
			<S sid ="206" ssid = "28">The model gives gains for all language pairs (BLEU +.09 to +.90, average +.37, on newstest2013).</S>
	</SECTION>
	<SECTION title="Huge Language Models. " number = "4">
			<S sid ="207" ssid = "1">To overcome 1he memory limitations of SRILM, we implemented modified KneserNey (Kneser and Ney, 1995; Chen and Goodman, 1998) smoothlng from scratch using disk-based stream­ ing algori1hms.</S>
			<S sid ="208" ssid = "2">This open-source4 tool is de­ scribed fully by Heafield et al.</S>
			<S sid ="209" ssid = "3">(2013).</S>
			<S sid ="210" ssid = "4">We used it to estimate an unpruned 5-gram language model on web pages from ClueWeb09.5 The corpus was preprocessed by removing spam (Cormack et al., 2011), selecting English documents, splitting sen­ tences, deduplicating, tokenizing, and truecasing.</S>
			<S sid ="211" ssid = "5">Estimation on 1he remaining 126 billion tokens took 2.8 days on a single machine wi1h 140 GB RAM (of which 123GB was used at peak) and sbr.</S>
			<S sid ="212" ssid = "6">hard drives in a RAIDS configuration.</S>
			<S sid ="213" ssid = "7">Statistics about 1he resulting model are shown in Table 17.</S>
			<S sid ="214" ssid = "8">4http://kheafield.com/code/ 5http://lemurproject.org/clueweb&amp;9/ Table 18: Gain on newstest2013 from the unconstrained lan­ guage model.</S>
			<S sid ="215" ssid = "9">Our time on shared machines with 1 TB is limited so RussianEnglish was run after the deadline and GermanEnglish was not ready in time.</S>
	</SECTION>
	<SECTION title="Summary. " number = "5">
			<S sid ="216" ssid = "1">Table 19 breaks down 1he gains over 1he final sys­ tem from Section 1 from using 1he operation se­ quence models (OSM), modified MooreLewis fil­ tering (MML), fixing a bug wi1h 1he sparse lex­ ical features (Sparse-Lex Bugfix), and instance weighting (Instance Wt.), translation model com­ bination (TM-Combine), and use of 1he huge lan­ guage model (ClueWeb09 LM).</S>
	</SECTION>
	<SECTION title="Acknowledgments">
			<S sid ="217" ssid = "2">Thanks to Miles Osborne for preprocessing the ClueWeb09 corpus.</S>
			<S sid ="218" ssid = "3">The research leading to these results has re­ ceived funding from the European Union Seventh Framework Programme (FP7n0072013) under graot agreement 287658 (EU BRIDGE) aod grant agreement 288487(MosesCore).This work made use of the resources pruvided by the Edioburgh Compure aod Data Facility&apos;.</S>
			<S sid ="219" ssid = "4">The ECDF is partilllly supported by the eDIKT initia­ tive7.</S>
			<S sid ="220" ssid = "5">This work also used the Extreme Science and Engineering Discovery Environment (XSEDE), which is supported by National Science Foundation grant number OCI1053575.</S>
			<S sid ="221" ssid = "6">Specifically, Stampede was used under allocation TGCCR110017.</S>
			<S sid ="222" ssid = "7">6http://www.ecdf.ed.ac.uk/ 7http://www.edikt.org.uk/ System 1 2012 2013 SpanishEnglish BnglishSpamsh CzechEnglish</S>
	</SECTION>
</PAPER>
