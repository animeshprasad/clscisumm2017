<PAPER>
	<ABSTRACT>
	<SECTION title="Words, constructions, and the lexicon. " number = "1">
			<S sid ="1" ssid = "1">The observation that unpredictable form-meaning combinations are not restricted in size forms the basis for Construction Grammar (Fillmore 1988, Fillmore et al. 1988, Kay and Fillmore 1999, Goldberg 1995, 2006, Goldberg and Jackendoff 2004, Michaelis 2010, Sag 2010, Boas and Sag 2012).1 A meaning that is associated with a word or a part of a word may also be associated with a phrasal structure in the same language, or in another language.</S>
			<S sid ="2" ssid = "2">Construction Grammar takes the structure and organisation of the collection of listemes/constructions as crucially important, and a central concern is the study of the relations among constructions: this contrasts with Di Sciullo and Williams (1987), who consider the collection of listemes to be unstructured and the study of the relations among listemes uninteresting.</S>
			<S sid ="3" ssid = "3">Examples such as (13) involve correspondences between phrasal structures and idiosyncratic meanings; the syntactic frame of the multi-word expression itself, perhaps along with some specifications on what words are permitted, evokes some interpretation.</S>
			<S sid ="4" ssid = "4">(1) The bigger the better.</S>
			<S sid ="5" ssid = "5">(Fillmore et al. 1988, Culicover and Jackendoff 1999) (2) What’s that koala doing sleeping in the corner?</S>
			<S sid ="6" ssid = "6">(the ‘What’s X doing Y’ construction: Kay and Fillmore 1999) (3) Smithy drank his way through university.</S>
			<S sid ="7" ssid = "7">(Jackendoff 1990, Goldberg 1995) 1 See Sag et al.</S>
			<S sid ="8" ssid = "8">(2012) for a historical overview of Construction Grammar and further references.</S>
			<S sid ="9" ssid = "9">See Sag (2012) for an informal overview of a formal theory of Construction Grammar (Sign-Based Construction Grammar).</S>
			<S sid ="10" ssid = "10">Most words in the expressions above are exchangeable for other words, so they seem more flexible than prototypical idioms.</S>
			<S sid ="11" ssid = "11">Yet their form and associated interpretation must be learned by English speakers, as these constructions do not, it is argued, follow from general compositional principles of English grammar.</S>
			<S sid ="12" ssid = "12">On the Construction Grammar view, such expressions are not a peripheral part of the grammar which need not be accounted for in grammatical theory; instead, they lie at one end of a continuum of structures relating forms to meanings.</S>
			<S sid ="13" ssid = "13">Constructions as pairings of form and meaning can be larger or smaller than a word, and can have more or less general or predictable structure and meaning.</S>
			<S sid ="14" ssid = "14">Following on from this view, Construction Grammarians have denied the utility of a strict division between word-internal grammatical regularities and phrasal regularities, or between semantically bleached grammatical structures and structures which contribute specialised or irregular meaning.</S>
			<S sid ="15" ssid = "15">As a consequence, Construction Grammarians have tended to emphasise commonalities across types of constructions rather than differences, and to deemphasise differences between word-level and phrase-level constructions.</S>
			<S sid ="16" ssid = "16">Indeed, some advocates of Construction Grammar have gone even further and claimed that the distinction between lexicon and grammar is no longer useful, as illustrated by the following quotes: [M]orphemes are clear instances of constructions in that they are pairings of meaning and form that are not predictable from anything else.</S>
			<S sid ="17" ssid = "17">It is a consequence of this definition that the lexicon is not neatly differentiated from the rest of grammar.</S>
			<S sid ="18" ssid = "18">(Goldberg 1995:4) In Construction Grammar, no strict division is assumed between the lexicon and syntax.</S>
			<S sid ="19" ssid = "19">(Goldberg 1995:7) Every theory of language has to take a word to be a complex of phonological, syntactic, and semantic structures; commonly, the store of words is called the lexicon.</S>
			<S sid ="20" ssid = "20">Aspects [(Chomsky 1965)] treats the lexicon as a component of language distinct from the rules of grammar.</S>
			<S sid ="21" ssid = "21">Words are taken to be the locus of irregularity in language, while rules of grammar encode all the regularities.</S>
			<S sid ="22" ssid = "22">Words get into sentences by being inserted into syntactic derivation, at the point when syntactic trees are being built and before trees begin to be manipulated and fed to phonology and semantics.</S>
			<S sid ="23" ssid = "23">But while [this view of the lexicon] was altogether plausible in the context of early work in generative grammar, I believe that subsequent developments reveal it as another major mistake that has remained in the background as unquestionable dogma within the mainstream school of thought.</S>
			<S sid ="24" ssid = "24">(Jackendoff 2007:53) It is also telling that the section that contains this last quote is titled “Another Fundamental Mistake: The Lexicon/Grammar Distinction”.</S>
			<S sid ="25" ssid = "25">Another perspective on this fundamental issue arises if we ask whether it there is any necessary theoretical distinction between words and phrases.</S>
			<S sid ="26" ssid = "26">Many linguists agree that words and phrases must be distinguished (Anderson 1992, Aronoff 1993, Sadler and Spencer 2000, Stump 2001, Blevins 2006), though the word/phrase distinction is denied by some linguists, not just some working in Construction Grammar, but also those working within the Distributed Morphology paradigm (Halle and Marantz 1993, 1994, Marantz 1997, Siddiqi 2009), which otherwise has quite different morphosyntactic assumptions.</S>
			<S sid ="27" ssid = "27">We believe that there is a fundamental reason to maintain the distinction between words and phrases that has previously gone unaddressed in the literature.</S>
			<S sid ="28" ssid = "28">It has been shown (Shieber 1985) that natural language syntax falls in the class of mildly context-sensitive languages (Joshi et al. 1991, VijayShanker and Weir 1994), whereas natural language morphology falls within the generatively weaker class of regular languages (see Beesley and Karttunen 2003 and references therein).</S>
			<S sid ="29" ssid = "29">If the full computational power of the syntactic system underlies morphology, this formally well-understood fundamental distinction is entirely unexplained.</S>
			<S sid ="30" ssid = "30">From an alternative, empirical perspective one can ask the following question: if morphology has the full power of syntax, why are there no clear morphological equivalents of unbounded dependencies?</S>
			<S sid ="31" ssid = "31">Challenging non-concatenative morphological phenomena, such as circumfixion and root-and-pattern morphology, can be characterized by regular means (Beesley and Karttunen 2000, 2003).</S>
			<S sid ="32" ssid = "32">Even total reduplication can be characterized without going outside the regular languages (Beesley and Karttunen 2000).</S>
			<S sid ="33" ssid = "33">It is of course possible that morphology does have the full expressive power of syntax, but we simply have not yet come across languages with unbounded morphological dependencies.</S>
			<S sid ="34" ssid = "34">However, this would be surprising, given that unbounded dependencies are syntactically prevalent.</S>
			<S sid ="35" ssid = "35">In this paper, we will show that it is not necessary to remove the words/phrases distinction or the lexicon/grammar distinction to capture constructional effects, although we agree that there are important generalisations involving constructions of all sizes that must be captured at both grammatical and semantic levels.</S>
			<S sid ="36" ssid = "36">In keeping with much other work in Lexical Functional Grammar (see particularly Bresnan 2001: Chapter 6), we believe that the proper grammatical level for characterising similarities across constructions is a level like LFG’s functional structure (f-structure), which represents abstract syntactic relations such as subject, object, and adjunct, as well as syntactic features such as person, number, gender, case, tense, and aspect.</S>
			<S sid ="37" ssid = "37">In contrast, the constituent structure (c-structure) tree encodes word order and phrasal dominance and grouping, and is the level at which the difference between words and phrases is represented, in keeping with the Lexical Integrity Principle.</S>
			<S sid ="38" ssid = "38">As Bresnan (2001:93) observes, “...</S>
			<S sid ="39" ssid = "39">LFG’s lexical integrity principle implies that while morphemic words and syntactic phrases are different types of forms of expression in c- structure, they may carry the same types of information in f-structure.</S>
			<S sid ="40" ssid = "40">In other words, these different forms of expression — words and phrases — may be functionally equivalent (in terms of f-structure content).” An early statement of Lexical Integrity was provided by Simpson (1983:74): (4) Lexical Integrity (Simpson 1983:74) No constituent structure rule may order any element into or out of lexical categories such as N, A, V. That is, constituent structure rules are blind to the internal structure of lexical categories.</S>
			<S sid ="41" ssid = "41">Subsequent work within LFG has adopted Lexical Integrity as a fundamental principle differentiating word- internal structure from phrasal syntax, as in (5), and establishing words as indivisible, undecomposable units at c-structure as in (6): (5) Lexical Integrity (Bresnan and Mchombo 1995:181) Words are built out of different structural elements and by different principles of composition than syntactic phrases.</S>
			<S sid ="42" ssid = "42">(6) Lexical Integrity (Bresnan 2001:93) Morphologically complete words are leaves of the c[onstituent]-structure tree and each leaf corresponds to one and only one c[onstituent]-structure node.</S>
			<S sid ="43" ssid = "43">In a series of papers, Booij (2005a,b, 2009) provides substantial evidence for the Lexical Integrity Principle from a Construction Grammar viewpoint.</S>
			<S sid ="44" ssid = "44">His observations are an excellent fit with the LFG view of Lexical Integrity, which assumes that syntactic rules have access to certain (f-structural) aspects of word-internal structure, but not to other (c-structural) aspects.</S>
			<S sid ="45" ssid = "45">The c-structure/f-structure distinction is crucial to the LFG-theoretic understanding of the Strong Lexicalist Hypothesis, which is essentially what Lexical Integrity captures.</S>
			<S sid ="46" ssid = "46">The Strong Lexicalist Hypothesis states that syntactic rules of phrase formation cannot access any parts of words.</S>
			<S sid ="47" ssid = "47">This is a generalization of the Weak Lexicalist Hypothesis, which states that syntactic rules cannot access derivational morphology, but allows access to inflectional morphology.</S>
			<S sid ="48" ssid = "48">Marantz (1997) has argued that lexicalism is untenable based on the view that morphology can make complex syntactic contributions; this is the foundational doctrine of Distributed Morphology.</S>
			<S sid ="49" ssid = "49">However, although Marantz (1997) has often been taken as arguing against lexicalism tout court, his arguments actually depend on his particular conception of syntax, which does not distinguish constituent structure from functional structure.</S>
			<S sid ="50" ssid = "50">Lexical Integrity as a principle of c-structure does not disallow words from making complex contributions at functional structure; this means that it is possible for individual, morphologically complex words to express the same information as multi-word expressions.</S>
			<S sid ="51" ssid = "51">For example, the future tense can be expressed with verbal morphology as in the French example in (7), or with a future auxiliary as in the English example in (8).</S>
			<S sid ="52" ssid = "52">(7) Il arrivera.</S>
			<S sid ="53" ssid = "53">he arrive.FU TU R E ‘He will arrive.’ (8) He will arrive.</S>
			<S sid ="54" ssid = "54">In (7), the future tense is realised directly on the main verb.</S>
			<S sid ="55" ssid = "55">In contrast, the future is expressed with the morphologically independent auxiliary will in (8); see Ackerman and Webelhuth (1998) and Ackerman and Stump (2004) for more discussion of examples of this type.</S>
			<S sid ="56" ssid = "56">To take another example, the Swedish singular indefinite marker is a determiner, as in English, realised as en or ett depending on the gender.</S>
			<S sid ="57" ssid = "57">However, the Swedish definite marker is a morphologically bound suffix on the noun.</S>
			<S sid ="58" ssid = "58">Example (9) shows the periphrastic indefinite+noun combination, while (10) shows the same noun with a definite suffix: (9) En va¨g kan vara mycket la˚ng.</S>
			<S sid ="59" ssid = "59">a road can be very long ‘A road can be very long.’ (10) Va¨gen hem var mycket la˚ng.</S>
			<S sid ="60" ssid = "60">road.the home was very long ‘The road home was very long.’ The periphrastic expressions will arrive, en va¨ g and a/the road are comparable to the synthetic arrivera and va¨ gen. The periphrastic and synthetic forms alike contain information that is syntactically relevant.</S>
			<S sid ="61" ssid = "61">The dual nature of syntactic structure in Lexical Functional Grammar (LFG: Bresnan 2001, Dalrymple 2001, Falk 2001) captures both the commonalities and the differences between words and phrases, as argued at length by Simpson (1983), Mohanan (1994, 1995), Bresnan and Mchombo (1995), Matsumoto (1996), Bresnan (2001), and many others.</S>
			<S sid ="62" ssid = "62">Constituent structure represents surface word order and phrasal grouping; in accordance with Lexical Integrity, morphologically bound information about tense and definiteness is ‘invisible’ at c-structure, in the sense that the information is not hosted by separate c-structure nodes.</S>
			<S sid ="63" ssid = "63">At functional structure, words and phrases can make similar or identical syntactic contributions, accounting for the similarities between words and phrases at this more abstract syntactic level: as Bresnan (1998) puts it, morphology competes with syntax in cases like (7–10), specifying similar grammatical structure by different morphological means.</S>
			<S sid ="64" ssid = "64">LFG’s definition of Lexical Integrity entails that individual morphemes may contribute to functional structure, while the smallest unit visible at constituent structure is the word.</S>
			<S sid ="65" ssid = "65">A comparison of English the road and Swedish va¨ gen shows that morphology can contribute information directly to the f-structure without violating Lexical Integrity at c-structure.</S>
			<S sid ="66" ssid = "66">Lexical entries for the, road, and va¨ gen are given in (11–13): (11) the D (↑ D EFIN ITE ) = + (12) road N (↑ PR ED ) = ‘road’ (↑ N U MB ER) = SG (↑ PER SO N ) = 3 (13) va¨gen N (↑ PR ED ) = ‘road’ (↑ N U MB ER) = SG (↑ PER SO N ) = 3 (↑ D EFIN ITE ) = + (↑ G EN D ER ) = C O MMO N C-structures and f-structures for the road and va¨ gen are given in (14): (14) NP N′ P R ED ‘ro ad’    D EFIN ITE +  N N U MB ER S G  P ER SO N 3  va¨gen   G E N D E R C O M M O N (15) DP P R ED ‘roa d’ D′ D NP the N′ N  D E F I N I T E +    N U M B E R S G   P ER SO N 3 road Despite the very different c-structures for the road and va¨ gen, the f-structures are almost identical, the only difference being that English nouns do not bear gender.</S>
			<S sid ="67" ssid = "67">In LFG, syntactically relevant information can be contributed to the f-structure by bound morphology, even though the internal complexity of words is invisible at c-structure.</S>
			<S sid ="68" ssid = "68">Lexical Integrity is therefore maintained at c-structure.</S>
			<S sid ="69" ssid = "69">The key to capturing constructional effects in LFG, without giving up Lexical Integrity, is this observation that words and phrases can make identical contributions to f-structure.</S>
			<S sid ="70" ssid = "70">Given the Glue Semantics approach to compositional semantics (Dalrymple 1999, 2001, Asudeh 2012), which allows terms for semantic composition to be specified based on f-structures, this equally means that words and phrases can make identical semantic contributions.</S>
			<S sid ="71" ssid = "71">We provide a means of expressing commonalities in functional structure and semantics across linguistic units of various sizes through the means of LFG’s templates (Dalrymple et al. 2004, Asudeh 2012), bundles of grammatical descriptions, which can be associated with parts of words, with words, or with phrases.</S>
			<S sid ="72" ssid = "72">Templates can be defined in terms of other templates, thus allowing us to express similarities and differences between constructions, whether they are expressed by a single word or a phrase.</S>
			<S sid ="73" ssid = "73">In this way, we account for the similarities between words and phrases which have been a focus of work within Construction Grammar, but within a framework which also incorporates the differences between words/phrases and lexicon/grammar as a fundamental architectural principle.</S>
			<S sid ="74" ssid = "74">We believe that our proposals are valid no matter what theory of morphology is adopted, and no matter whether the term “lexicon” refers to a list of words, a list of morphemes, or a list of all unpredictable form-meaning pairs whatever their size.</S>
			<S sid ="75" ssid = "75">The paper is structured as follows.</S>
			<S sid ="76" ssid = "76">In section 2, we present the three similar constructions in English, Swedish, and Dutch and show that the constructions are expressed differently in the different languages.</S>
			<S sid ="77" ssid = "77">In section 3, we present templates and show how they can be used to express generalizations.</S>
			<S sid ="78" ssid = "78">In section 4, we present our formal analysis in terms of LFG with Glue Semantics.</S>
			<S sid ="79" ssid = "79">In section 5, we briefly consider a further generalization of the theory in terms of linking theory, which concerns the instantiation of grammatical functions based on argument structure.</S>
			<S sid ="80" ssid = "80">Section 6 is the conclusion.</S>
			<S sid ="81" ssid = "81">The paper ends with a set of formal appendices, which includes complete Glue proofs for three examples.</S>
	</SECTION>
	<SECTION title="Constructions expressed in words and phrases. " number = "2">
			<S sid ="82" ssid = "1">We now turn to our view of constructions in LFG.</S>
			<S sid ="83" ssid = "2">As an illustration of our view, we examine variants of the traversal construction in English, Swedish, and Dutch, showing that different properties of the construction – the phrasal configuration, some combination of words in the construction, or both – are responsible for its meaning.</S>
			<S sid ="84" ssid = "3">Section 2.1 discusses the English way-construction, which is signalled by the presence of the word way.</S>
			<S sid ="85" ssid = "4">Section 2.2 discusses the Swedish counterpart of this construction, the Directed Motion Construction, which is signalled not by a particular word, but by a special phrasal configuration.</S>
			<S sid ="86" ssid = "5">Finally, Section 2.3 presents two Dutch constructions, the weg-construction and the Transition to Location Construction; the weg-construction is similar to its English counterpart, in that the construction is signalled by the presence of the word weg.</S>
			<S sid ="87" ssid = "6">The Dutch Transition to Location Construction is different from both English and Swedish, in that there is no special word or phrasal configuration to signal the construction.</S>
			<S sid ="88" ssid = "7">Each of these patterns involves specification of the constraints associated with the construction in a different way: associated with a word other than the predicate (English way or Dutch weg); associated with a special phrase structure rule (the Swedish Directed Motion Construction); or associated with the main predicate of the construction (the Dutch Transition to Location Construction).</S>
			<S sid ="89" ssid = "8">2.1 Signalled by a non-head word.</S>
			<S sid ="90" ssid = "9">It has been argued that the English way-construction in (16) deserves a constructional analysis rather than a compositional one, since the construction implies directed motion even though none of the individual words in way-examples necessarily denotes motion (Jackendoff 1992, 1990, Goldberg 1995).2 Our analysis associates constraints on the form and meaning of the construction with the word way.</S>
			<S sid ="91" ssid = "10">The analysis must capture several generalisations about this construction.</S>
			<S sid ="92" ssid = "11">The action denoted by the verb elbow does not normally involve traversal, though in example (16) this meaning is present.</S>
			<S sid ="93" ssid = "12">(16) Sarah elbowed her way through the crowd.</S>
			<S sid ="94" ssid = "13">In fact, for most English speakers the English way-construction has two closely related meanings, one involving means and one involving manner (Jackendoff 1990:215, Goldberg 1995:202–212), though Goldberg (1995:202–203) points out that the manner interpretation is not available for all speakers.</S>
			<S sid ="95" ssid = "14">Examples (17) and (18) both involve an event denoted by the main verb (whistling or elbowing) and its relation to a second event of traversal of a path.</S>
			<S sid ="96" ssid = "15">The verb elbowed in example (17) specifies the means by which Sarah managed to traverse the crowd: the traversal was made possible by the elbowing action.</S>
			<S sid ="97" ssid = "16">For those who allow the manner interpretation, the verb whistled in example (18) specifies the manner in which the traversal of the room took place: Sarah whistled while crossing the room.</S>
			<S sid ="98" ssid = "17">(17) Means: Sarah elbowed her way through the crowd.</S>
			<S sid ="99" ssid = "18">(traversed the crowd by means of elbowing) (18) Manner: Sarah whistled her way across the room.</S>
			<S sid ="100" ssid = "19">(traversed the room while whistling) Our analysis allows us to specify what these meanings have in common and how they differ, as well as allowing the statement of cross-linguistic similarities and differences in similar constructions in other languages.</S>
			<S sid ="101" ssid = "20">2 Marantz (1992) informally sketches an alternative view of the way-construction, which attempts to derive properties of the construction from facts about direct complementation and secondary predication.</S>
			<S sid ="102" ssid = "21">Jackendoff (1990:216) and others have claimed that the possessor in the English way-construction must be coreferential with the subject, and indeed, in an overwhelming number of cases, this generalisation holds.</S>
			<S sid ="103" ssid = "22">However, we have found examples which counterexemplify this claim: (19) He had bought his son’s way into an exclusive military academy normally reserved for the gentry and had outfitted him in style.</S>
			<S sid ="104" ssid = "23">www.samizdat.com/hero7.html (retrieved April 5, 2010) (20) As ambassador, Chesterfield negotiated Britain’s way into the Treaty of Vienna in 1731.</S>
			<S sid ="105" ssid = "24">www.aim25.ac.uk/cgi-bin/frames/fulldesc?coll_id=2117{&amp;}inst_id=86 (retrieved April 5, 2010) Furthermore, the noun way in the way-construction can be modified (Jackendoff 1990:217, Goldberg 1995:206): (21) In these last twenty years Richard Strauss has flamed his meteoric way into our ken — and out of it.</S>
			<S sid ="106" ssid = "25">(Buchanan 1918) An analysis of the construction must be able to derive a meaning for these examples as well; our analysis does.</S>
			<S sid ="107" ssid = "26">2.2 Signalled by a special phrasal configuration.</S>
			<S sid ="108" ssid = "27">Toivonen (2002) discusses the Swedish Directed Motion Construction (DMC).</S>
			<S sid ="109" ssid = "28">The DMC, which is exemplified in (22), consists of a subject, a verb, a weak reflexive (coindexed with the subject), and a directional PP.</S>
			<S sid ="110" ssid = "29">(22) Sarah armba˚gade sig genom ma¨ngden.</S>
			<S sid ="111" ssid = "30">S. elbowed SELF through crowd.D EF ∼ ‘Sarah elbowed her way through the crowd.’ The Swedish DMC is very similar in meaning and use to the English way-construction, but the DMC does not include any word such as way to flag the construction.</S>
			<S sid ="112" ssid = "31">Instead, the construction is distinguished by the strict requirement for the presence of certain constituents, restrictions on the individual constituents, and perhaps most interestingly, by a word order quirk at odds with the rest of Swedish grammar (Toivonen 2002).</S>
			<S sid ="113" ssid = "32">This word order quirk is only seen in DMC expressions that contain a verbal particle.</S>
			<S sid ="114" ssid = "33">Consider (23a–b): (23) a. Jonas knuffade sig in i ma¨ngden.</S>
			<S sid ="115" ssid = "34">J. pushed SELF in inside crowd.D EF ‘Jonas pushed his way into the crowd.’ b. Jonas knuffade in dig i ma¨ngden.</S>
			<S sid ="116" ssid = "35">J. pushed in you inside crowd.D EF ‘Jonas pushed you into the crowd.’ Verbal particles in Swedish (such as in) are normally adjoined to the verb, and must precede the direct object, as in (23b) (Toivonen 2003).</S>
			<S sid ="117" ssid = "36">However, in the DMC, the particle may not adjoin to the verb; instead, it is a part of the PP, in i ma¨ ngden, and follows the reflexive, for example sig in (23a).</S>
			<S sid ="118" ssid = "37">Toivonen (2002) considers two distinct analyses of the DMC.</S>
			<S sid ="119" ssid = "38">One proposed analysis is constructional, in the sense that the DMC meaning is associated directly with a syntactic frame; we adopt an analysis of this sort, as we discuss below.</S>
			<S sid ="120" ssid = "39">The other analysis is purely lexical: the DMC verb is related to another verb via a lexical redundancy rule.</S>
			<S sid ="121" ssid = "40">The DMC verb carries very detailed specifications about what types of arguments it must take.</S>
			<S sid ="122" ssid = "41">Two facts disfavour the second analysis, which ties the DMC to the verb: first, DMC verbs cannot participate in any kind of derivational morphology.</S>
			<S sid ="123" ssid = "42">They cannot be turned into nouns or adjectives, for example.</S>
			<S sid ="124" ssid = "43">The DMC verbs can also not be passivised.</S>
			<S sid ="125" ssid = "44">Second, the most striking distinguishing feature of the DMC is the peculiar word order constraint mentioned above.</S>
			<S sid ="126" ssid = "45">Prepositional particles cannot appear in the normal, pre-object particle position in the DMC.</S>
			<S sid ="127" ssid = "46">This is what distinguishes the DMC from resultatives, for example.</S>
			<S sid ="128" ssid = "47">For these reasons, we prefer an analysis which connects the DMC meaning with a specific phrase structural configuration.</S>
			<S sid ="129" ssid = "48">2.3 Signalled by the predicate.</S>
			<S sid ="130" ssid = "49">Van Egmond (2006, 2009) shows that Dutch has two constructions that indicate traversal of a path.</S>
			<S sid ="131" ssid = "50">One construction contains the word weg ‘way’ (24), and the other does not (25).</S>
			<S sid ="132" ssid = "51">(24) Wij worstelen ons een weg door de menigte.</S>
			<S sid ="133" ssid = "52">we wrestle ourselves a way through the crowd ‘We are wrestling our way through the crowd.’ (25) Janneke bluft zich uit de benarde situatie.</S>
			<S sid ="134" ssid = "53">J. bluffs SELF out the awkward situation ∼ ‘Janneke bluffs her way out of the awkward situation.’ The weg-construction exemplified in (24) is also discussed in Verhagen (2003).</S>
			<S sid ="135" ssid = "54">Although the two Dutch constructions are similar in meaning, van Egmond (2006, 2009) shows that they nevertheless have distinct interpretations.</S>
			<S sid ="136" ssid = "55">She calls the type with weg (24) the ‘weg-construction’, and the type without weg (25) the ‘Transition to Location Construction’ (TLC).</S>
			<S sid ="137" ssid = "56">The weg-construction describes an incremental traversal of a path by means of (or while) performing the activity denoted by the verb.</S>
			<S sid ="138" ssid = "57">The traversal and the activity denoted by the verb are coidentified: the construction describes a simple event.</S>
			<S sid ="139" ssid = "58">The TLC, on the other hand, describes a transition to a stative location by means of performing the activity denoted by the verb, without necessarily traversing a path.</S>
			<S sid ="140" ssid = "59">The traversal and the activity denoted by the verb are two subevents that are not necessarily coextensive.</S>
			<S sid ="141" ssid = "60">For example, in (25), the bluffing event can take place at a point in time preceding the event in which the subject gets out of the awkward situation.</S>
			<S sid ="142" ssid = "61">We are here interested in the TLC, as it provides an interesting contrast to the English and Swedish constructions introduced above.</S>
			<S sid ="143" ssid = "62">Unlike the English way-construction, the TLC does not contain a specific word (such as way) that ‘flags’ the construction, and unlike the Swedish DMC, the Dutch TLC does not display special syntax: the word order follows the rules of regular Dutch syntax.3 We propose that the TLC information is associated with the verb.</S>
			<S sid ="144" ssid = "63">No matter which verb is included in the construction, the TLC requires exactly three arguments: a subject, a reflexive direct object and a postpositional oblique.</S>
			<S sid ="145" ssid = "64">The TLC changes the basic argument requirements of the verb, and is in this way comparable to passives, causatives and applicatives, all of which also have relation-changing characteristics.</S>
			<S sid ="146" ssid = "65">Relation-changing processes are standardly treated in LFG as alternative ways of mapping thematic roles to syntactic roles.</S>
			<S sid ="147" ssid = "66">2.4 Summary.</S>
			<S sid ="148" ssid = "67">These expressions from Swedish, English and Dutch have in common a core part of their meanings and also the fact that their meanings are not straightforwardly predictable from the meanings that their parts have in other contexts.</S>
			<S sid ="149" ssid = "68">Each of them has been noted to be problematic for Lexical Integrity.</S>
			<S sid ="150" ssid = "69">Below, we present analyses of these constructions that capture the relevant data while preserving Lexical Integrity.</S>
			<S sid ="151" ssid = "70">The Swedish DMC, the English way-construction, and the Dutch weg-construction and TLC have distinct syntactic realizations.</S>
			<S sid ="152" ssid = "71">However, as has been argued in detail by van Egmond (2006, 2009), Toivonen 3 The PP in the Dutch examples is a prepositional phrase, not a postpositional phrase.</S>
			<S sid ="153" ssid = "72">Directional PPs normally contain post- positions in Dutch, while stative locations are prepositional PPs.</S>
			<S sid ="154" ssid = "73">The fact that the TLC contains postpositions and not prepositions follows from van Egmond’s (2006, 2009:99–101) analysis of the TLC as an expression of transition to a stative location.</S>
			<S sid ="155" ssid = "74">(2002) and Verhagen (2003), there are nevertheless strong reasons for treating them as distinct realizations of the same ‘construction’.</S>
			<S sid ="156" ssid = "75">The basic similarity lies in their meaning, as is evident from the fact that the expressions translate into each other across the languages.</S>
			<S sid ="157" ssid = "76">The expressions entail traversal, even though this sense is not necessarily contributed by the verb.</S>
			<S sid ="158" ssid = "77">The verb does not need to be a motion verb.</S>
			<S sid ="159" ssid = "78">Our task is to capture the similarities between the constructions, while at the same time modelling their differences.</S>
			<S sid ="160" ssid = "79">The constructions crucially differ in which formal element carries the traversal meaning.</S>
			<S sid ="161" ssid = "80">We assume that the traversal meaning is signalled by the word way in English, as this word is necessarily present.</S>
			<S sid ="162" ssid = "81">The Swedish DMC does not contain a specific word signalling the construction; all words in the Swedish DMC are exchangeable, since even the reflexive changes to agree with its antecedent.</S>
			<S sid ="163" ssid = "82">Instead, the construction is flagged by its word order.</S>
			<S sid ="164" ssid = "83">We therefore assume that the information that is specific for the traversal reading is tied to a phrase structure rule.</S>
			<S sid ="165" ssid = "84">Finally, the Dutch TLC is not associated with a specific word or peculiar word order.</S>
			<S sid ="166" ssid = "85">We therefore make the assumption that the clausal head, the verb, is the locus of the relevant information.</S>
	</SECTION>
	<SECTION title="Encapsulating generalisations through templates. " number = "3">
			<S sid ="167" ssid = "1">Our proposal allows for cross-linguistic generalisations to be captured by the use of templates to encode complex syntactic descriptions and the relations among them.</S>
			<S sid ="168" ssid = "2">Templates can be associated with objects of various sizes, from parts of words to phrases.</S>
			<S sid ="169" ssid = "3">This does not violate LFG’s Lexical Integrity Principle, as words are still intact and independent at c-structure.</S>
			<S sid ="170" ssid = "4">3.1 Background.</S>
			<S sid ="171" ssid = "5">An LFG template is nothing more than a named functional description, where the latter is a set of equations that describe linguistic structures.</S>
			<S sid ="172" ssid = "6">For any LFG grammar defined in terms of templates, we could construct a completely equivalent grammar which does not use templates, simply by replacing each template with the description that it abbreviates: by doing this, the same grammatical descriptions would be associated with words and phrases in each of the two grammars, and the grammars would produce the same c-structures and f-structures for the words and phrases of the language.</S>
			<S sid ="173" ssid = "7">Importantly, however, the grammar without templates would lack the means of expressing generalisations across lexical entries and grammar rules which templates make available.</S>
			<S sid ="174" ssid = "8">Functional descriptions most notably describe f-structures, but can in principle contain descriptions of any linguistic structure in LFG’s Correspondence Architecture (Kaplan 1987, Asudeh 2006).</S>
			<S sid ="175" ssid = "9">A template associates a name with a given functional description, such that the description can be invoked throughout the lexicon, as originally envisioned (Dalrymple et al. 2004), or, more generally, anywhere in the grammar, as we propose.</S>
			<S sid ="176" ssid = "10">Templates thus not only allow generalisations to be captured within the lexicon, but also across the lexicon and the rest of the grammar.</S>
			<S sid ="177" ssid = "11">It is in this sense that templates can be construed as an important component of the lexicon–grammar interface.</S>
			<S sid ="178" ssid = "12">Template definitions may contain reference to other templates.</S>
			<S sid ="179" ssid = "13">This effectively creates a hierarchy of templates, similar to the perhaps more familiar type hierarchies of Head-Driven Phrase Structure Grammar (HPSG; Pollard and Sag 1987, 1994, Ginzburg and Sag 2000) and Sign-Based Construction Grammar (SBCG; Michaelis 2010, Sag 2010, Boas and Sag 2012).</S>
			<S sid ="180" ssid = "14">However, there are some noteworthy differences between templates and types.</S>
			<S sid ="181" ssid = "15">First, type hierarchies represent relations between structures, whereas template hierarchies represent relations between descriptions of structures.</S>
			<S sid ="182" ssid = "16">This means that templates do not appear in the actual structures of the theory, but only in descriptions that the structures must satisfy.</S>
			<S sid ="183" ssid = "17">This contrasts with types in HPSG, where each feature value in a structure (a directed acyclic graph) is associated with a type.</S>
			<S sid ="184" ssid = "18">Second, type hierarchies in HPSG and SBCG represent inheritance in an and/or semilattice.</S>
			<S sid ="185" ssid = "19">The daughters of a type represent disjoint sub-types (or).</S>
			<S sid ="186" ssid = "20">Multiple mothers for a type represent conjoined super-types (and).</S>
			<S sid ="187" ssid = "21">For example, consider the following type hierarchy from Malouf (1998): (26) substantive noun relational c-noun gerund verb The type substantive is a sub-type of the root type head (not shown here).</S>
			<S sid ="188" ssid = "22">Its two daughters, noun and relational , disjointly partition the super-type.</S>
			<S sid ="189" ssid = "23">Each of the types noun and relational in turn has two daughters that disjointly partition the type.</S>
			<S sid ="190" ssid = "24">However, the type gerund is common to both and constitutes a conjunction of the super-types: a gerund object is both a noun object and a relational object.</S>
			<S sid ="191" ssid = "25">Template hierarchies do not represent inheritance, but rather inclusion.</S>
			<S sid ="192" ssid = "26">If a template A dominates a template B, then the description that A labels appears in the description that B labels.</S>
			<S sid ="193" ssid = "27">The semantics of template invocation, denoted by the prefix @ in a description, is just substitution.</S>
			<S sid ="194" ssid = "28">For example, given the template in (27) below, the lexical entries in (28a) and (28b) are strictly equivalent.</S>
			<S sid ="195" ssid = "29">(27) 3SG := (↑ SU B J PER S ) = 3 (↑ SU B J N U M) = SG (28) a. laughs (↑ PR ED ) = ‘laugh(SU B J)’ (↑ SU B J PER S) = 3 (↑ SU B J N U M) = SG b. laughs (↑ PR ED ) = ‘laugh(SU B J)’ @3SG It is clear from this example that a template is nothing more than an abbreviation for an LFG description.</S>
			<S sid ="196" ssid = "30">Descriptions in LFG support the boolean operations of conjunction, disjunction and negation.</S>
			<S sid ="197" ssid = "31">Templates therefore also support these operations.</S>
			<S sid ="198" ssid = "32">For example, the 3SG template can be negated in a lexical entry: (29) laugh (↑ PR ED ) = ‘laugh(SU B J)’ @3SG The lexical entries for laughs and laugh would thus both be “daughters” of the template 3SG in a template hierarchy, because both entries include the template, even if one negates it and the other does not: (30) 3SG laugh laughs This emphasises the difference between a hierarchy that represents inheritance, as in HPSG or SBCG type hierarchies, versus a network that represents inclusion, as in LFG template hierarchies.</S>
			<S sid ="199" ssid = "33">It would not make sense for both laugh and laughs to inherit from a 3SG type object, but both words can nevertheless include the description (with or without negation) that is labelled by the 3SG template.</S>
			<S sid ="200" ssid = "34">Templates can also be parametrised, where the parameters are stated as arguments to the template.</S>
			<S sid ="201" ssid = "35">For example, the template in (31) could be used in the lexical entry for any intransitive verb, such that the entry for laughs could be rewritten as in (32).</S>
			<S sid ="202" ssid = "36">(31) INTRANS(p) := (↑ PR ED ) = ‘P(SU B J)’ (32) laughs @INTRANS(laugh) @3SG The lexical entry for laughs in (32) is still strictly equivalent to the one in (28b), but the templates bring to the fore the generalisation that the only idiosyncratic information is what is contributed by the verb root.</S>
			<S sid ="203" ssid = "37">For example, the entry for yawns would differ only in the argument to the parametrised INTRANS template (‘yawn’ instead of ‘laugh’).</S>
			<S sid ="204" ssid = "38">Finally, as we will see presently, template hierarchies need not have a single root: there is no need for a most general template whose description is included in all of the other templates in the network.</S>
			<S sid ="205" ssid = "39">Templates can include references to other templates, or they can stand alone, as we will see in our definition of the Transition Template Hierarchy.</S>
			<S sid ="206" ssid = "40">3.2 The Transition Template Hierarchy.</S>
			<S sid ="207" ssid = "41">We propose a single theory of constructions that uses existing LFG mechanisms to capture commonali- ties involving the traversal/result construction in English, Swedish, and Dutch.</S>
			<S sid ="208" ssid = "42">Our theory preserves the intuition that similar constructional specifications can be associated with different components of the construction.</S>
			<S sid ="209" ssid = "43">The English way-construction is driven by lexical specifications for way, together with general phrase structural facts about English.</S>
			<S sid ="210" ssid = "44">Similarly, the Dutch weg-construction is driven by lexical specifications for weg.</S>
			<S sid ="211" ssid = "45">The Swedish DMC is driven by a specific phrase-structural configuration.</S>
			<S sid ="212" ssid = "46">The Dutch TLC is associated with specifications on the verbal predicate.</S>
			<S sid ="213" ssid = "47">The template hierarchy we assume is represented in (33): (33) MEANS DUTCHTLC TRANSITION TRAVERSAL MANNER TRAVERSAL-MEANS TRAVERSAL-MANNER SWEDISHDMC DUTCHWEG ENGLISH-WAY The template TRANSITION contains material that is common to the Swedish, Dutch, and English constructions; it encodes information about agency and causation.</S>
			<S sid ="214" ssid = "48">MEANS and MANNER are two other general templates that specify information about the means or manner of the event.</S>
			<S sid ="215" ssid = "49">The TRAVERSAL template is defined in terms of the more general TRANSITION template, as represented by the line connecting them, which means that TRAVERSAL incorporates all of the information associated with the TRANSITION template while also contributing some information specific to TRAVERSAL.</S>
			<S sid ="216" ssid = "50">TRAVERSAL in turn appears as a part of the definition of both the TRAVERSAL-MEANS template and the TRAVERSAL-MANNER template.</S>
			<S sid ="217" ssid = "51">The templates TRAVERSAL-MEANS and TRAVERSAL-MANNER provide different ways of adding information to the TRAVERSAL template, supplying the information that the main verb denotes either the means or the manner in which the path traversal is achieved.</S>
			<S sid ="218" ssid = "52">The Swedish DMC has the means interpretation (Toivonen 2002:318), and so we treat it as associated with the TRAVERSAL-MEANS template; the manner interpretation may be available dialectally, but we do not treat this variation here.</S>
			<S sid ="219" ssid = "53">The templates SWEDISHDMC, DUTCHWEG, and ENGLISH-WAY contribute additional language-specific information to these templates, as we will see.</S>
			<S sid ="220" ssid = "54">Finally, the DUTCHTLC is another language-specific template which draws together information from MEANS and TRANSITION.</S>
			<S sid ="221" ssid = "55">In keeping with LFG’s focus on typological generalizations, this templatic approach sheds light on differences and similarities in constructional effects across languages.</S>
			<S sid ="222" ssid = "56">Information that is shared across constructions in a language can be stated in non-terminal nodes of the template hierarchy and is inherited by specific constructional templates.</S>
			<S sid ="223" ssid = "57">Similarly, the fact that grammatical information may be shared by constructions in different languages is captured by calls in language-specific construc tional templates to the same templates in the hierarchy.4 For example, the English way-construction (on one interpretation), the Swedish Directed Motion Construction, and the Dutch weg-construction all share a meaning component that concerns means of traversal of a path and therefore all call the TRAVERSAL-MEANS template in our hierarchy.</S>
			<S sid ="224" ssid = "58">The template hierarchy thus defines a typological space of possibilities.</S>
			<S sid ="225" ssid = "59">For clarity of exposition, we have chosen to label the terminal templates in the hierarchy with language-specific names, such as ‘SWEDISHDMC’, but the constellation of template calls and additional information that is realized in this template may of course also be instantiated in this exact form in other languages.</S>
			<S sid ="226" ssid = "60">Therefore, more accurate but less user-friendly names for the terminal templates would be names like ‘TRAVERSAL-MEANS-PHRASAL’, ‘TRAVERSAL-MEANS-NON-HEAD-MARKED’, ‘TRAVERSAL-MEANS-HEAD-MARKED’, and so forth.</S>
	</SECTION>
	<SECTION title="Formal Analysis. " number = "4">
			<S sid ="227" ssid = "1">4.1 Phrase structurally flagged constructions.</S>
			<S sid ="228" ssid = "2">4.1.1 The phrase structure rule Turning first to the Swedish DMC, we propose that this construction is most elegantly analysed with the following construction-specific phrase structure rule, which makes crucial use of a call to the template SWEDISHDMC: (34) V′ → (V0) ↑ = ↓ N P ( ↑ O B J ) = ↓(↓ PRO N TY PE ) = SIMPLEX R E FL E X I V E @SWEDISHDMC((↑ PR ED FN)) P P (↑ O B L) = ↓ The template call appears on the NP node.</S>
			<S sid ="229" ssid = "3">This is a partially arbitrary decision; the call could instead appear on another node.</S>
			<S sid ="230" ssid = "4">We chose the NP, as we see the reflexive as a signal of the construction.</S>
			<S sid ="231" ssid = "5">Note, however, that the reflexive changes according to the person and number of the subject: it is not a fixed lexical marker of the construction, which makes it different from way/weg.</S>
			<S sid ="232" ssid = "6">By convention, template calls are marked by the at sign ‘@’.</S>
			<S sid ="233" ssid = "7">The SWEDISHDMC template takes a single argument, the value of the PR ED FN of the V′; we provide more information about this template in 4.1.2.</S>
			<S sid ="234" ssid = "8">Notice that FN is not itself a semantic form, but rather part of a semantic form; the attribute FN and argument designators such as A R G 1 allow reference to the components of a semantic form (Crouch et al. 2012) according to the following pattern: (35) [PR ED ‘FN(A R G 1,A R G 2,.</S>
			<S sid ="235" ssid = "9">)’] The specifications in (36) are equivalent: Use of the attribute FN thus allows reference to the predicate name in PR ED features, setting subcategorization aside.</S>
			<S sid ="236" ssid = "10">The implications of this are further discussed in section 4.2 below.</S>
			<S sid ="237" ssid = "11">We observe four important properties of our treatment of the SWEDISHDMC.</S>
			<S sid ="238" ssid = "12">First, associating the template for this construction with a special phrase structure rule reflects the fact that only this particular configuration has the special meaning associated with the DMC.</S>
			<S sid ="239" ssid = "13">4 This approach to grammatical variation is of long standing in the HPSG and now Sign-Based Construction Grammar traditions.</S>
			<S sid ="240" ssid = "14">For example, see (Pollard and Sag 1994:57–59) and discussion in (Sag et al. 2012).</S>
			<S sid ="241" ssid = "15">Second, the NP and PP daughters of V′ in (34) are obligatory.</S>
			<S sid ="242" ssid = "16">Our theory assumes that optionality must be explicitly marked in phrase structure rules, as in computational LFG treatments (e.g. Crouch et al. 2012) and in contrast to theoretical positions that allow generalised optionality (e.g. Bresnan 2001).</S>
			<S sid ="243" ssid = "17">The V0 node is optional, since the verb need not appear there: the Swedish finite verb appears in I rather than V. Third, we must explicitly state the fact that the NP is a simplex reflexive, such as sig, and not just any kind of NP or even a complex reflexive (e.g. sig sja¨ lv).</S>
			<S sid ="244" ssid = "18">Fourth, the construction requires an O B L(IQU E) phrase.</S>
			<S sid ="245" ssid = "19">Since the O B L must be realized as a post-object PP, it cannot also be realized as a pre-object particle.</S>
			<S sid ="246" ssid = "20">Post-object particles are projecting, intransitive prepositions (Jackendoff 1973, Toivonen 2003).</S>
			<S sid ="247" ssid = "21">The O B L must be directional, which we capture by referring to a PATH feature, as in (42).</S>
			<S sid ="248" ssid = "22">4.1.2 The SWEDISHDMC template Semantically, the Swedish DMC and the English way-construction involve an event characterised by the main verb in the construction and a second event involving traversal of a path.</S>
			<S sid ="249" ssid = "23">The basic template TRANSITION is defined as follows: (37) TRANSITION := λRλxλeλe′.R(e) ∧ agent(e) = x ∧ cause(e′ ) = x : (↑σ R EL) ⊸ (↑ SU B J)σ ⊸ (↑σ EV EN T1) ⊸ (↑σ EV EN T2) ⊸ ↑σ Templates encoding syntactic information and expressing syntactic generalisations are defined as sets of functional equations, as described by Dalrymple et al.</S>
			<S sid ="250" ssid = "24">(2004).</S>
			<S sid ="251" ssid = "25">However, since our concern is the syntax- semantics interface and meaning differences among constructions, we define this template with a meaning constructor (Dalrymple 1999, 2001, Asudeh 2004), which provides part of the common meaning for the traversal/result construction in English, Swedish, and Dutch.</S>
			<S sid ="252" ssid = "26">This meaning constructor requires: • a R EL meaning R specifying the nature of the event e, which is provided by the verb in the construction; for Bill elbowed his way through the crowd, e is required to be an event of elbowing, and so R is the predicate elbow • a meaning x for the subject of the main verb, which is interpreted as the agent of e and the causer of the transition event e′ • two event variables e and e′ , associated with the semantic attributes, EV EN T1 and EV EN T2, representing the event denoted by the verb and the transition event.</S>
			<S sid ="253" ssid = "27">This basic meaning is augmented by other meaning constructors in the template hierarchy.</S>
			<S sid ="254" ssid = "28">Our characterisation of the subject of the main event as an agent of the event e and a causer of the transition event e′ follows Goldberg (1995:212–213), who claims that the motion in the way-construction must be self- propelled.</S>
			<S sid ="255" ssid = "29">However, Jackendoff (1990:216) suggests that although the means interpretation is necessarily tied to deliberate action, the manner interpretation is also compatible with action that is not deliberately performed.</S>
			<S sid ="256" ssid = "30">Examples such as (38), which has a manner and not a means interpretation, are better characterised by Jackendoff; in this example, e is an event of bleeding, which is not associated with an agent: (38) Baxter’s wife said her son bled his way into the ambulance painlessly.</S>
			<S sid ="257" ssid = "31">http://newvoices.org/humor/the-slice-man-cometh.html To account for these examples, it may be better to refer to the highest thematic argument of the main event e rather than explicitly referring to the agent.</S>
			<S sid ="258" ssid = "32">We leave further exploration of this issue for future research, and provisionally encode the relevant argument of the main event as an agent.</S>
			<S sid ="259" ssid = "33">The template hierarchy in (33) encodes the fact that the template TRAVERSAL calls the template TRANSITION, with the effect that TRAVERSAL incorporates all of the information in TRANSITION as well as specifying some additional information.</S>
			<S sid ="260" ssid = "34">The TRAVERSAL template is defined in (39): (39) TRAVERSAL := @TRANSITION λP λe′.P (e′ ) ∧ traversal(e′) : [(↑σ EV EN T2) ⊸ ↑σ ] ⊸ [(↑σ EV EN T2) ⊸ ↑σ ] The first line in the definition of TRAVERSAL contains the call to the template TRANSITION, marked as in (34) with the at sign ‘@’.</S>
			<S sid ="261" ssid = "35">The second line adds the information that e′ is a traversal event.</S>
			<S sid ="262" ssid = "36">In technical terms, this meaning constructor behaves as a modifier on the predication associated with the transition event.</S>
			<S sid ="263" ssid = "37">In turn, the TRAVERSAL-MEANS template is defined simply by calls to the TRAVERSAL template and the MEANS template: (40) TRAVERSAL-MEANS := @TRAVERSAL @MEANS The MEANS template is given in (41): (41) MEANS := λP λeλe′ .P (e)(e′ ) ∧ means(e′) = e : [(↑σ EV EN T1) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] ⊸ [(↑σ EV EN T1) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] The MEANS meaning constructor specifies that the event e represents the means of achieving the event e′ . With respect to TRAVERSAL-MEANS, this means that the main verb’s event e is the means of achieving the event e′ of traversing the path, as in an English example like Sarah elbowed her way through the crowd or the Swedish equivalent, where the traversal through the crowd is achieved by elbowing.</S>
			<S sid ="264" ssid = "38">The SWEDISHDMC template, specific to the Swedish Directed Motion Construction, is defined by reference to the template TRAVERSAL-MEANS.</S>
			<S sid ="265" ssid = "39">It also calls the syntactic subcategorization template TRANSITIVE-OBLIQUE, to be described in Section 4.2, and provides some additional material specific to the Swedish construction: (42) SWEDISHDMC(PFN) := @TRANSITIVE-OBLIQUE(PFN) @TRAVERSAL-MEANS λQλP λy.∃e.∃e′ .∃z.P (e)(e′ ) ∧ theme(e′ ) = y ∧ path(e′ ) = z ∧ Q(z) : [((↑ O B L)σ PATH ) ⊸ (↑ O B L)σ ] ⊸ [(↑σ EV EN T1) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] ⊸ (↑ O B J)σ ⊸ ↑σ The argument of the SWEDISHDMC template is called “PFN” in this definition;5 it is passed as an argument to the TRANSITIVE-OBLIQUE template, which is defined in (45).</S>
			<S sid ="266" ssid = "40">Besides the two template calls, SWEDISHDMC also contributes a meaning constructor to complete the meaning of the Swedish construction, which requires the following: • a meaning Q depending on the O B L phrase, specifying the nature of the path traversed; for (22) (∼‘Sarah elbowed her way through the crowd’), the path is required to go through the crowd.</S>
			<S sid ="267" ssid = "41">• a meaning P , contributed by the main verb, specifying the nature of the event e denoted by the main verb and its relation to the transition event e′ ; for (22) (∼‘Sarah elbowed her way through the crowd’), e is an elbowing event and is the means enabling the traversal event e′.</S>
			<S sid ="268" ssid = "42">• a meaning y for the object of the main verb, which is (syntactically) required to be a reflexive and hence to corefer with the subject of the main verb; y is the theme of e′ , the traversal event.</S>
			<S sid ="269" ssid = "43">5 The template argument PFN is meant to be mnemonic for P R E D F N, since this will ultimately play the role of F N in the value of a P R E D feature.</S>
			<S sid ="270" ssid = "44">Our analysis produces the meaning in (43) for Sarah armba˚ gade sig genom ma¨ ngden ‘Sarah elbowed SELF through the crowd’.</S>
			<S sid ="271" ssid = "45">(43) ∃e.∃e′.∃z.elbow(e) ∧ agent(e) = sarah ∧ cause(e′ ) = sarah ∧ means(e′) = e ∧ traversal(e′) ∧ theme(e′ ) = sarah ∧ path(e′ ) = z ∧ through(z, ιx.[crowd(x)]) A full proof of the derivation of this meaning is given in the Appendix.</S>
			<S sid ="272" ssid = "46">4.2 Verb lexicon and basic subcategorization templates.</S>
			<S sid ="273" ssid = "47">Our approach entails a potentially deep consequence for the theory of argument linking and subcategorization, because verbs in our approach specify default subcategorization through template calls in such a way that the subcategorization can be constructionally overridden.</S>
			<S sid ="274" ssid = "48">Thus, subcategorization is moved to the template component.</S>
			<S sid ="275" ssid = "49">We have seen that the SWEDISHDMC template provides a PR ED specification with subcategorization frame and semantic specifications for the construction.</S>
			<S sid ="276" ssid = "50">This in turn means that the lexical entry for a verb must supply a default PR ED and semantics which can be overridden when the verb is used in a construction like the way-construction.6 We assume that the verb elbowed/armba˚ gade, which appears in (16) and (22), is specified as follows: (44) elbowed/armba˚gade V λe.elbow(e) : (↑σ R EL)  @TRANSITIVE(elbow)   λRλxλy∃e.R(e) ∧ agent(e) = x ∧ theme(e) = y:  (↑σ R EL) ⊸ (↑ SU B J)σ ⊸ (↑ O B J)σ ⊸ ↑σ The first line of the entry specifies the verb’s s-structure semantic R EL(ATIO N ) , which it contributes on each occasion of its use.</S>
			<S sid ="277" ssid = "51">The second part of the entry specifies a default semantic contribution and subcategorization information, encoded by the template TRANSITIVE and the meaning constructor in the third line.</S>
			<S sid ="278" ssid = "52">This material effectively serves as a default, because unless some other part of the system specifies an alternative, constructional G F template, there is no way to check Completeness and Coherence and the structure fails.</S>
			<S sid ="279" ssid = "53">The TRANSITIVE template takes a single argument, here ‘elbow’.</S>
			<S sid ="280" ssid = "54">The definition of TRANSITIVE is stated with respect to an arbitrary argument PFN:7 (45) TRANSITIVE(PFN) = (↑ PR ED ) = ‘PFN((↑ SU B J),(↑ O B J))’ The argument PFN of the TRANSITIVE template appears in parentheses after the template name, and also appears in the definition of the template as the FN of the semantic form that is the value of the PR ED feature.</S>
			<S sid ="281" ssid = "55">For the verb elbow, the call to the TRANSITIVE template passes in the argument ‘elbow’.</S>
			<S sid ="282" ssid = "56">The template call @TRANSITIVE(elbow) is exactly equivalent to the following equation: (46) (↑ PR ED ) = ‘elbow((↑ SU B J),(↑ O B J))’ We now turn to the default meaning constructor for elbow given in (44), repeated here: (47) λRλxλy∃e.R(e) ∧ agent(e) = x ∧ theme(e) = y: (↑σ R EL) ⊸ (↑ SU B J)σ ⊸ (↑ O B J)σ ⊸ ↑σ 6 Our analysis of the Swedish DMC and the English way-construction involves replacing rather than modifying the default semantic form of the main verb with the specifications provided by the construction.</S>
			<S sid ="283" ssid = "57">In the analysis of other constructions, it may be preferable to modify the semantic form via restriction or other operators, as proposed for the analysis of complex predicates by Butt et al.</S>
			<S sid ="284" ssid = "58">(2003) (see also Butt and King 2005 on causatives).</S>
			<S sid ="285" ssid = "59">7 For ease of explication, (45) specifies an active subcategorization frame for the verb, simplifying away from mapping theory.</S>
			<S sid ="286" ssid = "60">issues and the possibility for passivisation of this verb.</S>
			<S sid ="287" ssid = "61">We return to a discussion of the interaction of mapping theory and our theory of constructions in Section 5 below, where we propose a revised TRANSITIVE template which refers to argument structure roles rather than grammatical functions and which interacts appropriately with mapping theory.</S>
			<S sid ="288" ssid = "62">This meaning constructor requires a R EL R which is supplied by the verb (the R EL for the verb elbow is specified above as λe.elbow(e)), a meaning x for the SU B J, and a meaning y for the O B J. For a sentence like Bill elbowed Fred, the meaning that is produced is, as desired: (48) ∃e.elbow(e) ∧ agent(e) = Bill ∧ theme(e) = F red When the verb elbowed is used in the traversal construction, these default specifications are overridden by the specifications imposed by the construction, and the special constructional specifications are used instead.</S>
			<S sid ="289" ssid = "63">Three further subcategorization templates and one control template are used in the analysis below: (49) TRANSITIVE-OBLIQUE(PFN) := (↑ PR ED ) = ‘PFN((↑ SU B J),(↑ O B J),(↑ O B L))’ (50) TRANSITIVE-PREDICATIVE(PFN) := (↑ PR ED ) = ‘PFN((↑ SU B J),(↑ O B J),(↑ X C O MP))’ (51) DITRANSITIVE-OBLIQUE(PFN) := (↑ PR ED ) = ‘PFN((↑ SU B J),(↑ O B J),(↑ O B Jθ ),(↑ O B L))’ (52) OBJ-CONTROL := (↑ O B J) = (↑ X C O MP SU B J) The TRANSITIVE-OBLIQUE template is called by the SWEDISHDMC and ENGLISH-WAY templates, the TRANSITIVE-PREDICATIVE and OBJ-CONTROL templates are called by the DUTCHTLC template, and the DITRANSITIVE-OBLIQUE template is called by the DUTCHWEG template.</S>
			<S sid ="290" ssid = "64">4.3 Lexically flagged constructions.</S>
			<S sid ="291" ssid = "65">The English way-construction relies on many of the same templates as the Swedish DMC.</S>
			<S sid ="292" ssid = "66">It is different in that it is completely regular in terms of phrasal structure, so no exceptional phrase structure rule is required.</S>
			<S sid ="293" ssid = "67">Rather, we assume the standard V′ rule for English, which already permits an NP O B JEC T and a PP O B LIQU E . Evidence that the PP is an argument of the main verb and not a modifier of way comes from adverb placement: it is possible for an adverb to intervene between way and the PP, while this is not possible if the PP is associated with the object: (53) Sarah elbowed her way quickly through the crowd.</S>
			<S sid ="294" ssid = "68">(54) a. Sarah elbowed a friend from London quickly.</S>
			<S sid ="295" ssid = "69">b. * Sarah elbowed a friend quickly from London.</S>
			<S sid ="296" ssid = "70">The locus of the English way-construction is the word way, which receives the following specification: (55) way N (↑ PR ED ) = ‘way’ λx.way(x) : (↑σ VA R) ⊸ (↑σ R ESTR ) ( @ENGLISH-WAY((O B J ↑) PR ED FN) ) According to this lexical entry, way contributes a semantic form ‘way’ and a standard noun meaning λx.way(x) on every occasion of its use, even in the way-construction.</S>
			<S sid ="297" ssid = "71">As we will see, our analysis equates the path specified in the ENGLISH-WAY template with the path denoted by way.</S>
			<S sid ="298" ssid = "72">Retaining the standard semantics for way allows us to provide a satisfactory analysis of modification of way and specification of possessors of way other than the subject, as discussed in Section 2.1.</S>
			<S sid ="299" ssid = "73">The relevant examples are: (56) a. As ambassador, Chesterfield negotiated Britain’s way into the Treaty of Vienna in 1731.</S>
			<S sid ="300" ssid = "74">b. In these last twenty years Richard Strauss has flamed his meteoric way into our ken — and out of it.</S>
			<S sid ="301" ssid = "75">The ENGLISH-WAY constructional template appears in parentheses, since it is an optional contribution of the word way.</S>
			<S sid ="302" ssid = "76">Its argument is ((O B J ↑) PR ED FN): this expression uses inside-out functional uncertainty to refer to the f-structure in which way is an O B J, (O B J ↑), and passes the PR ED FN of that f-structure as an argument to the template.</S>
			<S sid ="303" ssid = "77">The definition of the ENGLISH-WAY template is: (57) ENGLISH-WAY(PFN) := @TRANSITIVE-OBLIQUE(PFN) {@TRAVERSAL-MEANS | @TRAVERSAL-MANNER} λY λQλP λx.∃e.∃e′.∃z.P (e)(e′ ) ∧ theme(e′ ) = x ∧ path(e′ ) = z ∧ Q(z) ∧ z = Y (x) : [(↑ SPEC )σ ⊸ ↑σ ] ⊸ [(((O B J ↑) O B L)σ PATH ) ⊸ ((O B J ↑) O B L)σ ] ⊸ [((O B J ↑)σ EV EN T1) ⊸ ((O B J ↑)σ EV EN T2) ⊸ (O B J ↑)σ ] ⊸ (↑ SPEC )σ ⊸ (O B J ↑)σ As shown in (33), this definition calls the TRANSITIVE-OBLIQUE template and passes in the FN of the main verb, providing the semantic form and syntactic subcategorization specification for the construction.</S>
			<S sid ="304" ssid = "78">The second line contains a disjunction: either the TRAVERSAL-MEANS or the TRAVERSAL-MANNER template is called.8 This is because the English way-construction allows either a means interpretation for the construction or a manner interpretation.</S>
			<S sid ="305" ssid = "79">The TRAVERSAL-MANNER template is defined in (58) in terms of template calls to the TRAVERSAL and MANNER templates: (58) TRAVERSAL-MANNER := @TRAVERSAL @MANNER The MANNER template is similar to the MEANS template defined in (41), except that it specifies that a relation R is the manner by which the event e′ is achieved, rather than the means: (59) MANNER := λP λRλe′.P (R)(e′ ) ∧ manner(e′) = R : [(↑σ R EL) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] ⊸ [(↑σ R EL) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] Besides the template calls in the first two lines, the ENGLISH-WAY template contributes the following meaning constructor: (60) λY λQλP λx.∃e.∃e′.∃z.P (e)(e′ ) ∧ theme(e′ ) = x ∧ path(e′ ) = z ∧ Q(z) ∧ z = Y (x) : [(↑ SPEC )σ ⊸ ↑σ ] ⊸ [(((O B J ↑) O B L)σ PATH ) ⊸ ((O B J ↑) O B L)σ ] ⊸ [((O B J ↑)σ EV EN T1) ⊸ ((O B J ↑)σ EV EN T2) ⊸ (O B J ↑)σ ] ⊸ (↑ SPEC )σ ⊸ (O B J ↑)σ This meaning constructor requires: • a meaning Y for the way NP, which provides additional information about the path z that is traversed • a meaning Q for the oblique phrase; for the example Sarah elbowed her way through the crowd, this is the meaning of through the crowd, which characterises the path z • a meaning P , contributed by the main verb, specifying the nature of the event e and its relation to the traversal event; for (22) (Sarah elbowed her way through the crowd), e is required to be an elbowing event and is the means enabling the traversal event 8 Some speakers do not find the manner interpretation well-formed.</S>
			<S sid ="306" ssid = "80">Our analysis accounts for their grammars through lexical variation: the ENGLISH-WAY template in the grammars of these speakers calls only the TRAVERSAL-MEANS template.</S>
			<S sid ="307" ssid = "81">• a meaning x for the possessor of way, which plays the role of the theme of the traversal event e′.</S>
			<S sid ="308" ssid = "82">This analysis produces the meaning in (61) for the means interpretation of Sarah elbowed her way through the crowd: (61) ∃e.∃e′.∃z.elbow(e) ∧ agent(e) = sarah ∧ cause(e′ ) = sarah ∧ means(e′) = e ∧ traversal(e′) ∧ theme(e′ ) = sarah ∧ path(e′ ) = z ∧ through(z, ιx.[crowd(x)]) ∧ z = ιy.[way(y) ∧ Rc(sarah, y)] The main difference between this meaning and the meaning of its Swedish counterpart Sarah armba˚ gade sig genom ma¨ ngden is that the English way-construction provides a more detailed specification of the path z. We follow Partee (1983/1997) and Partee and Borschev (1998) in treating the genitive construction as involving reference to a unique individual who bears some contextually specified relation Rc to a possessor.</S>
			<S sid ="309" ssid = "83">The possessive pronoun in the phrase her way is resolved to the subject Sarah, and the meaning of her way is analysed as ιy.[way(y) ∧ Rc(sarah, y)], the unique y that is a way and that bears the relation Rc to Sarah.</S>
			<S sid ="310" ssid = "84">This analysis enables us to treat cases in which way is modified or possessed by an individual other than the subject of the construction.</S>
			<S sid ="311" ssid = "85">A full proof of the meaning of Sarah elbowed her way through the crowd is given in the Appendix.</S>
			<S sid ="312" ssid = "86">4.4 Traversal constructions in Dutch.</S>
			<S sid ="313" ssid = "87">The templates for the Dutch weg-construction and the Transition to Location Construction are as follows: (62) DUTCHWEG(PFN) := @DITRANSITIVE-OBLIQUE(PFN) {@TRAVERSAL-MEANS | @TRAVERSAL-MANNER} λY λQλP λyλx.∃e.∃e′.∃z.P (e)(e′ ) ∧ theme(e′ ) = y ∧ path(e′ ) = z ∧ Q(z) ∧ z = Y (x) ∧ coextensive(e, e′ ) : [(↑ SPEC )σ ⊸ ↑σ ] ⊸ [(((O B Jθ ↑) O B L)σ PATH ) ⊸ ((O B Jθ ↑) O B L)σ ] ⊸ [((O B Jθ ↑)σ EV EN T1) ⊸ ((O B Jθ ↑)σ EV EN T2) ⊸ (O B Jθ ↑)σ ] ⊸ (↑ O B J)σ ⊸ (↑ SPEC )σ ⊸ (O B Jθ ↑)σ DUTCHWEG, like the English way-construction, allows either a means or manner interpretation and further specifies that the event denoted by the main verb and the traversal event are coextensive.</S>
			<S sid ="314" ssid = "88">(63) DUTCHTLC(PFN) := @TRANSITIVE-PREDICATIVE(PFN) @OBJ-CONTROL @TRANSITION @MEANS λQλP λx.∃e.∃e′.P (e)(e′ ) ∧ theme(e′ ) = x ∧ Q(x) : [(↑ O B J)σ ⊸ (↑ X C O MP)σ ] ⊸ [(↑σ EV EN T1) ⊸ (↑σ EV EN T2) ⊸ ↑σ ] ⊸ (↑ O B J)σ ⊸ ↑σ DUTCHTLC involves a transition but not necessarily a traversal, and so is defined in terms of the TRANSITION template.</S>
			<S sid ="315" ssid = "89">It specifies a means interpretation (and disallows a manner interpretation), and so incorporates the MEANS template in its definition.</S>
			<S sid ="316" ssid = "90">We assume that the prepositional phrase serves as a secondary predication on the object, since van Egmond (2006, 2009) argues that there is no path traversal in this case and also notes that the TLC bears some similarities to the resultative.</S>
			<S sid ="317" ssid = "91">In LFG-theoretic terms, this indicates that the PP is an X C O MP.</S>
	</SECTION>
	<SECTION title="Linking. " number = "5">
			<S sid ="318" ssid = "1">We now return to the definition of syntactic subcategorization requirements in the templates that appear as defaults in verbal lexical entries and as specifications of subcategorisation requirements in the way- and DMC constructions.</S>
			<S sid ="319" ssid = "2">Recall that for simplicity, we assumed that the relation between semantic roles and grammatical functions is fixed by the construction or by information in the lexical entry of a predicate.</S>
			<S sid ="320" ssid = "3">For example, the default subcategorization for a verb like elbowed/armba˚ gade was given by the TRANSITIVE template, defined in (45) as: (64) TRANSITIVE(PFN) := (↑ PR ED ) = ‘PFN((↑ SU B J),(↑ O B J))’ This is overly inflexible; the correct analysis would specify argument structure information for the predicate or construction rather than a specific set of grammatical functions, and would appeal to some version of Mapping Theory (Bresnan and Zaenen 1990, Alsina 1993, Butt 1995, Butt et al. 1997) to derive the syntactic subcategorization frame for the predicate from argument structure.</S>
			<S sid ="321" ssid = "4">We sketch here how this would work for the lexical specifications for the verb elbow, following the approach of Butt et al.</S>
			<S sid ="322" ssid = "5">(1997).</S>
			<S sid ="323" ssid = "6">Butt et al.</S>
			<S sid ="324" ssid = "7">(1997) assume the following projection architecture: (65) V elbow  R EL ELB OW  λ  AG EN T [ ]  TH EME [ ] f 1 :[ ] f 2 :[ ] σ s 1 : [ ] 2 : [ ] Argument structure is represented as an attribute-value matrix reachable from the c-structure via the α projection.</S>
			<S sid ="325" ssid = "8">The familiar φ projection is defined as the composition of the α projection to argument structure and the λ projection from argument structure to f-structure.</S>
			<S sid ="326" ssid = "9">The lexical entry for elbowed/armba˚ gade can now be stated as:9 (66) elbowed/armba˚gade V λe.elbow(e) : (↑σ R EL)  (↑ PR ED FN) = elbow   λRλxλyλe.R(e) ∧ agent(e) = x ∧ theme(e) = y:  (↑σ R EL) ⊸ (∗α AG EN T)λσ ⊸ (∗α TH EME )λσ ⊸ (↑σ EV EN T ) ⊸ ↑σ Instead of specifying the default grammatical functions SU B J and O B J, this lexical entry specifies a default argument structure containing an AG EN T and a TH EME . These will be linked to the appropriate grammatical functions according to mapping theory.</S>
			<S sid ="327" ssid = "10">The English way-construction and the Swedish DMC construction could be treated similarly, with argument structure roles specified in the templates for the construction, and the mapping from argument structure roles to grammatical functions provided by mapping theory.</S>
			<S sid ="328" ssid = "11">However, these constructions do in fact seem to be syntactically inflexible, and cannot undergo passivisation or other argument alternations:10 (67) * Bill’s way through the park was elbowed (by him).</S>
			<S sid ="329" ssid = "12">(68) * Bill armba˚gades genom parken (av sig/sig sja¨lv).</S>
			<S sid ="330" ssid = "13">Bill elbow.PA SS through park.D EF by self/himself Given this, we propose to leave the templates appearing in those constructions in their current form, since we believe that specifying particular grammatical functions and disallowing argument alternations such as passive is the right treatment for these.</S>
			<S sid ="331" ssid = "14">9 The variable �∗ refers to the mother of the c-structure node that bears the annotation.</S>
			<S sid ="332" ssid = "15">Thus, �∗α in the lexical refers to the argument structure of the mother of the terminal node elbowed/armba˚ gade, i.e. the argument structure of V. 10 The judgement for the Swedish example is for the DMC interpretation; see Toivonen (2002) for further discussion..</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "6">
			<S sid ="333" ssid = "1">We have shown that it is not necessary to eliminate the word/phrase or lexicon/grammar distinctions in order to capture constructional effects in a principled manner.</S>
			<S sid ="334" ssid = "2">We did so by showing how this could be done in the context of Lexical-Functional Grammar, which upholds the Strong Lexicalist Hypothesis through the Lexical Integrity Principle.</S>
			<S sid ="335" ssid = "3">Like other LFG work, our approach retains Lexical Integrity as a foundational principle, due to the multifaceted nature of grammatical representation in LFG: the same functional structure and semantics can be associated with a part of a word, a word, or a phrase, but this does not imply that words and phrases are indistinguishable at other levels.</S>
			<S sid ="336" ssid = "4">We can capture the fundamental differences between words and phrases that motivate Lexical Integrity at the level of constituent structure, while also capturing commonalities in the abstract syntactic and semantic contributions of words and phrases.</S>
			<S sid ="337" ssid = "5">Our approach captures the intuitions of Construction Grammar in an LFG setting by the use of templates, which allow for generalisations to be expressed by naming and reusing grammatical descriptions.</S>
			<S sid ="338" ssid = "6">We accomplish this without in any sense admitting constructions as first-class entities in the theory: the ability to name and reuse descriptions adds no new formal power or new formal objects to the theory.</S>
			<S sid ="339" ssid = "7">Though templates were independently motivated in much previous work for reasons of expediency in grammar writing, they now play a crucial theoretical role: templates serve as the locus of grammatical information that can be either lexically or structurally invoked, and they thus formalise one aspect of the lexicon–syntax interface.</S>
			<S sid ="340" ssid = "8">The templates are nevertheless just abbreviations for grammatical descriptions: a grammar with templates is extensionally equivalent to the same grammar with all template calls replaced by the corresponding template content.</S>
			<S sid ="341" ssid = "9">In an important sense, then, constructions are epiphenomenal, according to this view.</S>
	</SECTION>
</PAPER>
