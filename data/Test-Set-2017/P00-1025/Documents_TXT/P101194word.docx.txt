A New  Czech Morphological Analyser  ajka


Radek Sedl´aˇcek and Pavel Smrˇz

Faculty of Informatics, Masaryk University Brno
Botanick´a 68a, 602 00 Brno, Czech Republic
{rsedlac,  smrz}@fi.muni.cz




Abstract. This  paper deals with  the effective implementation  of the 
new Czech morphological analyser ajka which is based on the algorithmic 
description of the Czech formal morphology. First, we present two most 
important word-forming processes in Czech — inflection and derivation. 
A brief description of the data structures used for storing morphological 
information as well as a discussion of the efficient storage of lexical items 
(stem bases of Czech words) is included too. Finally,  we bring some in- 
teresting features of the designed and implemented system ajka together 
with current statistic data.


1    Introduction


Typically, morphological analysis returns the base form (lemma) and associates 
it with all the possible POS (part-of-speech) labels together with all grammatical 
information for each known word form. In analytical languages a simple approach 
can be taken: it is enough to list all word forms to catch the most of morpholog- 
ical processes. In English, for example, a regular verb has usually only 4 distinct 
forms, and irregular ones have at most 8 forms. On the other hand, the highly 
inflectional languages like Czech or Finnish present a difficulty  for such simple 
approaches  as the expansion of the dictionary is at least an order of magnitude 
greater1 [4]. Specialised finite-state compilers have been implemented  [1], which 
allow the use of specific operations for combining base forms and affixes, and ap- 
plying rules for morphophonological variations [3]. Descriptions of morphological 
analysers for other languages can be found in [8, 11].
   Basically, there are three major types of word-forming processes — inflection, 
derivation, and compounding. Inflection refers to the systematic modification of 
a stem by means of prefixes and suffixes. Inflected forms express morphological 
distinctions like case or number, but do not change meaning or POS. In contrast, 
the process of derivation usually causes change in meaning and often change of 
POS. Compounding deals with the process of merging several word bases to form 
a new word.

1  As our effective implementation of spell-checker for Czech based on finite state au- 
tomata suggests, it does not necessarily mean that no application can take advantage 
of a simple listing of word forms in highly inflecting languages.






   Czech belongs to the family of inflectional languages which are characterised 
by the fact that one morpheme (typically an ending) carries the values of sev- 
eral grammatical categories together (for example an ending of nouns typically 
expresses a value of grammatical category of case, number and gender). This 
feature requires a special treatment of Czech words in text processing systems. 
To this end, we developed a universal morphological analyser which performs the 
morphological  analysis based on dividing all words in Czech texts to their small- 
est relevant components that we call segments . The notion of segment roughly 
corresponds  to the linguistic  concept morpheme , which denotes the smallest 
meaningful unit of a language.
   Presented morphological analyser consists of three major parts: a formal 
description of morphological processes via morphological patterns, an assignment 
of Czech stems to their relevant patterns and a morphological analysis algorithm.
   The description of Czech formal morphology is represented by a system of in- 
flectional patterns and sets of endings and it includes lists of segments and their 
correct combinations. The assignment of Czech stems to their patterns is con- 
tained in the Czech Machine Dictionary [10]. Finally, algorithm of morphological 
analysis using this information splits each word into appropriate segments.
   The morphological analyser is being used for lemmatisation and morpholog- 
ical tagging of Czech texts in large corpora, as well as for generating correct 
word forms, and also as a spelling checker. It can also be applied to other prob- 
lems that arise in the area of processing Czech texts, e.g. creating stop lists for 
building indexes used in information retrieval systems.


2    Czech Inflectional Morphology

The main part of the algorithmic description of formal morphology, as it was 
suggested in [10], is a pattern definition. The basic notion is a morphological 
paradigm — a set of all forms of inflectional word expressing a system of its 
respective grammatical categories.
   As stated in [5], the traditional  grammar of Czech suggests much smaller 
paradigm system than there is existing in reality. For this reason we decided to 
build quite large set of paradigm patterns to cover all variations of Czech from 
the scratch. Fortunately,  we had not been limited  by technical restrictions,2 
thus we could follow the straightforward approach to the linguistic adequacy 
and robust solution.
   The detailed description of all variations in Czech paradigms enables us to 
define application dependent generalisations of the pattern system. For example, 
if we do not need to take into consideration archaic word forms for a specific 
application, the number of paradigm pattern (that  reaches 1500 in its fully ex- 
panded form) can be automatically reduced considerably.
   Noun paradigms consist of word forms in particular  cases of singular and 
plural. Verbs have more paradigms — for present tense, for imperative forms, 
etc.
2  Hajiˇc [5], e.g., indicates that his system is limited  to 214 paradigm patterns.






   For example, the nouns hora (mountain), slza (tear) and ˇreka (river) display 
the following forms in the paradigms:

Nom. Gen. Dat. 	Acu. Voc. Loc.	Ins. 
hora hory hoˇre   horu horo hoˇre	horou 
hory hor   hor´am hory hory hor´ach horami 
slza  slzy slze    slzu  slzo  slze 	slzou 
slzy slz  slz´am slzy slzy slz´ach slzami
ˇreka ˇreky ˇrece   ˇreku ˇreko ˇrece	ˇrekou
ˇreky ˇrek   ˇrek´am ˇreky ˇreky ˇrek´ach ˇrekami

   As we can see, the corresponding word forms in the paradigms have the same 
ending. That is why we can divide the given word form into two parts — a stem 
and an ending . We then obtain the following segmentation:

hor-{a,y,u,o,ou} hoˇr-{e,e} 
hor-{y, ,´am,y,y,´ach,ami} 
slz-{a,y,e,u,o,e,ou}
slz-{y, ,´am,y,y,´ach,ami}
ˇrek-{a,y,u,o,ou} ˇrec-{e,e}
ˇrek-{y, ,´am,y,y,´ach,ami}

   In the paradigm for the word hora , there are two  alternative  stems (hor 
and hoˇr ); in the paradigm for the word slza , there is only one stem slz ; and in 
the paradigm for the word ˇreka , there are again two alternative stems ˇrek  and
ˇrec. We can also identify four different ending sets S1={a,y,u,o,ou}, S2={e,e}, 
next S3={y, ,´am,y,y,´ach,ami} and S4={a,y,e,u,o,e,ou}, but it is clear that 
S4=S1+S2.
   This observation leads us to a system of ending sets. We make distinction 
between two types of sets — basic and peripheral ending sets. The basic ones 
contain endings that have no influence to the form of the stem, while endings 
from the peripheral ending sets cause changes in the stem. In our case, sets S1 
and S3 are basic and S2 is peripheral, because the ending e causes alternation 
change of the last letter r to ˇr in the stem hor and, similarly, k to c in the stem
ˇrek .
   Moreover, we can put all the endings from set S1 and S3 into one (newly 
created) set, say S5, because they are basic and are common for stems hor , slz 
and ˇrek . Now we can shortly write previous paradigms in the following way:

hor-S5 hoˇr-S2 
slz-S5+S2
ˇrek-S5 ˇrec-S2

   Every ending carries values of grammatical categories of the relevant word 
form. For example, all endings in previously defined sets are characterised as 
endings of nouns in feminine gender. Endings from sets S1 and S2 originate from 
the singular paradigm, the others (from S3) express plural. Thus, the set S5 now 
includes endings from both singular and plural paradigm and this information






must be preserved and stored in the system, so we decided to use the following 
data structure for storing ending sets:

S5=[1FS.](a,1)(y,2)(u,4)(o,5)(ou,7) 
[1FP.](y,1)( ,2)(´am,3)(y,4)(y,5)
      (´ach,6)(ami,7) 
S2=[1FS.](e,3)(e,6)

   Since endings, grammatical tags and values of grammatical categories repeat 
in the definitions of sets, we store them in unique tables and use references to 
these tables in the definitions of sets.
   In the next step, we perform further segmentation of stems into a stem base 
and an intersegment . The stem base is the part that is common to all word forms 
in the paradigm (it doesn’t change) and the intersegment is a final group of the 
stem which forms changes. We obtain the following segmentation of stems:

ho-{r,ˇr}
slz-{ }
ˇre-{k,c}

   Since stems hor and ˇrek  can be followed by the endings from the set S5, 
while stems hoˇr  and ˇrec  can be followed by endings from the set S2, and stem 
slz accepts endings from both S5 and S2, we have to store the information about 
the only possible combinations of stem bases, intersegments  and endings in our 
system in the form of a pattern definition. To this end, we use the following data 
structure:

hora+<r>S5<ˇr>S2 
slza+< >S5,S2
ˇreka+<k>S5<c>S2

   A pattern is denoted by its unique identifier (hora , slza , ˇreka ) and it consists 
of blocks that are prefixed with an intersegment visually closed in <>. The special 
character “ ” stands for an empty intersegment. Each block then contains a list 
of identifiers of sets. Identifiers of sets are visually separated by a comma in 
lists. Again, since intersegments  and lists of identifiers repeat in the definitions 
of patterns, we store them in unique tables and use references to these tables in 
the definitions.


3    Derivative  Processes

As have been shown in the previous paradigms, the morphological process of 
inflection is captured by means of paradigms in our system. Compounding does 
not play crucial role in Czech morphology if compared with other languages,  e. g. 
German [7]. Therefore, the description of derivative processes remains  untouched 
so far. It will be discussed in this section.
The process of morphological derivation of new words, primarily with distinct
POS categories, is considered as a higher degree of morphological  process, in the






level above the inflection. Indeed, for example, a particular class of deverbative 
adjectives  can be derived from the derivation paradigm of transitive  verbs. A 
hierarchical system of morphological  paradigms has been implemented  as a tool 
able to capture different levels of the Czech morphology.
   Hierarchical patterns are constructed fully  automatically from the binding 
defined on the level of basic forms connecting always one lemma with another 
one by a specified type  of a link.  If  a process could be described  as a n-ary 
relation, it would be partitioned into n − 1 binary relations. This partitioning  is 
much more flexible and allows automatic generalisations of derivation relations. 
To demonstrate the derivation binding on the level of lemmata, we present the 
following example with participles:


poˇc´ıtat--(DEVESUBST)--poˇc´ıt´an´ı	count--counting 
poˇc´ıtat--(DEVEADJPAS)--poˇc´ıtan´y	count--counted 
poˇc´ıtat--(DEVEADJPASSHORT)--poˇc´ıt´an	count--is  counted 
poˇc´ıtat--(DEVEADJACTIMPF)--poˇc´ıtaj´ıc´ı	count--is  counting

   From the given example it follows that  each link  connects one base form 
of a word with  another one and names such relation. If  the label of a base 
form is unambiguous and therefore it can be used as a primary identifier it is 
sufficient to specify only these labels in the binding process. If the label itself 
can be ambiguous,  the pairs of lemma and the relevant inflectional pattern are 
connected. However, even this approach is not able to represent completely the 
dependency of the relation on a particular sense of a word. For example, the 
relation “possessive adjective” applies only for the reading of jeˇr´ab  denoting a 
bird. This is the reason why we have implemented  the system connecting pairs 
of triplets of (sense-id, lemma, paradigm) by a named relation.
   Indexing techniques and dictionary methods [6] used in our implementation 
allow an efficient retrieval of related lemmata. It is also possible quickly return 
a chosen  base form for a set of related words — the feature which is highly 
favourable in several applications, e.g. in the area of information retrieval or 
indexing Internet documents.
   The system of base form binding is not limited to the basic derivative pro- 
cesses described   above. The same principle e.g. depicts two  types  of relation 
in the level under the basic derivation, namely original/adapted orthography 
and inflectional/non-inflectional doublets in the case of loanwords. The former 
can be demonstrated  by the example of a link between gymnasium/gymna´zium 
(in the actual version of our morphological analyser we use even more elabo- 
rated assignment of these doublet types in the form of basic type of relation and 
more specific subtype). The example of inflectional/non-inflectional doublet is 
the link between the word abb´e assigned to the paradigm abb´e (non-inflectional) 
and Tony . It is of course possible to model such relations on the basic level of 
inflectional paradigms  as a word-form homonymy. However, it would lead to the 
mixture of unrelated forms and would complicate special types of analyses, e.g. 
a style-checker analysis, that could be very interesting.






   There are other relations connecting lemmata above the level of basic deriva- 
tive processes. We take advantage of the standard process and are able to uni- 
formly describe such different relations as diminutives (and its degree):

v˚uz--(DIMIN:1)--voz´ık 
v˚uz--(DIMIN:2)--voz´ıˇcek,

aspectual relations of verbs:

ˇr´ıci--(ASPPAIR)--ˇr´ıkat,

iterative relations of verbs (together with “degrees”):

chodit--(ITER:1)--chod´ıvat 
chodit--(ITER:2)--chod´ıv´avat,

the relations between an animate noun and derived possessive adjective:

otec--(MASCPOSS)--otc˚uv,

the process of creation feminine from masculine nouns:
soudce--(MASC2FEMI)--soudkynˇe, 
or synonyms and antonyms: 
kosmonaut--(SYNO)--astronaut
mlad´y--(ANTO)--star´y.

   The last class of links brings us directly to other relations that can be found 
in semantic nets like Wordnet [9]. The typical relations of hyperonym/hyponym, 
part/whole (meronyms) etc. are modelled on the higher level, the level based on 
synonyms, to be able to link groups of synonyms (that are called synsets in the 
context of Wordnet).
   The possibility of building complex structures of links, e.g. relations of rela- 
tions, is also employed in connecting roots of loanwords to their Czech equiva- 
lents. Similarly to [12], we are therefore able to relate words derived from the 
Greek root kard with the group of Czech words derived from the Czech root srd , 
e.g. osrdeˇcn´ık, kardiostimulator, srdce, kardiologie .


4	Czech Morphological Analyser ajka

The key point of successful implementation of the analyser is an efficient storage 
mechanism for lexical items. A trie structure is used for storing stem bases of 
Czech word forms. One of the main disadvantages of this approach are high 
memory requirements. We tried to solve this problem by implementing the trie 
structure in the form of the minimal finite state automaton. The incremental 
method of building such an automaton was presented in [2] and is fast enough 
for our purpose. Moreover, the memory requirements for storing the minimal 
automaton are significantly lower (see Table 1).






   There are two binary files that are essential for the analyser. One of them 
contains definitions of sets of endings and morphological patterns stored in data 
structures described in Section 2. The source of this binary file is a text file with 
definitions of ending sets and patterns. The second is a binary image of the Czech 
Machine Dictionary and contains stem bases of Czech words and auxiliary data 
structures. We developed a program abin that can read both of these text files 
and efficiently store their content into appropriate data structures in destination 
binary files.
   The first action of the analyser is loading these binary files. These files are 
not further processed, they are only loaded into memory. The main reason for 
this solution is to allow as quick a start of the analyser as possible. The next 
actions of the analyser are determined by steps of the morphological analysis 
algorithm. The basic principle of the algorithm is based on the segmentation 
described in Section 2. The separated ending then determines values of gram- 
matical categories. More details can be found in [13].
   Another feature of the analyser is a possibility to select various forms of the 
basic word form (lemma).
   Finally, user can have more versions of binary files that contain morphological 
information and stem bases and can specify which pair should be used by the 
analyser. Users can take  advantage of this feature to “switch  on” analysis of 
colloquial Czech, domain-specific texts etc.
   The power of the analyser can be evaluated by two features. The most im- 
portant thing is number of words that can be recognised by the analyser. This 
number depends on the quality and richness of the dictionary. Our database con- 
tains 223,600 stem bases and ajka  is able to analyse (and generate) 5,678,122 
correct Czech word forms. The second feature is the speed of analysis. In the 
brief mode, ajka  can analyse more than 20,000 words per second on Pentiu- 
mIII processor with the frequency of 800MHz. Some other statistic data, such 
as number of segments and size of binary files, is shown in the following Table 1.


Table 1. Statistic data

#int
erse
gme
nts
779
#en
din
gs
643
#set
s of 
endi
ngs
2,8
06
#pa
tter
ns
1,5
70
#ste
m  
bas
es
223
,60
0
#ge
nera
ted 
wor
d 
form
s
5,6
78,
122
#ge
ner
ate
d 
tags
1,6
04
spe
ed 
of 
the 
anal
ysis
20,0
00 
wor
ds/s
dicti
ona
ry
1,93
0,52
9 
Byte
s
mor
ph. 
info
rma
tion
147,
675 
Byt
es





5    Conclusion

The morphological analyser ajka  has been tested on large corpora containing
100,000,000 positions. Based on the test results, the definitions of sets of endings 
and patterns as well as the Czech Machine Dictionary are being extended by some 
missing, mostly foreign-language stem bases and their appropriate patterns and 
endings. In its current state, ajka  can be used for morphological analysis of any 
raw Czech texts.
   The analyser ajka can readily be adapted to other inflectional languages that 
have to deal with morphological analysis. In general, only the language-specific 
parts of the system, i.e. definitions of sets of endings and the dictionary, which 
are stored as text files, have to be replaced for this purpose.


References

1. Kenneth R. Beesley and Lauri Karttunen.  Finite-state non-concatenative morpho- 
tactics.  In Proceedings of the Fifth  Workshop of the ACL  Special Interest Group 
in Computational Phonology, 2000.
2. Jan Daciuk, Richard E. Watson, and Bruce W. Watson. Incremental construction 
of acyclic finite-state automata and transducers. In Finite State Methods in Natural 
Language Processing, Bilkent University,  Ankara, Turkey, June – July 1998.
3. G. Grefenstette et al.   Recognizing Lexical Patterns in  Text.   Kluwer  Academic
Publishers, 1st edition, 2000.
4. Jan Hajiˇc. Unification  Morphology Grammar. Ph.D. Thesis, Faculty of Mathemat- 
ics and Physics, Charles University,  Prague, 1994.
5. Jan  Hajiˇc.    Disambiguation  of  Rich  Inflection  (Computational  Morphology of
Czech). Charles University  Press, 1st edition, 2000. In preparation.
6. Donald E. Knuth.   The Art of Computer Programming:  Sorting and Searching, 
volume 3. Addison Wesley, 2nd edition, 1973.
7. Gabriele Kodydek.   A  word analysis system for German hyphenation, full  text 
search, and spell checking, with regard to the latest reform of German orthography. 
In Proceedings of the Third Workshop on Text, Speech and Dialogue — TSD 2000,
2000.
8. Wolfgang Lezius, Reinhard Rapp, and Manfred Wettler.   A freely available mor- 
phological analyzer, disambiguator and context sensitive lemmatizer for German. 
In Proceedings of the COLING-ACL, 1998.
9. G. A. Miller.  Five papers on Wordnet.  Technical report, Princeton, 1993.
10. Kl´ara Osolsobˇe.  Algorithmic  Description of Czech Formal Morphology and Czech
Machine Dictionary.    Ph.D.  Thesis, Faculty  of Arts,  Masaryk University  Brno,
1996. In Czech.
11. S. Murat  Oztaner. A word grammar of Turkish with morphophonemic rules. Mas- 
ter’s thesis, Middle East Technical University.
12. Emil P´aleˇs.  Sapfo – Paraphraser of Slovak. Veda, Bratislava, 1994.
13. Radek Sedl´aˇcek.   Morphological analyser of Czech.  Master’s thesis, Faculty  of
Informatics, Masaryk University Brno, 1999. In Czech.
