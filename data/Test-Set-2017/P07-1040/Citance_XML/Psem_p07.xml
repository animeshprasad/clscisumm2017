<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">This paper describes a new evaluation metric, TER-Plus (TERp) for automatic evaluation of machine translation (MT).</S>
		<S sid ="2" ssid = "2">TERp is an extension of Translation Edit Rate (TER).</S>
		<S sid ="3" ssid = "3">It builds on the success of TER as an evaluation metric and alignment tool and addresses several of its weaknesses through the use of paraphrases, stemming, synonyms, as well as edit costs that can be automatically optimized to correlate better with various types of human judgments.</S>
		<S sid ="4" ssid = "4">We present a correlation study comparing TERp to BLEU, METEOR and TER, and illustrate that TERp can better evaluate translation adequacy.</S>
		<S sid ="5" ssid = "5">Keywords Machine translation evaluation · Paraphrasing · Alignment M. G. Snover (B) · N. Madnani · B. Dorr Laboratory for Computational Linguistics and Information Processing, Institute for Advanced Computer Studies, University of Maryland, College Park, MD, USA email: snover@umiacs.umd.edu N. Madnani email: nmadnani@umiacs.umd.edu B. Dorr email: bonnie@umiacs.umd.edu R. Schwartz BBN Technologies, Cambridge, MA, USA email: schwartz@bbn.com</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="6" ssid = "6">TER-Plus, or TERp1 (Snover et al. 2009), is an automatic evaluation metric for machine translation (MT) that scores a translation (the hypothesis) of a foreign language text (the source) against a translation of the source text that was created by a human translator, which we refer to as a reference translation.</S>
			<S sid ="7" ssid = "7">The set of possible correct translations is very large, possibly infinite, and any one reference translation represents a single point in that space.</S>
			<S sid ="8" ssid = "8">Frequently, multiple reference translations— typically 4—are provided to give broader sampling of the space of correct translations.</S>
			<S sid ="9" ssid = "9">Automatic MT evaluation metrics compare the hypothesis against this set of reference translations and assign a score to the similarity, such that a better score is given when the hypothesis is more similar to the references.</S>
			<S sid ="10" ssid = "10">TERp follows this methodology and builds upon an already existing evaluation metric, Translation Error Rate (TER) (Snover et al. 2006).</S>
			<S sid ="11" ssid = "11">In addition to assigning a score to a hypothesis, TER provides an alignment between the hypothesis and the reference, enabling it to be useful beyond general translation evaluation.</S>
			<S sid ="12" ssid = "12">While TER has been shown to correlate well with translation quality, it has several flaws: it only considers exact matches when measuring the similarity of the hypothesis and the reference, and it can only compute this measure of similarity against a single reference.</S>
			<S sid ="13" ssid = "13">The handicap of using a single reference can be addressed by constructing a lattice of reference translations–this technique has been used to combine the output of multiple translation systems (Rosti et al. 2007).</S>
			<S sid ="14" ssid = "14">TERp does not utilize this methodology and instead addresses the exact matching flaw of TER.</S>
			<S sid ="15" ssid = "15">In addition to aligning words in the hypothesis and reference if they are exact matches, TERp uses stemming and synonymy to allow matches between words.</S>
			<S sid ="16" ssid = "16">It also uses probabilistic phrasal substitutions to align phrases in the hypothesis and reference.</S>
			<S sid ="17" ssid = "17">These phrase substitutions are generated by considering possible paraphrases of the reference words.</S>
			<S sid ="18" ssid = "18">Matching using stems and synonyms (Banerjee and Lavie 2005) as well as using paraphrases (Zhou et al. 2006; Kauchak and Barzilay 2006) have been shown to be beneficial for automatic MT evaluation.</S>
			<S sid ="19" ssid = "19">Paraphrases have been shown to be additionally useful in expanding the number of references used for evaluation (Madnani et al. 2008) although they are not used in this fashion within TERp.</S>
			<S sid ="20" ssid = "20">The use of synonymy, stemming, and paraphrases allows TERp to better cope with the limited number of reference translations provided.</S>
			<S sid ="21" ssid = "21">TERp was one of the top metrics submitted to the NIST MetricsMATR 2008 challenge (Przybocki et al. 2008), having the highest average rank over all the test conditions (Snover et al. 2009).</S>
			<S sid ="22" ssid = "22">We first discuss the original TER metric in Sect.</S>
			<S sid ="23" ssid = "23">2.</S>
			<S sid ="24" ssid = "24">In Sect.</S>
			<S sid ="25" ssid = "25">3, we present the details of our various enhancements to TER.</S>
			<S sid ="26" ssid = "26">We then briefly review the alignment capability of TERp along with some examples in Sect.</S>
			<S sid ="27" ssid = "27">4.</S>
			<S sid ="28" ssid = "28">Finally, in Sect.</S>
			<S sid ="29" ssid = "29">5, we show the results of optimizing TERp for human judgments of adequacy and compare with other established evaluation metrics, followed by an analysis of the relative benefits of each of the new features of TERp in Sect.</S>
			<S sid ="30" ssid = "30">6.</S>
			<S sid ="31" ssid = "31">1 TERp is named after the nickname—“terp”—of the University of Maryland, College Park, Mascot: the.</S>
			<S sid ="32" ssid = "32">diamondback terrapin.</S>
	</SECTION>
	<SECTION title="Translation Edit Rate (TER). " number = "2">
			<S sid ="33" ssid = "1">One of the first automatic metrics used to evaluate automatic MT systems was Word Error Rate (WER) (Niessen et al. 2000), which remains the standard evaluation metric for Automatic Speech Recognition.</S>
			<S sid ="34" ssid = "2">WER is computed as the Levenshtein distance between the words of the hypothesis and the words of the reference translation divided by the length of the reference translation.</S>
			<S sid ="35" ssid = "3">Unlike speech recognition, there are many correct translations for any given foreign sentence.</S>
			<S sid ="36" ssid = "4">These correct translations differ not only in lexical choice but also in the order in which the words occur.</S>
			<S sid ="37" ssid = "5">WER is inadequate for evaluating MT output as it fails to combine knowledge from multiple reference translations and cannot accurately model the reordering of words and phrases that accompanies translation.</S>
			<S sid ="38" ssid = "6">TER addresses the latter failing of WER by allowing block movement of words, called shifts, within the hypothesis.</S>
			<S sid ="39" ssid = "7">Shifting a phrase is assumed to have the same edit cost as inserting, deleting or substituting a word, regardless of the number of words being shifted.</S>
			<S sid ="40" ssid = "8">While a general solution to WER with block movements is NPCom- plete (Lopresti and Tomkins 1997), TER computes an approximate solution by using a greedy search to select the words to be shifted, as well as imposing additional constraints on these words.</S>
			<S sid ="41" ssid = "9">These constraints are intended to simulate the way in which a human editor might choose the words to shift.</S>
			<S sid ="42" ssid = "10">Other automatic metrics exist that have the same general formulation as TER but address the complexity of shifting in different ways, such as the CDER evaluation metric (Leusch et al. 2006).</S>
			<S sid ="43" ssid = "11">The shifting constraints used by TER serve to better model the quality of translation as well as to reduce the model’s computational complexity.</S>
			<S sid ="44" ssid = "12">Examining a larger set of shifts, or choosing them in a more optimal fashion might result in a lower TER score but it would not necessarily improve the ability of the measure to determine the quality of a translation.</S>
			<S sid ="45" ssid = "13">The constraints used by TER are as follows: 1.</S>
			<S sid ="46" ssid = "14">Shifts are selected by a greedy algorithm that chooses the shift that yields the.</S>
			<S sid ="47" ssid = "15">largest reduction in WER between the reference and the hypothesis.</S>
			<S sid ="48" ssid = "16">2.</S>
			<S sid ="49" ssid = "17">The sequence of words shifted in the hypothesis must exactly match the sequence.</S>
			<S sid ="50" ssid = "18">of words in the reference that it will align with after the shift.</S>
			<S sid ="51" ssid = "19">3.</S>
			<S sid ="52" ssid = "20">The words being shifted, and the matching reference words, must each contain.</S>
			<S sid ="53" ssid = "21">at least one error, according to WER, before the shift occurs.</S>
			<S sid ="54" ssid = "22">This prevents the shifting of words that are already correctly matched.</S>
			<S sid ="55" ssid = "23">When TER is used with multiple references, it does not combine the references, but, instead, scores the hypothesis against each reference individually—as is the case with metrics such as METEOR (Banerjee and Lavie 2005).</S>
			<S sid ="56" ssid = "24">The reference against which the hypothesis has the fewest number of edits is deemed to be the closet reference, and the final TER score is the number of edits in between the hypothesis and this closest reference divided by the average number words across all of the references.</S>
	</SECTION>
	<SECTION title="TER-Plus (TERp). " number = "3">
			<S sid ="57" ssid = "1">TER-Plus extends the TER metric beyond the limitation of exact matches through the addition of three new types of edit operations, detailed in Sect.</S>
			<S sid ="58" ssid = "2">3.1: stem matches, synonym matches, and phrase substitutions using automatically generated paraphrases.</S>
			<S sid ="59" ssid = "3">These changes allow a relaxing of the shifting constraints used in TER, which is discussed in Sect.</S>
			<S sid ="60" ssid = "4">3.2.</S>
			<S sid ="61" ssid = "5">In addition, instead of all edit operations having a uniform edit cost of 1—as is the case in TER—the edit costs for TERp can be learned automatically in order to maximize correlation with human judgments.</S>
			<S sid ="62" ssid = "6">The details of this optimization are presented in Sect.</S>
			<S sid ="63" ssid = "7">3.3.</S>
			<S sid ="64" ssid = "8">3.1 Stem, synonym, and paraphrase substitutions.</S>
			<S sid ="65" ssid = "9">In addition to the edit operations of TER—Matches, Insertions, Deletions, Substitutions and Shifts—TERp also uses three new edit operations: Stem Matches, Synonym Matches and Phrase Substitutions.</S>
			<S sid ="66" ssid = "10">Rather than treating all substitution operations as edits of cost 1, the cost of a substitution in TERp varies so that a lower cost is used if two words are synonyms (a Synonym Match), share the same stem (a Stem Match), or if two phrases are paraphrases of each other (a Phrase Substitution).</S>
			<S sid ="67" ssid = "11">The cost of these new edit types is set, along with the other edit costs, according to the type of human judgment for which TERp is optimized, as described in Sect.</S>
			<S sid ="68" ssid = "12">3.3.</S>
			<S sid ="69" ssid = "13">TERp identifies stems and synonyms in the same manner as the METEOR metric (Banerjee and Lavie 2005), where words are determined to share the same stem using the Porter stemming algorithm (Porter 1980), and words are determined to be synonyms if they share the same synonym set according to WordNet (Fellbaum 1998).</S>
			<S sid ="70" ssid = "14">Phrase substitutions are identified by looking up—in a pre-computed phrase table—probabilistic paraphrases of phrases in the reference to phrases in the hypothesis.</S>
			<S sid ="71" ssid = "15">The paraphrases used in TERp are automatically extracted using the pivot- based method (Bannard and CallisonBurch 2005) with several additional filtering mechanisms to increase precision.</S>
			<S sid ="72" ssid = "16">The pivot-based method identifies paraphrases as English phrases that translate to the same foreign phrase in a bilingual phrase table.</S>
			<S sid ="73" ssid = "17">The corpus used for paraphrase extraction was an ArabicEnglish newswire bi-text containing a million sentences, resulting in a phrase table containing approximately 15 million paraphrase pairs.</S>
			<S sid ="74" ssid = "18">While an ArabicEnglish corpus was used to generate the paraphrases, the resulting phrase pairs are English only and can be applied to regardless of the source language.</S>
			<S sid ="75" ssid = "19">We have previously shown that the choice of data for paraphrasing is not of vital importance to TERp’s performance (Snover et al. 2009).</S>
			<S sid ="76" ssid = "20">A few examples of the extracted paraphrase pairs that were actually used by TERp in experiments described later are shown below: Some paraphrases, such as brief and short are redundant with other edit types used by TERp such as synonym and stem matching.</S>
			<S sid ="77" ssid = "21">A probability for each paraphrase pair is estimated as described in Bannard and CallisonBurch (2005).</S>
			<S sid ="78" ssid = "22">However, studies (Snover et al. 2009) of these paraphrase probabilities have shown that they are not always reliable indicators of the semantic relatedness of phrase pairs and further refinements of these probability estimates might prove valuable to TERp and other MT evaluation metrics.</S>
			<S sid ="79" ssid = "23">With the exception of the phrase substitutions, all of the edit operations used by TERp have fixed cost edits, i.e., the edit cost is the same regardless of the words in question.</S>
			<S sid ="80" ssid = "24">The cost of a phrase substitution is a function of the probability of the paraphrase and the number of edits needed to align the two phrases without the use of phrase substitutions.</S>
			<S sid ="81" ssid = "25">In effect, the probability of the paraphrase is used to determine how much to discount the alignment of the two phrases.</S>
			<S sid ="82" ssid = "26">For a phrasal substitution between a reference phrase r and a hypothesis phrase h where Pr is the probability of paraphrasing r as h, and edit(r, h) is number of edits needed to align r and h without any phrasal substitutions, the edit cost is specified by three parameters, w1 , w2 , and w3 as follows: cost(r, h) = w1 + edit(r, h)(w2 log(Pr) + w3 ) Only paraphrases specified in the input phrase table are considered for phrase substitutions.</S>
			<S sid ="83" ssid = "27">In addition, the total cost for a phrasal substitution is limited to values greater than or equal to 0, to ensure that the edit cost for substitution operations is always non-negative.</S>
			<S sid ="84" ssid = "28">The parameter w1 allows a constant cost to be specified for all phrase substitutions, while parameters w2 and w3 adjust the discount applied to the edit cost of the two phrases.</S>
			<S sid ="85" ssid = "29">3.2 Additional differences from TER.</S>
			<S sid ="86" ssid = "30">In addition to the new edit operations, TERp differs from TER in several other ways.</S>
			<S sid ="87" ssid = "31">First, TERp is insensitive to casing information since we observe that penalizing for errors in capitalization lowers the correlation with human judgments of translation quality.</S>
			<S sid ="88" ssid = "32">Second, TERp is capped at 1.0.</S>
			<S sid ="89" ssid = "33">While the formula for TER allows it to exceed 1.0 if the number of edits exceed the number of words, such a score would be unfair since the hypothesis cannot be more than 100% wrong.</S>
			<S sid ="90" ssid = "34">The shifting criteria in TERp have also been relaxed relative to TER, so that shifts are allowed if the words being shifted are: (i) exactly the same, (ii) synonyms, stems or paraphrases of the corresponding reference words, or (iii) any such combination.</S>
			<S sid ="91" ssid = "35">In addition, a set of stop words is used to constrain the shift operations such that common words (“the”, “a” etc.) and punctuation can be shifted if and only if a nonstop word is also shifted.</S>
			<S sid ="92" ssid = "36">This reduces the number of shifts considered in the search and prevents any shifts that may not correspond to an increase in translation quality.</S>
			<S sid ="93" ssid = "37">More relaxed shift constraints have been explored that allowed shifts even if some words did not match at all.</S>
			<S sid ="94" ssid = "38">We have empirically found this greatly increased the number of shifts considered, but also significantly decreased correlation with human judgment.</S>
			<S sid ="95" ssid = "39">The shift constraints imposed by TER and TERp not only speed up the algorithm but also limits block movement of words to those that correspond with increased translation quality.</S>
			<S sid ="96" ssid = "40">3.3 TERp edit cost optimization.</S>
			<S sid ="97" ssid = "41">While TER uses uniform edit costs—1 for all edits except matches—we seek to improve TERp’s correlation with human judgments by weighting different edit types more heavily than others, as some types of errors are more harmful to translation quality than others.</S>
			<S sid ="98" ssid = "42">TERp uses a total of eight edit costs.</S>
			<S sid ="99" ssid = "43">However, the cost of an exact match is held fixed at 0 which leaves a total of seven edit costs that can be optimized.</S>
			<S sid ="100" ssid = "44">Since the paraphrase edit cost is represented by three parameters, this yields a total of nine parameters that are varied during optimization.</S>
			<S sid ="101" ssid = "45">All parameters, except for the three phrasal substitution parameters, are also restricted to be positive.</S>
			<S sid ="102" ssid = "46">A hill-climbing search optimizes the parameters to maximize the correlation of human judgments with the TERp score.</S>
			<S sid ="103" ssid = "47">In this paper, these correlations are measured at the sentence, or segment, level.</S>
			<S sid ="104" ssid = "48">However, optimization could also be performed to maximize document level correlation or any other measure of correlation with human judgments.</S>
			<S sid ="105" ssid = "49">While TERp can be run using a fixed set of parameters, it can be beneficial to tune them depending on the properties of translation desired.</S>
			<S sid ="106" ssid = "50">Optimization of MT evaluation metrics towards specific human judgment types was previously investigated in a similar manner by Lita et al.</S>
			<S sid ="107" ssid = "51">(2005).</S>
			<S sid ="108" ssid = "52">Depending on whether the end goal is to maximize correlation with the Human Translation Error Rate (HTER), adequacy, or fluency, different sets of parameters may better reflect translation performance (Snover et al. 2009).</S>
	</SECTION>
	<SECTION title="TERp alignment. " number = "4">
			<S sid ="109" ssid = "1">In addition to providing a score indicating the quality of a translation, TERp generates an alignment between the hypothesis and reference, indicating which words are correct, incorrect, misplaced, or similar to the reference translation.</S>
			<S sid ="110" ssid = "2">While the quality of this alignment is limited by the similarity of the reference to the hypothesis it can be beneficial in diagnosing error types in MT systems.</S>
			<S sid ="111" ssid = "3">Actual examples of TERp alignments are shown in Fig.</S>
			<S sid ="112" ssid = "4">1.</S>
			<S sid ="113" ssid = "5">Within each example, the first line is the reference translation, the second line is the original hypothesis, and the third line is the hypothesis after performing all shifts.</S>
			<S sid ="114" ssid = "6">Words in bold are shifted, while square brackets are used to indicate other edit types: P for phrase substitutions, T for stem matches, Y for synonym matches, D for deletions, and I for insertions.</S>
			<S sid ="115" ssid = "7">These alignments allow TERp to provide quality judgments on translations and to serve as a diagnostic tool for evaluating particular types of translation errors.</S>
			<S sid ="116" ssid = "8">In addition, it may also be used as a general-purpose string alignment tool—TER has been used for aligning multiple system outputs to each other for MT system combination (Rosti et al. 2007), a task for which TERp may be even better suited.</S>
			<S sid ="117" ssid = "9">TER-Plus: enhancements to Translation Edit Rate Fig.</S>
			<S sid ="118" ssid = "10">1 Examples of TERp alignment output.</S>
			<S sid ="119" ssid = "11">In each example, R, H and H· denote the reference, the original hypothesis and the hypothesis after shifting respectively.</S>
			<S sid ="120" ssid = "12">Shifted words are bolded and other edits are in [brackets].</S>
			<S sid ="121" ssid = "13">Number of edits shown: TERp (TER)</S>
	</SECTION>
	<SECTION title="Experimental results. " number = "5">
			<S sid ="122" ssid = "1">5.1 Optimization for adequacy.</S>
			<S sid ="123" ssid = "2">In order to tune and test TERp, we used a portion of the Open MTEval 2006 evaluation set that had been annotated for adequacy (on a seven-point scale) and released by NIST as a development set for the MetricsMATR 2008 challenge (Przybocki et al. 2008).</S>
			<S sid ="124" ssid = "3">This set consists of the translation hypotheses from 8 Arabic-to-English MT systems for 25 documents, which in total consisted of 249 segments.</S>
			<S sid ="125" ssid = "4">For each segment, four reference translations were also provided.</S>
			<S sid ="126" ssid = "5">Optimization was done using 2-fold cross-validation.</S>
			<S sid ="127" ssid = "6">These optimized edit costs (and subsequent results) differ slightly from the formulation of TERp submitted to the MetricsMATR 2008 challenge, where tuning was done without cross-validation.</S>
			<S sid ="128" ssid = "7">Optimization requires small amounts of data but should be done rarely so that the metric can be held constant to aid in system development and comparison.</S>
			<S sid ="129" ssid = "8">TERp parameters were then optimized to maximize segment level Pearson correlation with adequacy on the tuning set.</S>
			<S sid ="130" ssid = "9">The optimized edit costs, averaged between the two splits of the data, are shown in Table 1.</S>
			<S sid ="131" ssid = "10">Because segment level correlation places equal importance on all segments, this optimization over-tunes for short segments, as they have very minor effects at the document or system level.</S>
			<S sid ="132" ssid = "11">Optimization on length weighted segment level correlation would rectify this but would result in slightly worse segment level correlations.</S>
			<S sid ="133" ssid = "12">5.2 Correlation results.</S>
			<S sid ="134" ssid = "13">In our experiments, we compared TERp with METEOR (Banerjee and Lavie 2005) (version 0.6 using the Exact, WordNet synonym, and Porter stemming modules), TER Table 1 TERp edit costs optimized for adequacy Fig.</S>
			<S sid ="135" ssid = "14">2 Metric correlations with adequacy on the MetricsMATR 2008 development set.</S>
			<S sid ="136" ssid = "15">Correlations are significantly different if the center point of one correlation does not lie within the confidence interval of the other correlation (version 0.7.25), the IBM version of BLEU (Papineni et al. 2002) with a maximum n-gram size of 4 (BLEU).</S>
			<S sid ="137" ssid = "16">We also included a better correlating variant of BLEU with a maximum n-gram size of 2 (BLEU2).</S>
			<S sid ="138" ssid = "17">TER and both versions of BLEU were run in case insensitive mode as this produces significantly higher correlations with human judgments, while METEOR is already case insensitive.</S>
			<S sid ="139" ssid = "18">To evaluate the quality of an automatic metric, we examined the Pearson correlation of the automatic metric scores—at the segment, document and system level—with the human judgments of adequacy.</S>
			<S sid ="140" ssid = "19">Document and system level adequacy scores were calculated using the length weighted averages of the appropriate segment level scores.</S>
			<S sid ="141" ssid = "20">Pearson correlation results between the automatic metrics and human judgments of adequacy are shown in Fig.</S>
			<S sid ="142" ssid = "21">2.</S>
			<S sid ="143" ssid = "22">We can determine whether the difference between two correlation coefficients is statistically significant by examining the confidence interval of the Pearson coefficient,2 r . If the correlation coefficient for a metric occurs within the 95% confidence interval of another metric, then the difference between the correlations of the metrics is not statistically significant.</S>
			<S sid ="144" ssid = "23">TERp consistently outperformed all of the other metrics on the segment, document, and system level Pearson correlations, with all but one difference being statistically significant.</S>
			<S sid ="145" ssid = "24">While TERp had higher correlation than TER on the system level, the 2 Confidence intervals are calculated using the Fisher r -to-z transformation, consulting a z-table to find.</S>
			<S sid ="146" ssid = "25">the upper and lower bounds of a 95% confidence interval, and then converting the values back to r scores.</S>
			<S sid ="147" ssid = "26">This is solely a function of the correlation coefficient, r , and the number of data points, N . Fig.</S>
			<S sid ="148" ssid = "27">3 Pearson correlation of TERp with selective features difference is not statistically significant—the differences with all other metrics are statistically significant.</S>
			<S sid ="149" ssid = "28">Of the other metrics, METEOR consistently had the highest Pearson correlation at the segment and document level.</S>
			<S sid ="150" ssid = "29">METEOR, the only other tun- able metric, might possibly correlate better by retuning for this dataset, although this is not generally done for METEOR.</S>
	</SECTION>
	<SECTION title="Benefit of individual TERp features. " number = "6">
			<S sid ="151" ssid = "1">In this section, we examine the benefit of each of the new features of TERp by individually adding each feature to TER and measuring the correlation with the human judgments.</S>
			<S sid ="152" ssid = "2">Each condition was optimized as described in Sect.</S>
			<S sid ="153" ssid = "3">5.1.</S>
			<S sid ="154" ssid = "4">Figure 3 shows the Pearson correlations for each experimental condition along with the 95% confidence intervals.</S>
			<S sid ="155" ssid = "5">The largest gain over TER is through the addition of optimizable edit costs.</S>
			<S sid ="156" ssid = "6">This takes TER from being a metric with balanced insertion and deletion costs to a recall- oriented metric which strongly penalizes deletion errors, while being forgiving of insertion errors.</S>
			<S sid ="157" ssid = "7">This single addition gives statistically significant improvements over TER at the segment and document levels.</S>
			<S sid ="158" ssid = "8">This validates similar observations of the importance of recall noted by Lavie et al.</S>
			<S sid ="159" ssid = "9">(2004).</S>
			<S sid ="160" ssid = "10">The other three features of TERp—stemming, synonymy, and paraphrases—are added on top of the optimized TER condition since optimization is required to determine the edit costs for the new features.</S>
			<S sid ="161" ssid = "11">The addition of each of these features increases correlations over the optimized edit costs at all levels, with statistically significant gains at the segment level for the addition of synonymy or paraphrasing.</S>
			<S sid ="162" ssid = "12">The addition of paraphrasing gives the largest overall gains in correlation after optimization and is more beneficial than stemming and synonymy combined.</S>
			<S sid ="163" ssid = "13">A large percentage of synonym and stem matches are already captured in the paraphrase set and, therefore, the combination of all three features yields only a small gain over paraphrasing alone.</S>
			<S sid ="164" ssid = "14">The TERp framework and software also provide for separate word classes with individual edit costs, so that the edit costs of various sets of words can be increased or decreased.</S>
			<S sid ="165" ssid = "15">For example, the cost of deleting content words could be set higher than that of deleting function words.</S>
			<S sid ="166" ssid = "16">It is difficult to set such costs manually as it is not clear how these phenomena are treated by human annotators of translation quality, although these costs could be determined by automatic optimization.</S>
	</SECTION>
	<SECTION title="Discussion. " number = "7">
			<S sid ="167" ssid = "1">TERp extends the TER metric using stems, synonyms, paraphrases, and optimizable edit costs to assign a more realistic score to a translation hypothesis and generate a better alignment against the reference.</S>
			<S sid ="168" ssid = "2">Experimental results show that TERp achieves significant gains in correlation with human judgments over other MT evaluation metrics.</S>
			<S sid ="169" ssid = "3">Optimization can be targeted towards specific types of human judgments, yielding different edit costs for TERp, for use in cases when a specific notion of translation quality is desired.</S>
			<S sid ="170" ssid = "4">Automatic MT evaluation metrics are used for two major purposes: (1) To compare two or more MT systems (or variants of the same system) in order to determine which system generates better translations.</S>
			<S sid ="171" ssid = "5">This is often used to show that the addition of a new feature to a translation system yields an improvement over a baseline system.</S>
			<S sid ="172" ssid = "6">(2) To automatically optimize or tune the parameters of a system.</S>
			<S sid ="173" ssid = "7">While we conducted this study in the context of the first purpose—showing that TERp provides significant gains in evaluating final system outputs—we have not evaluated TERp for the second purpose.</S>
			<S sid ="174" ssid = "8">It is frequently the case that automatic metrics that appear useful according to the first criterion are not suitable for the second purpose, resulting in degenerate system parameters.</S>
			<S sid ="175" ssid = "9">To evaluate a metric’s suitability for optimization, a translation system must be optimized using a baseline metric, such as BLEU, and also using the new metric being examined.</S>
			<S sid ="176" ssid = "10">The final outputs of the two systems tuned to the different metrics must then be judged by humans to determine which optimization method provides better translations.</S>
			<S sid ="177" ssid = "11">Unfortunately, this technique is also biased by the translation system that is being tuned and the method used for parameter optimization.</S>
			<S sid ="178" ssid = "12">Further explorations of this nature are needed to determine if TERp, and other metrics, are suitable for use in MT parameter optimization.</S>
			<S sid ="179" ssid = "13">We showed that the addition of stemming, synonymy and, most importantly, paraphrasing to the TER metric significantly improves its correlation with human judgments.</S>
			<S sid ="180" ssid = "14">We believe that further significant improvements in TERp and other automatic evaluation metrics are contingent on the use of additional linguistic features so as to better capture the fluency of a translation hypothesis and its similarity in meaning to reference translations.</S>
			<S sid ="181" ssid = "15">Acknowledgments This work was supported, in part, by BBN Technologies under the GALE Program, DARPA/IPTO Contract No.</S>
			<S sid ="182" ssid = "16">HR001106-C-0022 and in part by the Human Language Technology Center of Excellence.</S>
			<S sid ="183" ssid = "17">The authors would like to thank Philip Resnik, Chris CallisonBurch, Mark Przybocki, Sebastian Bronsart and Audrey Le.</S>
			<S sid ="184" ssid = "18">The TERp software is available online for download at: http://www.umiacs.</S>
			<S sid ="185" ssid = "19">umd.edu/~snover/terp/.</S>
	</SECTION>
</PAPER>
