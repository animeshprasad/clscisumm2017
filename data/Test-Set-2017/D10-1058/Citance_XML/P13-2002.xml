<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">The notion of fertility in word alignment (the number of words emitted by a single state) is useful but difficult to model.</S>
		<S sid ="2" ssid = "2">Initial attempts at modeling fertility used heuristic search methods.</S>
		<S sid ="3" ssid = "3">Recent approaches instead use more principled approximate inference techniques such as Gibbs sampling for parameter estimation.</S>
		<S sid ="4" ssid = "4">Yet in practice we also need the single best alignment, which is difficult to find using Gibbs.</S>
		<S sid ="5" ssid = "5">Building on recent advances in dual decomposition, this paper introduces an exact algorithm for finding the single best alignment with a fertility HMM.</S>
		<S sid ="6" ssid = "6">Finding the best alignment appears important, as this model leads to a substantial improvement in alignment quality.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Word-based translation models intended to model the translation process have found new uses identifying word correspondences in sentence pairs.</S>
			<S sid ="8" ssid = "8">These word alignments are a crucial training component in most machine translation systems.</S>
			<S sid ="9" ssid = "9">Furthermore, they are useful in other NLP applications, such as entailment identification.</S>
			<S sid ="10" ssid = "10">The simplest models may use lexical information alone.</S>
			<S sid ="11" ssid = "11">The seminal Model 1 (Brown et al., 1993) has proved very powerful, performing nearly as well as more complicated models in some phrasal systems (Koehn et al., 2003).</S>
			<S sid ="12" ssid = "12">With minor improvements to initialization (Moore, 2004) (which may be important (Toutanova and Galley, 2011)), it can be quite competitive.</S>
			<S sid ="13" ssid = "13">Subsequent IBM models include more detailed information about context.</S>
			<S sid ="14" ssid = "14">Models 2 and 3 incorporate a positional model based on the absolute position of the word; Models 4 and 5 use a relative position model instead (an English word tends to align to a French word that is nearby the French word aligned to the previous English word).</S>
			<S sid ="15" ssid = "15">Models 3, 4, and 5 all incorporate a notion of “fertility”: the number of French words that align to any English word.</S>
			<S sid ="16" ssid = "16">Although these latter models covered a broad range of phenomena, estimation techniques and MAP inference were challenging.</S>
			<S sid ="17" ssid = "17">The authors originally recommended heuristic procedures based on local search for both.</S>
			<S sid ="18" ssid = "18">Such methods work reasonably well, but can be computationally inefficient and have few guarantees.</S>
			<S sid ="19" ssid = "19">Thus, many researchers have switched to the HMM model (Vogel et al., 1996) and variants with more parameters (He, 2007).</S>
			<S sid ="20" ssid = "20">This captures the positional information in the IBM models in a framework that admits exact parameter estimation inference, though the objective function is not concave: local maxima are a concern.</S>
			<S sid ="21" ssid = "21">Modeling fertility is challenging in the HMM framework as it violates the Markov assumption.</S>
			<S sid ="22" ssid = "22">Where the HMM jump model considers only the prior state, fertility requires looking across the whole state space.</S>
			<S sid ="23" ssid = "23">Therefore, the standard forward-backward and Viterbi algorithms do not apply.</S>
			<S sid ="24" ssid = "24">Recent work (Zhao and Gildea, 2010) described an extension to the HMM with a fertility model, using MCMC techniques for parameter estimation.</S>
			<S sid ="25" ssid = "25">However, they do not have a efficient means of MAP inference, which is necessary in many applications such as machine translation.</S>
			<S sid ="26" ssid = "26">This paper introduces a method for exact MAP inference with the fertility HMM using dual decomposition.</S>
			<S sid ="27" ssid = "27">The resulting model leads to substantial improvements in alignment quality.</S>
			<S sid ="28" ssid = "28">7 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 7–11, Sofia, Bulgaria, August 49 2013.</S>
			<S sid ="29" ssid = "29">Qc 2013 Association for Computational Linguistics</S>
	</SECTION>
	<SECTION title="HMM alignment. " number = "2">
			<S sid ="30" ssid = "1">Let us briefly review the HMM translation model as a starting point.</S>
			<S sid ="31" ssid = "2">We are given a sequence of English words e = e1, . . .</S>
			<S sid ="32" ssid = "3">, eI . This model produces distributions over French word sequences f = f1, . . .</S>
			<S sid ="33" ssid = "4">, fJ and word alignment vectors a = estimate the posterior distribution using Markov chain Monte Carlo methods such as Gibbs sampling (Zhao and Gildea, 2010).</S>
			<S sid ="34" ssid = "5">In this case, we make some initial estimate of the a vector, potentially randomly.</S>
			<S sid ="35" ssid = "6">We then repeatedly re- sample each element of that vector conditioned on all other positions according to the distribua1, . . .</S>
			<S sid ="36" ssid = "7">, aJ , where aj ∈ [0..J ] indicates the English word generating the jth French word, 0 rep tion Pr(aj |a−j, e, f ).</S>
			<S sid ="37" ssid = "8">Given a complete assign resenting a special NULL state to handle systematically unaligned words.</S>
			<S sid ="38" ssid = "9">J Pr(f , a|e) = p(J |I ) n p(aj |aj−1) p fj eament of the alignment for all words except the cur rent, computing the complete probability including transition, emission, and jump, is straightforward.</S>
			<S sid ="39" ssid = "10">This estimate comes with a computational cost: we must cycle through all positions of the j=1 j vector repeatedly to gather a good estimate.</S>
			<S sid ="40" ssid = "11">In practice, a small number of samples will suffice.The generative story begins by predicting the num ber of words in the French sentence (hence the number of elements in the alignment vector).</S>
			<S sid ="41" ssid = "12">Then for each French word position, first the alignment variable (English word index used to generate the current French word) is selected based on only the prior alignment variable.</S>
			<S sid ="42" ssid = "13">Next the French word is predicted based on its aligned English word.</S>
			<S sid ="43" ssid = "14">Following prior work (Zhao and Gildea, 2010), we augment the standard HMM with a fertility distribution.</S>
			<S sid ="44" ssid = "15">I Pr(f , a|e) =p(J |I ) n p(φi|ei) 2.2 MAP inference with dual decomposition.</S>
			<S sid ="45" ssid = "16">Dual decomposition, also known as Lagrangian relaxation, is a method for solving complex combinatorial optimization problems (Rush and Collins, 2012).</S>
			<S sid ="46" ssid = "17">These complex problems are separated into distinct components with tractable MAP inference procedures.</S>
			<S sid ="47" ssid = "18">The subproblems are repeatedly solved with some communication over consistency until a consistent and globally optimal solution is found.Here we are interested in the problem of find i=1 J n p(aj |aj−1) p fj ea j=1 (1) j ing the most likely alignment of a sentence pair e, f . Thus, we need to solve the combinatorial optimization problem arg maxa Pr(f , a|e).</S>
			<S sid ="48" ssid = "19">Let us rewrite the objective function as follows: where φi = LJ δ(i, aj ) indicates the number of times that state j is visited.</S>
			<S sid ="49" ssid = "20">This deficient model I   log p(fj |ei)wastes some probability mass on inconsistent con h(a) = ) log p(φi|ei) + )  figurations where the number of times that a state i=1 2 j,aj =ii is visited does not match its fertility φi. Follow ing in the footsteps of older, richer, and wiser colleagues (Brown et al., 1993),we forge ahead unconcerned by this complication.</S>
			<S sid ="50" ssid = "21">J + ) j=1 ( log p(aj |aj−1) + log p fj eaj 2 2.1 Parameter estimation.</S>
			<S sid ="51" ssid = "22">Of greater concern is the exponential complexity of inference in this model.</S>
			<S sid ="52" ssid = "23">For the standard HMM, there is a dynamic programming algorithm to compute the posterior probability over word alignments Pr(a|e, f ).</S>
			<S sid ="53" ssid = "24">These are the sufficient statistics gathered in the E step of EM.</S>
			<S sid ="54" ssid = "25">The structure of the fertility model violates the Markov assumptions used in this dynamic programming method.</S>
			<S sid ="55" ssid = "26">However, we may empirically Because f is fixed, the p(J |I ) term is constant andmay be omitted.</S>
			<S sid ="56" ssid = "27">Note how we’ve split the opti mization into two portions.</S>
			<S sid ="57" ssid = "28">The first captures fertility as well as some component of the translation distribution, and the second captures the jump distribution and the remainder of the translation distribution.</S>
			<S sid ="58" ssid = "29">Our dual decomposition method follows this segmentation.</S>
			<S sid ="59" ssid = "30">Define ya as ya(i, j) = 1 if aj = i, and 0 otherwise.</S>
			<S sid ="60" ssid = "31">Let z ∈ {0, 1}I ×J be a binary u(0) (i, j) := 0 ∀i ∈ 1..I , j ∈ 1..J for k = 1 to K a(k) := arg maxa f (a) + &apos;S i,j u (k−1) (i, j)ya (i, j)\ z(i, j) := 0 ∀(i, j) ∈ [1..I ] × [1..J ] v := 0 for i = 1 to I for j = 1 to J z(k) := arg maxz g(z) − &apos;S if ya = z return a(k) end if i,j u (k−1) (i, j)z(i, j)\ x(j) := (log p(fj |ei ) , j) end for sort x in descending order by first component max := log p(φ = 0|ei ) , arg := 0, sum := 0 for f = 1 to J u(k) (i, j) := u(k) (i, j) + δk y end for return a(K) a(k) (i, j) − z(k) (i, j)\ sum := sum + x[f, 1] if sum + log p(φ = f |ei ) &gt; max max := sum + log p(φ = f |ei ) arg := f end if Figure 1: The dual decomposition algorithm for the fertility HMM, where δk is the step size at the kth iteration for 1 ≤ k ≤ K , and K is the max number of iterations.</S>
			<S sid ="61" ssid = "32">matrix.</S>
			<S sid ="62" ssid = "33">Define the functions f and g as end for v := v + max for f = 1 to arg z(i, x[f, 2]) := 1 end for end for return z, v f (a) = J ) j=1 I ( log p(aj |aj−1) + 1 \ 2 log p fj eaj Figure 2: Algorith m for finding the arg max and max of g, the fertility related compone nt of the dual decompo sition objective . g(z) = ) ( log p(φ (zi)|ei) + i=1 J ) z(i, j) log p(f |e ) &apos; French word to have zero or many generator s. Because assignme nts that are in accordan ce between this model and the HMM will meet the HMM’s 2 j i j=1 Then we want to find arg max f (a) + g(z) a,z subject to the constraints ya(i, j) = z(i, j)∀i, j. Note how this recovers the original objective funcconstraints, the overall dual decomposition algo rithm will return valid assignments, even though individual selections for this model may fail to meet the requirements.</S>
			<S sid ="63" ssid = "34">As the scoring function g can be decomposed into a sum of scores for each row Li gi (i.e., there are no interactions between distinct rows of the matrix) we can maximize each row independently: tion when matching variables are found.</S>
			<S sid ="64" ssid = "35">I I We use the dual decomposition algorithm max ) gi(zi) = ) max gi(zi) from Rush and Collins (2012), reproduced z i=1 z i=1 here in Figure 1.</S>
			<S sid ="65" ssid = "36">Note how the langrangian adds one additional term word, scaled by a value indicating whether that word is aligned in the current position.</S>
			<S sid ="66" ssid = "37">Because it is only added for those words that are aligned, we can merge this with the log p fj eaj terms in both f and g. Therefore, we can solve Within each row, we seek the best of all 2J possible configurations.</S>
			<S sid ="67" ssid = "38">These configurations may be grouped into equivalence classes based on the number of nonzero entries.</S>
			<S sid ="68" ssid = "39">In each class, the max assignment is the one using words with the highest log probabilities; the total score of this assignment is the sum those log probabilities and arg maxa (f (a) + L i,j u(k−1)(i, j)ya(i, j)&apos; us the log probability of that fertility.</S>
			<S sid ="69" ssid = "40">Sorting the ing the standard Viterbi algorithm.</S>
			<S sid ="70" ssid = "41">The g function, on the other hand, does not have a commonly used decomposition structure.</S>
			<S sid ="71" ssid = "42">Luckily we can factor this maximization into pieces that allow for efficient computation.</S>
			<S sid ="72" ssid = "43">Note that g sums over arbitrary binary matrices.</S>
			<S sid ="73" ssid = "44">Unlike the HMM, where each French word must have exactly one English generator, this maximization allows each scores of each cell in the row in descending order by log probability allows for linear time computation of the max for each row.</S>
			<S sid ="74" ssid = "45">The algorithm described in Figure 2 finds this maximal assignment in O(I J log J ) time, generally faster than the O(I 2J ) time used by Viterbi.</S>
			<S sid ="75" ssid = "46">We note in passing that this maximizer is picking from an unconstrained set of binary matri ces.</S>
			<S sid ="76" ssid = "47">Since each English word may generate as many French words as it likes, regardless of all other words in the sentence, the underlying matrix have many more or many fewer nonzero entries than there are French words.</S>
			<S sid ="77" ssid = "48">A straightforward extension to the algorithm of Figure 2 returns only z matrices with exactly J nonzero entries.</S>
			<S sid ="78" ssid = "49">Rather than maximizing each row totally independently, we keep track of the best configurations for each number of words generated in each row, and then pick the best combination that sums to J : another straightforward exercise in dynamic programming.</S>
			<S sid ="79" ssid = "50">This refinement does not change the correctness of the dual decomposition algorithm; rather it speeds the convergence.</S>
	</SECTION>
	<SECTION title="Fertility distribution parameters. " number = "3">
			<S sid ="80" ssid = "1">Original IBM models used a categorical distribution of fertility, one such distribution for each English word.</S>
			<S sid ="81" ssid = "2">This gives EM a great amount of freedom in parameter estimation, with no smoothing or parameter tying of even rare words.</S>
			<S sid ="82" ssid = "3">Prior work addressed this by using the single parameter Poisson distribution, forcing infrequent words to share a global parameter estimated from the fertility of all words in the corpus (Zhao and Gildea, 2010).</S>
			<S sid ="83" ssid = "4">We explore instead a feature-rich approach to address this issue.</S>
			<S sid ="84" ssid = "5">Prior work has explored feature-rich approaches to modeling the translation distribution (Berg-Kirkpatrick et al., 2010); we use the same technique, but only for the fertility model.</S>
			<S sid ="85" ssid = "6">The fertility distribution is modeled as a log-linear distribution of F , a binary feature set: p(φ|e) ∝ exp (θ · F (e, φ)).</S>
			<S sid ="86" ssid = "7">We include a simple set of features: • A binary indicator for each fertility φ.</S>
			<S sid ="87" ssid = "8">This feature is present for all words, acting as smoothing.• A binary indicator for each word id and fer tility, if the word occurs more than 10 times.</S>
			<S sid ="88" ssid = "9">• A binary indicator for each word length (in letters) and fertility.</S>
			<S sid ="89" ssid = "10">• A binary indicator for each four letter word prefix and fertility.</S>
			<S sid ="90" ssid = "11">Together these produce a distribution that can learn a reasonable distribution not only for common words, but also for rare words.</S>
			<S sid ="91" ssid = "12">Including word length information aids in for languages with Al go rith m AE R (G → E) AE R (E → G) H M M FH M M Vit er bi FH M M Dual de c 2 4 . 0 1 9 . 7 1 8 . 0 2 1 . 8 1 9 . 6 1 7 . 4 Table 1: Experimental results over the 120 evaluation sentences.</S>
			<S sid ="92" ssid = "13">Alignment error rates in both directions are provided here.</S>
	</SECTION>
	<SECTION title="Evaluation. " number = "4">
			<S sid ="93" ssid = "1">We explore the impact of this improved MAP inference procedure on a task in GermanEnglish word alignment.</S>
			<S sid ="94" ssid = "2">For training data we use the news commentary data from the WMT 2012 translation task.1 120 of the training sentences were manually annotated with word alignments.</S>
			<S sid ="95" ssid = "3">The results in Table 1 compare several different algorithms on this same data.</S>
			<S sid ="96" ssid = "4">The first line is a baseline HMM using exact posterior computation and inference with the standard dynamic programming algorithms.</S>
			<S sid ="97" ssid = "5">The next line shows the fertility HMM with approximate posterior computation from Gibbs sampling but with final alignment selected by the Viterbi algorithm.</S>
			<S sid ="98" ssid = "6">Clearly fertility modeling is improving alignment quality.</S>
			<S sid ="99" ssid = "7">The prior work compared Viterbi with a form of local search (sampling repeatedly and keeping the max), finding little difference between the two (Zhao and Gildea, 2010).</S>
			<S sid ="100" ssid = "8">Here, however, the difference between a dual decomposition and Viterbi is significant: their results were likely due to search error.</S>
	</SECTION>
	<SECTION title="Conclusions and future work. " number = "5">
			<S sid ="101" ssid = "1">We have introduced a dual decomposition approach to alignment inference that substantially reduces alignment error.</S>
			<S sid ="102" ssid = "2">Unfortunately the algorithm is rather slow to converge: after 40 iterations of the dual decomposition, still only 55 percent of the test sentences have converged.</S>
			<S sid ="103" ssid = "3">We are exploring improvements to the simple sub-gradient method applied here in hopes of finding faster convergence, fast enough to make this algorithm practical.</S>
			<S sid ="104" ssid = "4">Alternate parameter estimation techniques appear promising given the improvements of dual decomposition over sampling.</S>
			<S sid ="105" ssid = "5">Once the performance issues of this algorithm are improved, exploring hard EM or some variant thereof might lead to more substantial improvements.</S>
			<S sid ="106" ssid = "6">compounding: long words in one language may correspond to multiple words in the other.</S>
			<S sid ="107" ssid = "7">1 www.statmt.org/wmt12/translation-task.html</S>
	</SECTION>
</PAPER>
