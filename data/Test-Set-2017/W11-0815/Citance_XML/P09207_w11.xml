<PAPER>
	<ABSTRACT>
	<SECTION title="10 	100 " number = "1">
			<S sid ="1" ssid = "1">1000 10000 rank(wi) The values of c. / for the 30 most frequent tokens of BNCfrg are listed in Table 3.2.</S>
			<S sid ="2" ssid = "2">The most frequent words in any corpus are generally function words like prepositions, determiners, pronouns and punctuation signs.</S>
			<S sid ="3" ssid = "3">Notice that, as our corpus was not analysed using the tools described in Sect.</S>
			<S sid ="4" ssid = "4">3.1.1, the words the and The are considered as two distinct tokens.</S>
			<S sid ="5" ssid = "5">Also, because of an encoding problem, there are two different apostrophe characters.</S>
			<S sid ="6" ssid = "6">In Sect.</S>
			<S sid ="7" ssid = "7">3.1.3, our goal is to estimate the probability of an arbitrary token or sequence of tokens.</S>
			<S sid ="8" ssid = "8">Therefore, it is useful to study the empirical distribution of the values of function c. /.</S>
			<S sid ="9" ssid = "9">Unlike the heights of humans or the grades of students in a class, the word counts in a corpus are not normally distributed around the mean.</S>
			<S sid ="10" ssid = "10">Instead, they are distributed according to a power law, also known as Zipfian distribution.</S>
			<S sid ="11" ssid = "11">Many other events in the world are distributed according to power laws (Newman 2005).</S>
			<S sid ="12" ssid = "12">In order to illustrate the Zipfian distribution, we will use the rank plot of Fig.</S>
			<S sid ="13" ssid = "13">3.1.</S>
			<S sid ="14" ssid = "14">A rank plot is a graphic where the word counts are sorted in descending order and assigned to their rank positions r , like those in the first column of Table 3.2.</S>
			<S sid ="15" ssid = "15">Formally, the rank r of a given word w can be defined as the value of a bijective function rank.w/ W V ! Œ1::jV j] which assigns a distinct integer to each word respecting the constraint .8w1 ; w2 2 V /Œrank.w1/ &lt; rank.w2 / ” c.w1 / :&gt; c.w2 /].</S>
			<S sid ="16" ssid = "16">Notice that, in the presence of ties, the rank function is not uniquely defined.</S>
			<S sid ="17" ssid = "17">Any valid function respecting the aforementioned constraint could be used.</S>
			<S sid ="18" ssid = "18">Therefore, we assume that lexicographic order is used to assign the ranks of words with identical numbers of occurrences, uniquely defining the rank function.</S>
			<S sid ="19" ssid = "19">The rank plot of Fig.</S>
			<S sid ="20" ssid = "20">3.1 is in logarithmic scale, otherwise it would be impossible to visualise the counts.</S>
			<S sid ="21" ssid = "21">The main characteristic of power laws is that there is a very large number of rare events.</S>
			<S sid ="22" ssid = "22">In BNCfrg, for example, there are 21,423 word types occurring only once in the corpus,10 that is, almost 57 % of the vocabulary.</S>
			<S sid ="23" ssid = "23">On the opposite end of the range, frequent words correspond to a tiny portion of the vocabulary.</S>
			<S sid ="24" ssid = "24">The graphic shows that the number of words decreases exponentially in the ranked vocabulary.</S>
			<S sid ="25" ssid = "25">In other words, Zipf ’s law states that the number of occurrences of a type in the corpus is inversely proportional to its position in the rank.</S>
			<S sid ="26" ssid = "26">A derived property is that the size of the vocabulary increases logarithmically with the size of the corpus.</S>
			<S sid ="27" ssid = "27">This is exemplified by plotting the number of types in a corpus as its size, that is, the number of tokens, increases, on shown in Figure 3.2.</S>
			<S sid ="28" ssid = "28">While the number of tokens increases linearly, the number of types increases fast at the beginning and much slower afterwards.</S>
			<S sid ="29" ssid = "29">This happens because, as the sample increases, many common words tend to be repeated while new words become harder to find.</S>
			<S sid ="30" ssid = "30">One could assume that, if an infinitely large corpus (the sample) was available, the size of the vocabulary would stop growing at some point, converging to the total number of words used in that language (the population).</S>
			<S sid ="31" ssid = "31">Fig.</S>
			<S sid ="32" ssid = "32">3.2 Tokens in the corpus versus types in the vocabulary 10 A word occurring once in the corpus is called a hapax, from the Greek hapax legomena.</S>
			<S sid ="33" ssid = "33">The statistics of a corpus depend on its size, language, genre, domain and sublanguage.</S>
			<S sid ="34" ssid = "34">Nonetheless, the logarithmic relation between the number of word tokens and the number of different word types holds as well as Zipf ’s law.</S>
			<S sid ="35" ssid = "35">This means that, in general, around half of the words in a corpus occur only once.</S>
			<S sid ="36" ssid = "36">Distributions like these are called large number of rare events (LNRE).</S>
			<S sid ="37" ssid = "37">When the underlying model is a LNRE distribution, specific statistical tools able to deal with sparse data must be employed.</S>
			<S sid ="38" ssid = "38">Besides, one needs to be careful because standard assumptions for a sample drawn from a population normally distributed do not apply to corpora.</S>
			<S sid ="39" ssid = "39">Operations like parameter estimation, hypothesis testing and the like need to be adapted when working with LNRE distributions.</S>
			<S sid ="40" ssid = "40">This has an impact on the types of lexical association measures that can be used for unsupervised MWE acquisition (Sect.</S>
			<S sid ="41" ssid = "41">3.1.4).</S>
			<S sid ="42" ssid = "42">For further details, one may refer to Baayen (2001).</S>
			<S sid ="43" ssid = "43">3.1.3 N -Grams, Language Models and Suffix Arrays When we consider word sequences, each token in the corpus is represented as wi , where the subscript i stands for its position with respect to other tokens.</S>
			<S sid ="44" ssid = "44">For instance, a sequence of n consecutive tokens in the corpus can be represented as 11 w1w2 ::: wn1wn . Such contiguous sequences are called n-grams.</S>
			<S sid ="45" ssid = "45">We use the abbreviated notation wj to represent an n-gram formed by j - i C 1 words wi through wj . By extension, the function c. / can be applied to n-grams and returns the number of times they occur in a corpus.</S>
			<S sid ="46" ssid = "46">For example, cBNCfrg .I will be/ D 5 because this 3-gram occurs 5 times in the corpus BNCfrg.</S>
			<S sid ="47" ssid = "47">An language model (LM) is a probabilistic model that estimates to what extent a group of words belongs to a certain language.</S>
			<S sid ="48" ssid = "48">An n-gram LM is a set of probability density functions that estimate the probabilities of any n-gram in a language.</S>
			<S sid ="49" ssid = "49">For instance, an n-gram like I will be paying is more plausible in English than will paying I be, thus the model will assign it a higher probability.</S>
			<S sid ="50" ssid = "50">LMs are widely employed not only in MWE acquisition but in many other NLP applications like speech recognition, OCR, spell checking, MT. They are often used to choose among several possible outputs because they simulate grammatical and semantic preferences in sentences.</S>
			<S sid ="51" ssid = "51">One way to estimate n-gram probabilities is to learn them from a sample of language: the training corpus.</S>
			<S sid ="52" ssid = "52">We can count all the n-grams in the training corpus and then return as a probability estimates the relative frequencies of the n-grams.</S>
			<S sid ="53" ssid = "53">For instance, according to Table 3.1, the BNCfrg corpus contains 414;602 tokens or unigrams.</S>
			<S sid ="54" ssid = "54">If we use BNCfrg as training corpus, the probability estimate p of the 11 Discontiguous sequences are sometimes referred to as flexigrams, that is, n-grams with gaps..</S>
			<S sid ="55" ssid = "55">unigram Mary is p.Mary/ 18 and the probability estimate of the 3-gram I 414;602 c.I will be/ 5 will be is p.I will be/ � N D 414;602 . Although a good idea in theory, it is not feasible to store all the counts for each distinct n-gram of arbitrary length (1 to N ) in a large corpus, as the number of n-grams grows quickly.</S>
			<S sid ="56" ssid = "56">For instance, BNCfrg contains 37,651 unigrams, 210,183 2-grams, 346,450 3-grams and so on.</S>
			<S sid ="57" ssid = "57">In order to solve this practical problem, we first apply the probability chain rule, that is, for an arbitrary n-gram: n p.wn / D p.w1/ p.w2 jw1/ p.w3 jw2/ ::: p.wn jwn1 / D p.w1 / Y p.wk jwk1 / 1 1 1 kD2 1 (3.1) We further simplify calculations by applying the Markov assumption in order to approximate the conditional probability of a token given a short history instead of using the whole preceding sequence.</S>
			<S sid ="58" ssid = "58">That is, given m &gt; 1 as the fixed maximum size of n-gram that we can store, we ignore all words preceding wkmC1.</S>
			<S sid ="59" ssid = "59">The order m of the model typically ranges from 2 to 5 according to the target application.</S>
			<S sid ="60" ssid = "60">This simplification assumes that the presence of a word only depends on a short number of words to the left of it, completely ignoring the right context.</S>
			<S sid ="61" ssid = "61">p.wk jwk1/ � p.wk jwk1 / (3.2) 1 k-mC1 For instance, let us consider a model of order m D 2, built using the BNCfrg corpus as training data.</S>
			<S sid ="62" ssid = "62">Given this model, we want to estimate the probability of the 4-gram I will be visiting.</S>
			<S sid ="63" ssid = "63">Thus, p.I will be visiting/ D p.I/ p.willjI/ p.bej will/ p.visitingjbe/ D c.I/ c.I will/ c.will be/ c.be visiting/ 2;816 34 312 1 N c.I/ c.will/ c.be/ D 414;602 2;816 1;093 2;535 D 0:000000009.</S>
			<S sid ="64" ssid = "64">This model uses the principle of maximum likelihood estimation (MLE), that is, it assumes that the sample is the population.</S>
			<S sid ="65" ssid = "65">In other words, the chosen model parameters are those that maximise the likelihood of the observed sample.</S>
			<S sid ="66" ssid = "66">The problem with MLE is that it does not take into account n-grams that were not observed in the corpus as a side effect of sampling a very large event space.</S>
			<S sid ="67" ssid = "67">In other words, no matter how large a training corpus is, a large number of perfectly valid n-grams will surely be missing from the model, thus yielding zero probability for the whole product.</S>
			<S sid ="68" ssid = "68">In order to solve this problem, current LM tools implement sophisticated smoothing techniques.</S>
			<S sid ="69" ssid = "69">The idea of smoothing is to assign some probability mass to unseen events, discounting it from the probabilities of seen n-grams (Chen and Goodman 1999; Good 1953; Kneser and Ney 1995).</S>
			<S sid ="70" ssid = "70">Furthermore, it is also possible to use backoff in order to estimate the probabilities of larger unseen n-grams by combining the probabilities of smaller n-grams contained in them.</S>
			<S sid ="71" ssid = "71">Because such techniques are rarely employed in empirical MWE acquisition from corpora, we Fig.</S>
			<S sid ="72" ssid = "72">3.3 (a) Example of suffix tree.</S>
			<S sid ="73" ssid = "73">(b) Example of suffix array will not discuss their details here.</S>
			<S sid ="74" ssid = "74">One of the rare works concerning smoothing for MWE acquisition is that of Lapata (2002).</S>
			<S sid ="75" ssid = "75">When dealing with very large corpora, it is crucial to have efficient access to n-gram counts in order to estimate their probabilities.</S>
			<S sid ="76" ssid = "76">The intuition behind quick access to n-gram counts in a corpus is to organise the n-grams in a data structure that allows fast search (that is, direct access or binary search).</S>
			<S sid ="77" ssid = "77">N -gram models with a fixed order m can be represented using structures based on suffix trees.</S>
			<S sid ="78" ssid = "78">A suffix tree is a representation in which each edge is labelled with a word and each node contains a count.</S>
			<S sid ="79" ssid = "79">Concatenating the words on the edges of a path from the root to a node ni generates an n-gram whose count is stored in ni . For example, in Fig.</S>
			<S sid ="80" ssid = "80">3.3a, the path I will be leads to a node containing the value of c.I will be/ D 5.</S>
			<S sid ="81" ssid = "81">In order to optimise the access to the child nodes, it is possible to build hash tables for constant access or ordered lists for binary search.</S>
			<S sid ="82" ssid = "82">While suffix trees are appropriate for LMs with fixed order, counting arbitrarily long n-grams requires another kind of data structure.</S>
			<S sid ="83" ssid = "83">A suffix array is an efficient structure to represent n-grams of arbitrary size (Manber and Myers 1990; Yamamoto and Church 2001).</S>
			<S sid ="84" ssid = "84">The corpus is viewed as an array of N words w1 to wN . Each word wi is the beginning of a corpus suffix of size Ni C 1, for instance, wN2 wN1 wN is a suffix of size 3.</S>
			<S sid ="85" ssid = "85">The trick is that the list containing all the N suffixes is sorted in lexicographic order.</S>
			<S sid ="86" ssid = "86">Therefore, one can perform binary search in order to locate the first and the last positions starting with the searched n-gram.</S>
			<S sid ="87" ssid = "87">For example, in Fig.</S>
			<S sid ="88" ssid = "88">3.3b we represent part of a suffix array of BNCfrg.</S>
			<S sid ="89" ssid = "89">If we want to know how many times the n-gram I will be occurs in the corpus, we will perform two binary searches in O.log N/ time to find the first index F and last index L in the array containing a suffix which starts with the searched n-gram.</S>
			<S sid ="90" ssid = "90">The number of occurrences of the n-gram is then simply L - F C 1 D 108104 C 1 D 5.</S>
			<S sid ="91" ssid = "91">If now we need to obtain the count for I will, we repeat the procedure and find 133100 C 1 D 34.</S>
			<S sid ="92" ssid = "92">Table 3.3 Top-15 most frequent n-grams in BNCfrg r c.w 1 w2 / w1 w2 c.w 1 / c.w 2 / E.w 1w2 /t sco re 1 3,06 0 of the 11,9 23 20,7 65 597.</S>
			<S sid ="93" ssid = "93">2 44.5 2 1,78 8 in the 6,7 58 20,7 65 338.</S>
			<S sid ="94" ssid = "94">5 34.3 3 1,13 9 to the 9,8 30 20,7 65 492.</S>
			<S sid ="95" ssid = "95">3 19.2 4 77 2 on the 2,5 50 20,7 65 127.</S>
			<S sid ="96" ssid = "96">7 23.2 5 73 8 and the 9,7 71 20,7 65 489.</S>
			<S sid ="97" ssid = "97">4 9.2 6 73 3 to be 9,8 30 2,5 35 60.</S>
			<S sid ="98" ssid = "98">1 24.9 7 68 7 for the 3,2 48 20,7 65 162.</S>
			<S sid ="99" ssid = "99">7 20.0 8 52 6 at the 1,7 82 20,7 65 89.</S>
			<S sid ="100" ssid = "100">3 19.0 9 52 5 by the 1,8 99 20,7 65 95.</S>
			<S sid ="101" ssid = "101">1 18.8 10 50 0 that the 4,3 51 20,7 65 217.</S>
			<S sid ="102" ssid = "102">9 12.6 11 47 3 of a 11,9 23 7,3 46 211.</S>
			<S sid ="103" ssid = "103">3 12.0 12 45 7 fro m the 1,5 32 20,7 65 76.</S>
			<S sid ="104" ssid = "104">7 17.8 13 45 6 with the 2,4 05 20,7 65 120.</S>
			<S sid ="105" ssid = "105">5 15.7 14 36 9 it is 3,0 64 4,0 29 29.</S>
			<S sid ="106" ssid = "106">8 17.7 15 36 2 in a 6,7 58 7,3 46 119.</S>
			<S sid ="107" ssid = "107">7 12.7 In our implementation (see Sect.</S>
			<S sid ="108" ssid = "108">5.1.2) each suffix is represented with an integer index pointing to the position in the corpus where it starts, thus optimising memory use.</S>
			<S sid ="109" ssid = "109">Thus, a suffix array uses a constant amount of memory with respect to N : if every word and every word position in the corpus is encoded as a 4-byte integer, a suffix array uses precisely 4 2 N bytes, plus the size of the vocabulary, which is generally very small if compared to N . 3.1.4 Lexical Association Measures The principle of corpus-based MWE acquisition is that words that form an expression will co-occur more often than if they were randomly combined by a coincidence of syntactic rules and semantic preferences.</S>
			<S sid ="110" ssid = "110">In this context, lexical association measures are applied to n-gram counts in order to estimate how much the occurrences of two or more words depend on each other.12 A simple method to acquire MWEs from corpora is to use ranked n-gram lists.</S>
			<S sid ="111" ssid = "111">For example, Table 3.3 lists the 15 most frequent n-grams of BNCfrg.</S>
			<S sid ="112" ssid = "112">Unfortunately, all of the returned items are uninteresting combinations of function words like determiners the and a, prepositions and auxiliary verbs.</S>
			<S sid ="113" ssid = "113">Moreover, the list only contains 2-grams and no 3-grams and larger n-grams.</S>
			<S sid ="114" ssid = "114">This is a consequence of the fact that the count of a larger n-gram will always be less than or equal to 12 The term association measure is standard in MWE acquisition, but it would be more appropriate.</S>
			<S sid ="115" ssid = "115">to talk about association scores instead, since not all the scores discussed here are proper measures.</S>
			<S sid ="116" ssid = "116">the count of the n-grams that it contains, thus biasing the acquisition towards short n-grams.</S>
			<S sid ="117" ssid = "117">We could solve these problems by separately acquiring n-grams of different lengths, using regular expression patterns to filter out sequences of function words contained in stopword lists or matching unwanted POS tags.</S>
			<S sid ="118" ssid = "118">This is actually performed in many real-world systems, specially for automatic terminology acquisition, with surprisingly good results (Justeson and Katz 1995; Ramisch 2009).</S>
			<S sid ="119" ssid = "119">However, if we are to acquire general MWEs (and not only multiword terms), we need a more sophisticated way to tell whether an n-gram is just a random co-occurrence of frequent words or whether it presents some statistical idiomaticity.</S>
			<S sid ="120" ssid = "120">A common preprocessing step when dealing with n-gram counts is to eliminate all combinations that occur less than a fixed threshold.</S>
			<S sid ="121" ssid = "121">This is important because statistics tend not to be reliable in low frequency ranges.</S>
			<S sid ="122" ssid = "122">As the counts decrease, it is impossible to distinguish statistically significant events from coincidences due to sampling error.</S>
			<S sid ="123" ssid = "123">Unfortunately, there is no rule or algorithm for determining the value of such threshold except common sense and trial and error.</S>
			<S sid ="124" ssid = "124">For example, statistics calculated over hapax are surely unreliable while setting the threshold at 100 occurrences will probably result in too little data (if any).</S>
			<S sid ="125" ssid = "125">3.1.4.1 Measures Based on Hypothesis Testing Now, in order to investigate whether an n-gram is a MWE, let us assume that words are combined randomly.</S>
			<S sid ="126" ssid = "126">That is, the occurrence of words at given positions are independent events.</S>
			<S sid ="127" ssid = "127">This hypothesis does not hold, otherwise languages would have no grammar.</S>
			<S sid ="128" ssid = "128">Nonetheless, it provides a powerful way to test the association strength between words.</S>
			<S sid ="129" ssid = "129">By the definition of statistical independence, if the occurrence of a word w2 does not depend on the occurrence of the preceding word w1 , then we expect that the joint probability of the 2-gram is the product of the probabilities of the individual events, that is: p.w2 / D p.w1/ p.w2 / (3.3) For the sake of simplicity, let us use MLE estimators for the probabilities of the c.wi / individual words through relative frequencies, that is p.wi / D . Then, for an.</S>
			<S sid ="130" ssid = "130">N arbitrary n-gram wn , the expected relative frequency would be the probability: p.wn / D c.w1 / N c.w2 / N ::: c.wn / N D c.w1 / c . w 2 / : : : c . w n / N n (3.4) We can scale this probability estimate by the approximate number of n-grams in the corpus (N - n C 1 � N ) to obtain the expected count E.wn /: E.wn / D N c.w1 / c.w2 / ::: c.wn / N n c.w1 / c.w2 / ::: c.wn / D N n-1 (3.5) Column 6 of Table 3.3 shows the values of E.wn / for the top-30 most frequent 2-grams in BNCfrg.</S>
			<S sid ="131" ssid = "131">Combinations of frequent words are expected to occur frequently while combinations involving rarer words are expected to occur less.</S>
			<S sid ="132" ssid = "132">One way to test whether the difference between the expected count E. / and the observed count c. / is statistically significant is to use a hypothesis test.</S>
			<S sid ="133" ssid = "133">Our null hypothesis H0 is that an n-gram will occur as many times as we expect it to occur, and our alternative hypothesis H1 is that the observed number of occurrences c.wn / is actually greater than the expected number of occurrences: H0 W c.wn / D E.wn / 1 1 H1 W c.wn /&gt; E.wn / 1 1 Our goal is to reject this null hypothesis using a one-tailed test.</S>
			<S sid ="134" ssid = "134">If we can reject H0 at some significance level, this means that the number of occurrences of the n- gram is above what we expected, and we have good chances of finding a MWE.</S>
			<S sid ="135" ssid = "135">In theory, we should perform an exact test, using the binomial or Poisson test statistics,13 that model the discrete distribution of n-gram counts (Evert 2004).</S>
			<S sid ="136" ssid = "136">For instance, a binomomial test statistic uses the binomial distribution to estimate the probability of observing c.wn / or more occurrences of an n-gram given its expected n 1 1 N N N ! E.wn / k E.wn / N -k p.X &gt; c.wn // D X kDc.wn / k 1 N 1 1 N (3.6) In practice, however, this test statistic is computationally costly.</S>
			<S sid ="137" ssid = "137">The number of terms in the sum, N - c.wn / C 1 is prohibitive in most cases because N is much larger than c.wn /.</S>
			<S sid ="138" ssid = "138">Moreover, for large values of N , the binomial distribution can be approximated by a normal distribution.</S>
			<S sid ="139" ssid = "139">As a consequence, it is possible use a z test n n statistic instead of the exact binomial test statistic: p.X &gt; c.wn // D c.w1 /-E.w1 / . 1 E.wn / A very common test statistic employed in MWE acquisition is Student’s t test statistic, a heuristic variation of the z test statistic in which the variance of the sample is estimated through its observed count c.wn / rather than from the expected count E.wn /.</S>
			<S sid ="140" ssid = "140">This approximation holds if we consider the corpus as a sequence of randomly generated n-grams and a Bernoulli trial that assigns 1 to the occurrence of wn and 0 otherwise.</S>
			<S sid ="141" ssid = "141">Then, the probability p of generating 1 is the mean of the sample, xN D p D c .wn / . For small values of p, s p .1 p/ p, thus the variance of the sample s2 is equivalent to the mean xN . Finally, the estimated theoretical mean Jl is the normalised estimated count E.w1 / , thus yielding the following formulation for the t test statistic: 13 The test statistic is a random variable with a known distribution, from which we can obtain the.</S>
			<S sid ="142" ssid = "142">p-value.</S>
			<S sid ="143" ssid = "143">If the p-value is below a certain significance level, we can reject the null hypothesis.</S>
			<S sid ="144" ssid = "144">c.wn / E.wn / x - Jl 1 1 c.wn / - E.wn / t D N N N 1 1 D D (3.7) q s2 N q c.wn / N 2 pc.wn / As we have seen in Sect.</S>
			<S sid ="145" ssid = "145">3.1.2, word counts do not follow a normal distribution, but they can be modelled using a power law distribution, and the same applies to n-grams.</S>
			<S sid ="146" ssid = "146">As a consequence, from a theoretical perspective, the use of Student’s t test statistic here does not make sense as it assumes that the c.wn / follows a normal distribution.</S>
			<S sid ="147" ssid = "147">Nonetheless, most of the time in MWE acquisition, our goal is to rank candidate n-grams according to their association strength.</S>
			<S sid ="148" ssid = "148">Thus, the value of the t test statistic is not used to calculate the p-value, but is used directly as a ranking criterion.</S>
			<S sid ="149" ssid = "149">This ranking criterion is called the t-score, and it is interpreted as follows: a large value means strong word association and thus a potential MWE, a small value means that n-gram is more likely to be a random word combination, thus uninteresting for MWE acquisition.</S>
			<S sid ="150" ssid = "150">Notice that, for the examples in Table 3.3, the statistic is larger when the combination is composed of rarer words.</S>
			<S sid ="151" ssid = "151">3.1.4.2 Measures Based on Pointwise Comparisons The t-score is an example of lexical association measure (AM), that is, a numerical score that estimates the degree of dependence or association strength between the number of occurrences of the n-gram and the number of occurrences of the individual words that compose it.</S>
			<S sid ="152" ssid = "152">Similarly to n-gram counts, when more than one corpus is involved, we will subscribe the name of the association measure with the name of the corpus from which the counts used to calculate it were obtained, like in t-scoreBNCfrg . In addition to the t-score, there are many other proposed measures in the literature, not necessarily based on hypothesis testing.</S>
			<S sid ="153" ssid = "153">Church and Hanks (1990), for instance, suggest to use pointwise mutual information (pmi), a notion coming from information theory which estimates the predictability of a word given the preceding words.</S>
			<S sid ="154" ssid = "154">In other terms, pmi quantifies the discrepancy between the observed count and the expected count: c.wn / pmi D log2 1 1 (3.8) This AM has its maximal value when the two words only occur together, that is c.w1 / D ::: D c.wn / D c.wn /.</S>
			<S sid ="155" ssid = "155">One disadvantage of pmi is that there is no lower bound for its value, since log 0 is undefined.</S>
			<S sid ="156" ssid = "156">Another disadvantage is that this score requires hard frequency thresholds, as it overestimates the importance of rare n-grams.</S>
			<S sid ="157" ssid = "157">For instance, the maximal value can be obtained for any n-gram with c.w1 / D ::: D c.wn / D c.wn / D 1.</S>
			<S sid ="158" ssid = "158">Another commonly employed AM is Dice’s coefficient, a classical score used in information retrieval to calculate the similarity between two sets.</S>
			<S sid ="159" ssid = "159">The original version of Dice’s coefficient divides the size of the intersection between n sets (scaled by n) by the sum of their individual sizes.</S>
			<S sid ="160" ssid = "160">In the case of n-grams, we adapt this measure to compare the n-gram count (intersection between all words) with the sum of the counts of the individual words contained in it: n c.wn / dice D 1 i D1 c.wi / (3.9) These scores are applicable to arbitrary-length n-grams, but they only take into account the observed number of occurrences c.wn /.</S>
			<S sid ="161" ssid = "161">In spite of their simplicity, they are quite popular in MWE acquisition and in other NLP tasks.</S>
			<S sid ="162" ssid = "162">3.1.4.3 Measures Based on Contingency Tables Nonetheless, more robust and theoretically sound AMs exist for the special case of 2-grams.</S>
			<S sid ="163" ssid = "163">These measures are based on contingency tables, that is, a representation like the one showed in Table 3.4, in which we consider the occurrence of two words as two random variables.</S>
			<S sid ="164" ssid = "164">We denote as :wi the occurrence of any word different from wi . Notice that all the cell values are derived from the count of the 2-gram c.w1 w2 /, the individual word counts c.w1 /, c.w2 / and the total number of tokens in the corpus N . The values in the last row represent the sum of the values of the inner cells, and analogously for the last column.</S>
			<S sid ="165" ssid = "165">These are often called marginal counts because they are written in the margins of the contingency table.</S>
			<S sid ="166" ssid = "166">The value of the cell in the last row and column corresponds the number of elements in the sample N , and is equivalent to the sum of the marginal counts in both directions.</S>
			<S sid ="167" ssid = "167">For every cell in the contingency table, it is possible to calculate the equivalent expected value if the occurrences of the two words were independent events, as follows: 8wi 2 fw1; :w1 g; 8wj 2 fw2; :w2 g; E.wi wj / D c.wi / c.wj / (3.10) N Table 3.4 Contingency table for two random variables: the occurrence of the first word w1 and the occurrence of the second word w2 , :wi denotes the occurrence of any word except wi w2 :w2 w1 c.w 1w2 / c.w 1 :w2 / D c.w1 / - c.w1 w2 / c.w1 / :w1 c.: w1w 2 / D c.w2 / - c.w1 w2 / c.: w1 :w2 / D N - c.w1 / - c.w2 / C c.w1 w2 / c.: w1 / D N - c.w1 / c.w 2/ c.: w2 / D N - c.w2 / N We can employ the X 2 test statistic in order to estimate whether the difference between observed and expected contingency tables is statistically significant, as we did for the count c.wn /.</S>
			<S sid ="168" ssid = "168">The X 2 test statistic is a scaled mean squared error measure between observed and expected cell values.</S>
			<S sid ="169" ssid = "169">That is, for all values of wi 2 fw1; :w1 g and wj 2 fw2; :w2g, X 2 D X wi ;wj Œc.wi wj / - E.wi wj /]2 E.wi wj / (3.11) The X 2 test statistic for two random variables has an asymptotic x2 distribution with one degree of freedom.</S>
			<S sid ="170" ssid = "170">Thus, it is possible to obtain the p-value which, if sufficiently small, indicates a significant difference between the tables.</S>
			<S sid ="171" ssid = "171">However, as for the t test, usually the test statistic is considered by itself as a ranking criterion.</S>
			<S sid ="172" ssid = "172">A very popular AM based on contingency tables is the log-likelihood ratio (ll).</S>
			<S sid ="173" ssid = "173">It was proposed for the first time for MWE acquisition by Dunning (1993).</S>
			<S sid ="174" ssid = "174">This measure is preferable over X 2 because, for small samples with LNRE distributions, it provides more accurate association estimators, as demonstrated through numerical simulation by Dunning (1993).</S>
			<S sid ="175" ssid = "175">The simplified version of the ll AM is: ll D 2 X c.wi wj / log wi ;wj c.wi wj / E.wi wj / (3.12) This measure has the advantage that, in addition to being theoretically sound, numerically simple and robust to low frequencies, it has a simple interpretation.</S>
			<S sid ="176" ssid = "176">Its value equals the number of times the 2-gram is more likely under the hypothesis that the words are not independent than the individual counts would suggest.</S>
			<S sid ="177" ssid = "177">While on the one hand ll is robust and theoretically sound, on the other hand it is only applicable to the case where n D 2.</S>
			<S sid ="178" ssid = "178">Extensions to larger n-grams, although possible, are far from being intuitive (see the documentation of the NSP package, described in Sect.</S>
			<S sid ="179" ssid = "179">3.2.3.1, for an example).</S>
			<S sid ="180" ssid = "180">3.1.4.4 Other Measures There are numerous AMs available for MWE acquisition.</S>
			<S sid ="181" ssid = "181">Pecina (2008) presentsa table containing 84 measures among which some are rank-equivalent to each other.</S>
			<S sid ="182" ssid = "182">Hoang et al.</S>
			<S sid ="183" ssid = "183">(2009) propose and evaluate the adaptation of traditional AMs for word pairs in which one word is very frequent and the other is rather rare, like it is the case for English phrasal verbs formed by rare verbs (e.g., nail) with frequent prepositions and adverbs (e.g., down).</S>
			<S sid ="184" ssid = "184">Table 3.5 shows the top-15 n-grams acquired from BNCfrg as ranked by some of the AMs presented here.</S>
			<S sid ="185" ssid = "185">A threshold of at least 3 occurrences was set to reduce noise.</S>
			<S sid ="186" ssid = "186">The first measure, the t-score, seems to retrieve rather long specialised MWEs like proper names (Unix System Laboratories Inc) and terminological Table 3.5 Top-15 n-grams (2–5) extracted from BNCfrg and ranked according to AMst sco re pmi dic e ll Net earn ings per shar e amo unte d of the CH AN CE RY DIV ISI ON of the repo rted first quar ter net prof it in the hom ocli nic orbi ts in the Mic roso ft Cor p ’s Win dow s NT , and Los Ang eles , but (7) mm Hg to be You rs sinc erel y to be or fum e or othe r imp urit y , but Gre enh ouse Effe ct I ’m earn ings per shar e amo unte d to on the Hon g Kon g have been 7 ) mm Hg in for the gon na do n’t dust or fum e or othe r .’ inter alia , and has repo rted first quar ter net to the Kh mer Rou ge will be Œ CH AN CER Y DIV ISI ON ] at the Inla nd Rev enu e the the Inc has repo rted first quar ter by the Sri Lan ka per cent ; Œ 199 1 ] 2 fro m the Cru z Ope ratio n , , N C V O it is per cent has been Uni x Syst em Lab orat orie s Inc will be Mol ecul ar biol ogy on the you ’re gon na get it’s Win ston Chu rchil l the . phraseology (reported first quarter net profit).</S>
			<S sid ="187" ssid = "187">The list illustrates one of the problems with n-gram based methods: the extraction of nested expressions, that is, a shorter expression like first quarter contained in a larger one like first quarter net profit.</S>
			<S sid ="188" ssid = "188">Delimiting the borders of a MWE is a current challenge in acquisition tools and methods.</S>
			<S sid ="189" ssid = "189">The dice coefficient, on the other hand, retrieves shorter n-grams among which we find many MWE types like proper names (Sri Lanka, Winston Churchill), noun compounds (Greenhouse Effect, molecular biology), formulaic sequences (Yours sincerely) and fixed expressions (per cent, inter alia).</S>
			<S sid ="190" ssid = "190">Both t-score and dice tend to retrieve rarer sequences, which only occur three to four times in the corpus.</S>
			<S sid ="191" ssid = "191">The other two measures seem to fail in extracting any interesting MWE, as they give much weight to frequent combinations of function words.</S>
			<S sid ="192" ssid = "192">The ll score retrieves some cases of rare double commas or double the determiners.</S>
			<S sid ="193" ssid = "193">Most of the applications of pmi and ll in the literature are targeted, as these AMs are used to classify possible collocates for a given fixed word, and not to blindly acquire unknown MWEs from a corpus (Dunning 1993; Church and Hanks 1990).</S>
			<S sid ="194" ssid = "194">The unfortunate reality in AMs for MWE acquisition is that sometimes the most theoretically sound measures perform worse than intuitive heuristics.</S>
			<S sid ="195" ssid = "195">This example is an illustration of how AMs work and shows that their results are complementary, suggesting that their combination should be envisaged for broad coverage acquisition.</S>
			<S sid ="196" ssid = "196">Although there is some published work on fair comparisons among AMs (Pearce 2002; Evert and Krenn 2005; Wermter and Hahn 2006; Schone and Jurafsky 2001), this falls out of the scope of our work and is not the goal of our example.</S>
			<S sid ="197" ssid = "197">Moreover, the measures have different weaknesses: some overestimate the importance of rare n-grams while others are not capable of dealing with frequent items.</S>
			<S sid ="198" ssid = "198">Thus, different count thresholds should be applied for each AM, specially for such a small corpus as the BNCfrg.</S>
			<S sid ="199" ssid = "199">In addition, further cleaning of function words and punctuation is an easy step that should be performed in any case.</S>
			<S sid ="200" ssid = "200">Besides association measures, there are also other types of statistical measures that can be used as evidence for MWE discovery in corpora.</S>
			<S sid ="201" ssid = "201">Pecina (2005), for example, discovered that context measures that consider the adjacent words of the n-grams are more adequate to acquire idiomatic expressions.</S>
			<S sid ="202" ssid = "202">In terminology acquisition, contrastive measures like C-NC and csMWE are employed as a way of verifying the pertinence of the n-gram to the target domain (Frantzi et al. 2000; Bonin et al. 2010a).</S>
			<S sid ="203" ssid = "203">These measures estimate the difference between the occurrences of an n-gram in a specialised corpus and in a generic corpus (also called the contrastive corpus).</S>
			<S sid ="204" ssid = "204">They are recommended to identify terms that occur frequently in a specialised corpus but not in general language (see Sect.</S>
			<S sid ="205" ssid = "205">5.1.2.4) For further material on AMs, please refer to Evert (2004), Seretan (2011), and Pecina (2008).</S>
			<S sid ="206" ssid = "206">A summary of common association measures can also be found on Stefan Evert’s website http://www.collocations.de/.</S>
			<S sid ="207" ssid = "207">3.2 Methods for Automatic MWE Acquisition.</S>
			<S sid ="208" ssid = "208">The tasks involved in the computational treatment of MWEs have been structured by the organisers of the 2009 MWE workshop (Anastasiou et al. 2009) as follows.</S>
			<S sid ="209" ssid = "209">• Identification (or acquisition).</S>
			<S sid ="210" ssid = "210">Given a text as input, try to locate the interesting multiword units in it.</S>
			<S sid ="211" ssid = "211">• Interpretation.</S>
			<S sid ="212" ssid = "212">Given a multiword unit out of context, try to discover its internal structure both in terms of syntactic and semantic relations.</S>
			<S sid ="213" ssid = "213">• Disambiguation.</S>
			<S sid ="214" ssid = "214">Given a multiword unit in its context, try to classify it with respect to a closed set of categories.</S>
			<S sid ="215" ssid = "215">Typically, one tries to distinguish literal from idiomatic uses, but other disambiguation tasks are possible, for instance, distinguishing general-purpose from specialised uses and performing multiword sense disambiguation.</S>
			<S sid ="216" ssid = "216">• Application.</S>
			<S sid ="217" ssid = "217">Given a lexicon of MWEs, try to integrate it in another application such as parsing, information retrieval or MT. Interpretation and disambiguation are similar as both can be modelled as classification tasks.</S>
			<S sid ="218" ssid = "218">However, they are distinct as the former concerns MWE types whereas the latter deals with MWE tokens as they occur in text.</S>
			<S sid ="219" ssid = "219">In addition to the four topics above, we consider an additional task which lies between disambiguation and application, representation: • Representation.</S>
			<S sid ="220" ssid = "220">Given a lexicon containing MWEs (automatically or manually acquired), try to optimise their representation in a given formalism considering their properties and the target application.</S>
			<S sid ="221" ssid = "221">As pointed out in the call for papers of the MWE 2009 workshop14: The above topics largely overlap.</S>
			<S sid ="222" ssid = "222">For example, identification can require disambiguating between literal and idiomatic uses since MWEs are typically required to be non-compositional by definition.</S>
			<S sid ="223" ssid = "223">Similarly, interpreting three-word noun compounds like morning flight ticket and plastic water bottle requires disambiguation between a left and a right syntactic structure, while interpreting two-word compounds like English teacher requires disambiguating between (a) ‘teacher who teaches English’ and (b) ‘teacher coming from England (who could teach any subject, e.g., math)’.</S>
			<S sid ="224" ssid = "224">As a large part of the research developed and presented in this book focuses on the first task, the present section is entirely dedicated to MWE acquisition.</S>
			<S sid ="225" ssid = "225">We start with a summary of related work on monolingual acquisition in Sect.</S>
			<S sid ="226" ssid = "226">3.2.1, and on multilingual acquisition in Sect.</S>
			<S sid ="227" ssid = "227">3.2.2.</S>
			<S sid ="228" ssid = "228">Then, we present a more practical description of tools that perform automatic acquisition, distinguishing between those freely available developed by academic researchers and those which were developed and commercialised by companies.</S>
			<S sid ="229" ssid = "229">3.2.1 Monolingual Methods In this section, we discuss some relevant papers on monolingual MWE acquisition methods.</S>
			<S sid ="230" ssid = "230">The references discussed here are complemented by the work that has been developed for other MWE tasks (Sect.</S>
			<S sid ="231" ssid = "231">3.3).</S>
			<S sid ="232" ssid = "232">One of the goals of monolingual MWE acquisition techniques is to help and speed up the creation of lexical resources such as printed or machine-readable dictionaries and thesauri containing multiword entries.</S>
			<S sid ="233" ssid = "233">We distinguish two types of acquisition tasks: • MWE extraction.</S>
			<S sid ="234" ssid = "234">The input is a text and the expected output is a list of MWE candidates found in the text.</S>
			<S sid ="235" ssid = "235">The evaluation can be done on a type basis, as if each expression was an entry of a lexicon, independently of the input corpus.</S>
			<S sid ="236" ssid = "236">In extraction, it is usual to consider two separate steps: (a) candidate extraction and (b) candidate filtering and/or ranking.</S>
			<S sid ="237" ssid = "237">We consider that an MWE candidate is a sequence of words which has some of the characteristics described in Sect.</S>
			<S sid ="238" ssid = "238">2.3 as measured by some objective measure, but that was not yet validated by a manual or automatic evaluation process.</S>
			<S sid ="239" ssid = "239">• In MWE identification.</S>
			<S sid ="240" ssid = "240">The input is a text and the expected output is a markup indicating the places where MWEs occur.</S>
			<S sid ="241" ssid = "241">This may include the use of an existing dictionary or the discovery of new MWEs.</S>
			<S sid ="242" ssid = "242">What makes MWE identification more difficult than simple regular-expression matching is non- adjacency, morphological inflection and ambiguity of some MWEs that can be used both as compositional and idiomatic sequences (e.g., look up as consult 14 http://multiword.sourceforge.net/mwe2009 a dictionary or as staring towards a higher position).</S>
			<S sid ="243" ssid = "243">In MWE identification, a token-based evaluation is required, taking into account the context in which the expression occurs.</S>
			<S sid ="244" ssid = "244">Candidate extraction methods are usually based on some kind of pattern matching, where the patterns range from simple n-grams to structured sequences of part-of-speech tags and syntactic relations.</S>
			<S sid ="245" ssid = "245">The level of linguistic information employed in candidate extraction depends on various factors such as the language, the type and syntactic variability of the target MWEs and the available analysis tools.</S>
			<S sid ="246" ssid = "246">The use of surface forms alone is rare, as generally at least minimal patterns based on stopwords or POS are employed (Gurrutxaga and Alegria 2011).</S>
			<S sid ="247" ssid = "247">However, there might be cases where flat n-gram extraction is required, for instance, when the target MWEs are generic keyphrases for document description and indexation (Silva and Lopes 2010).</S>
			<S sid ="248" ssid = "248">The sliding window method consists of considering as MWE candidates pairs that co-occur in a window of at most w words, thus retrieving discontiguous n-grams (Smadja 1993).</S>
			<S sid ="249" ssid = "249">The extraction of candidates using sliding windows can pose a challenge in terms of computational performance.</S>
			<S sid ="250" ssid = "250">Indeed, optimised data structures and algorithms must be used because the number of possible combinations, even for relatively small sizes of n, explodes with the size of the corpus (Gil and Dias 2003).</S>
			<S sid ="251" ssid = "251">Part of speech sequences are one of the major approaches in candidate extraction because (i) many languages have available push-button POS taggers and (ii) this approach provides good results when the target constructions are relatively rigid in terms of word order, like fixed phrases and nominal MWEs.</S>
			<S sid ="252" ssid = "252">POS sequences have been used originally in multiword terminology acquisition (Justeson and Katz 1995; Daille 2003), but have also been applied to the extraction of other MWE types, specially noun compounds (Vincze et al. 2011).</S>
			<S sid ="253" ssid = "253">Even when dealing with more variable constructions such as verbal expressions, POS tag patterns can be used in the absence of syntactic information (Baldwin 2005; Duran et al. 2011).</S>
			<S sid ="254" ssid = "254">POS patterns can be defined based on various criteria, from linguistic intuition and expert knowledge (Bonin et al. 2010b) to systematic empirical observation of a sample (Duran et al. 2011).</S>
			<S sid ="255" ssid = "255">Sequences of POS can also be automatically learnt from annotated corpora, using the same methodology as for words, that is, by maximising some AM on the extracted POS n-grams (Dias 2003).</S>
			<S sid ="256" ssid = "256">When a parser is available, patterns based on syntactic relations can be used for candidate extraction and/or identification.</S>
			<S sid ="257" ssid = "257">For example, one may retrieve all candidates that are formed by a noun which is the direct object of a verb (take/V DOBJ time/N).</S>
			<S sid ="258" ssid = "258">According to the accuracy of the parser, simple syntactic patterns can be more precise than POS sequences, specially in the extraction of non-fixed MWEs like “true” collocations (Seretan 2008; Seretan and Wehrli 2009; Seretan 2011).</S>
			<S sid ="259" ssid = "259">Lexicons containing more or less refined MWE representations can be used to identify MWEs during parsing, with the advantage of disambiguating instances in context (Bejcˇek et al. 2013; Constant et al. 2013).</S>
			<S sid ="260" ssid = "260">Tree substitution grammars can also be used in order to learn syntactic MWE models from annotated corpora, as in the French version of the Stanford parser (Green et al. 2011).</S>
			<S sid ="261" ssid = "261">Regardless of the syntactic information and labels, structural regularities in parsing trees can also be used to retrieve MWE candidates using a minimal description length algorithm (Martens and Vandeghinste 2010).</S>
			<S sid ="262" ssid = "262">Often, these identification techniques require an annotated corpus with MWE markup.</S>
			<S sid ="263" ssid = "263">While some MWE types may be represented in existing treebanks, in most cases an additional annotation layer must be added (Laporte et al. 2008; Uresova et al. 2013).</S>
			<S sid ="264" ssid = "264">In addition to analysed corpora, other monolingual and multilingual resources can be used for MWE acquisition.</S>
			<S sid ="265" ssid = "265">For instance, by comparing the titles of Wikipedia pages using cross-language links, it is possible to detect multiword titles whose translation in one of the other languages is a single word (Attia et al. 2010).</S>
			<S sid ="266" ssid = "266">Another way to use the web as a source of information for MWE acquisition is to generate candidates according to generic combination rules and further validate them using web search engine hit counts (Villavicencio et al. 2005).</S>
			<S sid ="267" ssid = "267">This is explored in our experiments in Sect.</S>
			<S sid ="268" ssid = "268">6.2.3.2.</S>
			<S sid ="269" ssid = "269">The current trend is the integration of several complementary information sources (including linguistic analysis, statistics, the web) in order to maximise the recall of the extraction (de Medeiros Caseli et al. 2009; Attia et al. 2010).</S>
			<S sid ="270" ssid = "270">More complex candidate extraction methods, not based on pattern matching, have also been proposed.</S>
			<S sid ="271" ssid = "271">The LocalMaxs algorithm, for instance, performs extraction based on the maximisation of an AM applied to adjacent word pairs.</S>
			<S sid ="272" ssid = "272">Thus, it naturally handles nested expressions, extracting maximal sequences that recursively include adjacent words while the overall AM score increases (Silva and Lopes 1999).</S>
			<S sid ="273" ssid = "273">Similarly, a tightness measure is used in a Chinese IR system for the automatic identification, concatenation and optimised querying of strongly associated word sequences (Xu et al. 2010).</S>
			<S sid ="274" ssid = "274">Duan et al.</S>
			<S sid ="275" ssid = "275">(2006) propose a string matching algorithm, inspired by computational biology, to extract sequences that occur recurrently throughout the corpus.</S>
			<S sid ="276" ssid = "276">Sentences are viewed as DNA sequences and a dynamic programming algorithm is used to match corresponding parts for each sentence pair in the corpus, taking into account gaps that represent variable parts of the expression.</S>
			<S sid ="277" ssid = "277">These techniques generally do not distinguish candidate extraction from filtering, performing both simultaneously.</S>
			<S sid ="278" ssid = "278">As for candidate filtering in MWE extraction, some straightforward procedures are the use of stopword lists and of count thresholds to remove candidates for which statistical information is insufficient.</S>
			<S sid ="279" ssid = "279">Lexical association measures like those described in Sect.</S>
			<S sid ="280" ssid = "280">3.1.4 are also widely employed to rank the candidates and keep only those whose association score is above a certain threshold (Evert and Krenn 2005; Pecina 2005).</S>
			<S sid ="281" ssid = "281">When several AMs are available, they can be combined using machine learning, possibly considering additional information coming from auxiliary resources.</S>
			<S sid ="282" ssid = "282">Thus, it is necessary to annotate part of the MWE lists to obtain an annotated extraction dataset (Grégoire et al. 2008).</S>
			<S sid ="283" ssid = "283">Then, a supervised learning method can be used to build a classifier modelling the optimal weights of all the AMs and extra features (Ramisch et al. 2008; Pecina 2008).</S>
			<S sid ="284" ssid = "284">There is a strong predominance of methods based on 2-grams (or more generally on word pairs, not necessarily adjacent) in current techniques for monolingual MWE acquisition.</S>
			<S sid ="285" ssid = "285">This is justified because (i) the majority of the interesting and challenging MWEs are formed by two words and (ii) “experiments with longer expressions would require processing of much larger amount of data and [there is a] limited scalability of some methods to [handle] high order n-grams” (Pecina 2005).</S>
			<S sid ="286" ssid = "286">While this seems like a reasonable justification to keep the methodology simple, it does not correspond to the reality of NLP applications, where many MWEs longer than two words also require proper treatment (Nakov and Hearst 2005; Kim and Nakov 2011).</S>
			<S sid ="287" ssid = "287">Monolingual methods have been developed in several languages and are sometimes language independent.</S>
			<S sid ="288" ssid = "288">The advantage of language-independent methods is that they do not depend on the availability of a specific resource (POS tagger, parser) and can thus be applied to virtually any language, including poorly resourced ones.</S>
			<S sid ="289" ssid = "289">On the other hand, the use of linguistic information generally improves the precision and the coverage of the acquisition.</S>
			<S sid ="290" ssid = "290">Finding an adequate trade-off between language independence and quality when designing a method for monolingual acquisition is a challenging problem.</S>
			<S sid ="291" ssid = "291">However, as MWEs seem to be a universal phenomenon, being present in all human languages, it is important to build methods and evaluate them in multilingual contexts (Seretan and Wehrli 2006).</S>
			<S sid ="292" ssid = "292">3.2.2 Bi- and Multilingual Methods Even though many of the methods described in the previous section can be applied to arbitrary corpora, independently of the language, they are still considered as monolingual methods because the result is a list of MWEs or a marked up text with no cross-lingual correspondences.</S>
			<S sid ="293" ssid = "293">The extraction of bilingual MWEs is a task in which the resulting list of expressions is bilingual, that is, if a candidate is returned in one language, it contains translation links which relate it to its correspondent candidate(s) in the other language(s).</S>
			<S sid ="294" ssid = "294">Hence, bi- and multilingual MWE acquisition is different from language-independent MWE acquisition.</S>
			<S sid ="295" ssid = "295">Existing techniques for bilingual MWE acquisition are frequently based on parallel corpora.</S>
			<S sid ="296" ssid = "296">Automatic word alignment can provide lists of MWE candidates by themselves, as described in de Medeiros Caseli et al.</S>
			<S sid ="297" ssid = "297">(2010).</S>
			<S sid ="298" ssid = "298">They aligned a Portuguese–English corpus in both directions using GIZA++, and then joined the alignments using the grow-diag-final heuristic.</S>
			<S sid ="299" ssid = "299">Word sequences of two or more words on the source side aligned to sequences of one or more words on the target side were filtered using several stopword patterns and the resulting candidates were considered as MWEs.</S>
			<S sid ="300" ssid = "300">The comparison with a simple monolingual n-gram method showed that alignment- based extraction is much more precise, but has very limited recall.</S>
			<S sid ="301" ssid = "301">This technique has been further validated for the acquisition of Portuguese multiword terms in technical and scientific domains (Ramisch et al. 2010).</S>
			<S sid ="302" ssid = "302">Tsvetkov and Wintner (2010) extended this method with two main improvements: (a) they consider all non-bijective 1:1 alignments as candidate sequences and (b) they validate their candidates using an association measure, PMIn , calculated on a large monolingual corpus.</S>
			<S sid ="303" ssid = "303">Furthermore, they combine alignment information with other linguistic sources (Tsvetkov and Wintner 2011).</S>
			<S sid ="304" ssid = "304">They evaluate their method by integrating the automatically extracted bilingual lexicon in a statistical MT system, obtaining small but significant improvements in translation quality.</S>
			<S sid ="305" ssid = "305">Bai et al.</S>
			<S sid ="306" ssid = "306">(2009) present an algorithm capable of mining translations for a given MWE in a parallel aligned corpus.</S>
			<S sid ="307" ssid = "307">Then, the different translations are ranked according to standard association measures in order to choose the appropriate one.</S>
			<S sid ="308" ssid = "308">They integrated this extraction method into the statistical MT system Moses for the English–Chinese language pair, obtaining improved translations when compared to a baseline.</S>
			<S sid ="309" ssid = "309">The automatic discovery of non-compositional compounds from parallel data has been explored by Melamed (1997).</S>
			<S sid ="310" ssid = "310">Considering a statistical translation model, he introduced a feature based on mutual information and proposed an iterative algorithm that retrieves an increasing number of compounds.</S>
			<S sid ="311" ssid = "311">These can in turn be used to improve the quality of the statistical translation system itself.</S>
			<S sid ="312" ssid = "312">Conversely, it has been shown that MWEs can improve the quality of automatic word alignment.</S>
			<S sid ="313" ssid = "313">The EnglishHindi language pair presents large word order variation, and it has been shown that MWE-based features that model compositionality can help reduce alignment error rate (Venkatapathy and Joshi 2006).</S>
			<S sid ="314" ssid = "314">When compared with baseline GIZA++, a system enriched with MWE features obtains significantly lower error rates, from 68.92 to 50.45 %.</S>
			<S sid ="315" ssid = "315">The acquisition of bilingual verbal expressions requires not only the availability of parallel corpora, but also of syntactic analysis of both languages.</S>
			<S sid ="316" ssid = "316">Zarrieß and Kuhn (2009) used syntactically analysed corpora and GIZA++ alignments to extract verb-object pairs from a German–English parallel corpus.</S>
			<S sid ="317" ssid = "317">They considered a candidate as a true MWE if (i) a verb on the source side was aligned to a verb on the target side, (ii) the noun heading the object of the verb on the source side was tagged as a noun on the target side and (iii) there was a syntactic object relation on the target side between the target verb and the target noun.</S>
			<S sid ="318" ssid = "318">Their method retrieves 82.1 % of correct translations, and almost 60 % of translations which can be considered as MWEs.</S>
			<S sid ="319" ssid = "319">Bouamor et al.</S>
			<S sid ="320" ssid = "320">(2012) also perform bilingual MWE acquisition using word alignments, but instead of using them as a starting point, they use them a posteriori, after monolingual extraction has been performed on source and target corpora.</S>
			<S sid ="321" ssid = "321">Therefore, acquiring a bilingual MWE lexicon is seen as an alignment problem between expressions acquired separately in each language.</S>
			<S sid ="322" ssid = "322">Instead of relying on large parallel word-aligned corpora, which are not always available for a given language pair, it is possible to use comparable corpora as a source for acquisition.</S>
			<S sid ="323" ssid = "323">Daille et al.</S>
			<S sid ="324" ssid = "324">(2004) performed multiword term extraction independently in French and in English using comparable corpora in the environmental domain.</S>
			<S sid ="325" ssid = "325">Then, using the distances between the context vectors of the acquired terms, they obtained cross-lingual equivalences that were evaluated against a bilingual terminological dictionary.</S>
			<S sid ="326" ssid = "326">The dictionary reference translation occurred among the top-20 retrieved translations in 47–89 % of the translations, depending on the translation relation type (single word vs multiword).</S>
			<S sid ="327" ssid = "327">The acquisition of bilingual MWEs has been explored more often in the context of machine translation.</S>
			<S sid ="328" ssid = "328">In Sect.</S>
			<S sid ="329" ssid = "329">3.3.4.4, we provide an overview of attempts to integrate MWEs into different MT applications.</S>
			<S sid ="330" ssid = "330">This is further developed in the experiments described in Sect.</S>
			<S sid ="331" ssid = "331">7.2.</S>
			<S sid ="332" ssid = "332">3.2.3 Existing Tools The maturity of a research field depends not only on theoretical models and experimental results, but also on concrete tools and available software on the basis of which it is possible to reproduce results, build extensions and perform systematic evaluations.</S>
			<S sid ="333" ssid = "333">Thus, tools for the automatic acquisition of MWEs are very important for the evolution of this research field.</S>
			<S sid ="334" ssid = "334">Here, we distinguish two types of tools: those which are freely available for the community (Sect.</S>
			<S sid ="335" ssid = "335">3.2.3.1) and those that are either commercial or available in restricted contexts (Sect.</S>
			<S sid ="336" ssid = "336">3.2.3.2).</S>
			<S sid ="337" ssid = "337">3.2.3.1 Freely Available Tools To date, the existing research tools follow the main trends in the area, using linguistic analysis and statistical information as clues for finding MWEs in texts.</S>
			<S sid ="338" ssid = "338">Here, we present a list of freely available tools that can be used mostly for monolingual MWE acquisition.</S>
			<S sid ="339" ssid = "339">1.</S>
			<S sid ="340" ssid = "340">LocalMaxs: http://hlt.di.fct.unl.pt/luis/multiwords/.</S>
			<S sid ="341" ssid = "341">The “Multiwords” scripts are the reference implementation15 of the LocalMaxs algorithm.</S>
			<S sid ="342" ssid = "342">It extracts MWEs by generating all possible n-grams from a sentence and then further filtering them based on the local maxima of a customisable AM’s distribution (Silva and Lopes 1999).</S>
			<S sid ="343" ssid = "343">On the one hand this approach is based purely on word counts and is completely language independent.</S>
			<S sid ="344" ssid = "344">On the other hand, it is not possible to directly integrate linguistic information in order to target a specific type of construction or to remove noisy ungrammatical candidates.16 The tool includes a strict version, which prioritises high precision, and a relaxed version, which focuses on high recall.</S>
			<S sid ="345" ssid = "345">A separate tool is provided to deal with big corpora.</S>
			<S sid ="346" ssid = "346">A variation of the original algorithm, SENTA, has been proposed to deal with non-contiguous expressions (da Silva et al. 1999).</S>
			<S sid ="347" ssid = "347">However, it is computationally costly because it is based on the calculation of all possible n-grams in a sentence, which explodes when going from contiguous to 15 Recommended by the author of the algorithm in personal communication..</S>
			<S sid ="348" ssid = "348">16 Although this can be simulated by concatenating words and POS tags together in order to form.</S>
			<S sid ="349" ssid = "349">a token.</S>
			<S sid ="350" ssid = "350">non-contiguous n-grams.</S>
			<S sid ="351" ssid = "351">Furthermore, there is no freely available implementation.</S>
	</SECTION>
	<SECTION title="Text::NSP: http://search.cpan.org/dist/Text-NSP. " number = "2">
			<S sid ="352" ssid = "1">The N -gram Statistics Package (NSP) is a standard tool for the statistical analysis of n-grams in text files developed and maintained since 2003 (Pedersen et al. 2011; Banerjee and Pedersen 2003).</S>
			<S sid ="353" ssid = "2">It provides Perl scripts for counting n-grams in a text file and calculating AMs, where an n-gram is either a sequence of n contiguous words or n words occurring in a window of w :&gt; n words in a sentence.</S>
			<S sid ="354" ssid = "3">While most of the measures are only applicable to 2-grams, some of them are also extended to 3- and 4-grams, notably the log-likelihood measure.</S>
			<S sid ="355" ssid = "4">The set of available AMs includes robust and theoretically sound measures such as Fischer’s exact test.</S>
			<S sid ="356" ssid = "5">The input to the NSP tool is a corpus and a parameter value fixing the size of the target n-grams.</S>
			<S sid ="357" ssid = "6">The output is a list of types extracted from the corpus along with the counts, which can further be used to calculate the AMs.</S>
			<S sid ="358" ssid = "7">Although there is no direct support to linguistic information such as POS, it is possible to simulate them to some extent using the same workaround as for LocalMaxs.16 The tool allows complex expressions in order to express what counts should be calculated in terms of the sub-n-grams contained in a given n-gram.</S>
	</SECTION>
	<SECTION title="UCS: http://www.collocations.de/software.html. " number = "3">
			<S sid ="359" ssid = "1">The UCS toolkit provides a large set of sophisticated AMs, in addition to other mathematical procedures like dispersion test, frequency distribution models and evaluation methods.</S>
			<S sid ="360" ssid = "2">It was developed in Perl and uses the R statistics package.</S>
			<S sid ="361" ssid = "3">UCS focuses on high accuracy calculations for 2-gram AMs, but, unlike the other approaches, it does not properly perform MWE acquisition.</S>
			<S sid ="362" ssid = "4">Instead of a corpus, it receives a list of candidates and their respective counts, relying on external tools for corpus preprocessing and candidate extraction.</S>
			<S sid ="363" ssid = "5">Then, it calculates the measures and ranks the candidates.</S>
			<S sid ="364" ssid = "6">Therefore, the question about contiguous n-grams or support of linguistic filters is not relevant for UCS.</S>
			<S sid ="365" ssid = "7">4.</S>
			<S sid ="366" ssid = "8">jMWE: projects.csail.mit.edu/jmwe The jMWE tool (Kulkarni and Finlayson 2011) is aimed at dictionary-based in-context MWE token identification in running text, which makes it quite different from extraction tools.</S>
			<S sid ="367" ssid = "9">It is available in the form of a Java library, and expects a corpus as input, possibly annotated with lemmas and parts of speech.</S>
			<S sid ="368" ssid = "10">In addition, it requires an initial dictionary of valid known MWEs.</S>
			<S sid ="369" ssid = "11">The system then looks for instances (occurrences) in the corpus of the MWEs included in its internal dictionary.</S>
			<S sid ="370" ssid = "12">It does not perform any automatic discovery of new expressions, thus the quality of the output heavily depends on the availability of MWE dictionaries.</S>
			<S sid ="371" ssid = "13">While jMWE is not language independent, it can be configured and straightforwardly adapted to other languages for which a suitable dictionary is available.</S>
			<S sid ="372" ssid = "14">The system allows quite powerful instance search, similar to multilevel regular expressions.</S>
			<S sid ="373" ssid = "15">It is possible to deal with non-contiguous expressions and to apply successive filters on the output.</S>
			<S sid ="374" ssid = "16">jMWE also provides heuristics for disambiguating nested compounds.</S>
			<S sid ="375" ssid = "17">On the other hand, it is not possible to express constraints based on syntax, nor to apply AMs in order to remove words that co-occur by chance.</S>
			<S sid ="376" ssid = "18">5.</S>
			<S sid ="377" ssid = "19">Varro: http://sourceforge.net/projects/varro/.</S>
			<S sid ="378" ssid = "20">This tool is not specifically aimed at MWE acquisition, but rather at finding regularities in treebanks (Martens 2010).</S>
			<S sid ="379" ssid = "21">It implements an optimised version of the Apriori algorithm with many adaptations that allow for the efficient and compact representation of tree structures.</S>
			<S sid ="380" ssid = "22">Statistical scores based on description length gain have been proposed to rank regular subtrees returned by the tool, thus helping in the acquisition of MWEs (Martens and Vandeghinste 2010).</S>
			<S sid ="381" ssid = "23">In contrast with the preceding tools, the Varro toolkit is not based on word sequences, but it requires syntactically analysed corpora as input.</S>
			<S sid ="382" ssid = "24">It is thus well suited for the extraction of flexible expressions such as idioms, formulaic phrases, “true” collocations and verbal expressions.</S>
			<S sid ="383" ssid = "25">There are also numerous freely available web services and downloadable tools for automatic term extraction.</S>
			<S sid ="384" ssid = "26">These tools are generally language dependent, having versions for major European languages like English, Spanish, French and Italian.</S>
			<S sid ="385" ssid = "27">Although multiword terms are included in our definition of MWE, these tools are not appropriate for general-purpose extraction of expressions in everyday language.</S>
			<S sid ="386" ssid = "28">Examples of such tools are TermoStat,17 AntConc18 and TerMine.19 The Wikipedia page on terminology extraction20 lists many other freely available tools.</S>
			<S sid ="387" ssid = "29">The methodological framework introduced in the present work has also been implemented in a freely available tool, the mwetoolkit.21 This tool is described in detail in Chap.</S>
			<S sid ="388" ssid = "30">5.</S>
			<S sid ="389" ssid = "31">3.2.3.2 Commercial Tools There are numerous commercialised systems for automatic terminology extraction from specialised texts.</S>
			<S sid ="390" ssid = "32">As a great part of terminology is multiword, this kind of software performs MWE acquisition at some point.</S>
			<S sid ="391" ssid = "33">Déjean et al.</S>
			<S sid ="392" ssid = "34">(2002), for example, describe a method developed at Xerox that uses morphosyntactic patterns for monolingual term recognition.</S>
			<S sid ="393" ssid = "35">Afterwards, they perform automatic alignment and extract English–German terminology, reaching an F-measure of around 80 %.</S>
			<S sid ="394" ssid = "36">This kind of technique has certainly been integrated into their Xerox Terminology Suite (XTS).</S>
			<S sid ="395" ssid = "37">This software is not commercialised any more, since it has been 17 http://olst.ling.umontreal.ca/~drouinp/termostat_web/ 18 http://www.antlab.sci.waseda.ac.jp/software.html 19 http://www.nactem.ac.uk/software/termine/ 20 http://en.wikipedia.org/wiki/Terminology_extraction 21 http://mwetoolkit.sourceforge.net acquired by the text mining company Temis.22 Nowadays, it has become part of the LuxidQR information extraction package.23 Another large company which developed a tool for terminology extraction is Yahoo!.</S>
			<S sid ="396" ssid = "38">Their term extraction service is freely available for research and personal purposes, limited to 5,000 queries per day per IP address.24 However, this service is limited to short English texts and is probably based on term dictionaries and gazetteers.</S>
			<S sid ="397" ssid = "39">The Fips parser, developed at the University of Geneva, has been used for collocation extraction in several languages (Seretan and Wehrli 2009).</S>
			<S sid ="398" ssid = "40">Even though it is academic research, the collocation extraction tool FipsCo, based on Fips, is not freely available.</S>
			<S sid ="399" ssid = "41">The tool is able to extract collocations from monolingual corpora in English, French, Spanish and Italian, and there is a version for Greek (Michou and Seretan 2009).</S>
			<S sid ="400" ssid = "42">The tool has been used in MT experiments, suggesting that it is able to extract bilingual collocations from word-aligned parallel corpora.</S>
			<S sid ="401" ssid = "43">Although the system itself is not free, its visualisation tool, FipsCoView,25 is freely available as a web interface (Seretan and Wehrli 2011).</S>
			<S sid ="402" ssid = "44">Translation memory software may use MWEs as basic segments to retrieve.</S>
			<S sid ="403" ssid = "45">Indeed, MWEs are somehow in-between sentences and words.</S>
			<S sid ="404" ssid = "46">On the one hand, the retrieval of simple words in a hypothetical translation memory would be of little use.</S>
			<S sid ="405" ssid = "47">The number of possible translations for a word out of its context is potentially large and additional information is required to choose among the options.</S>
			<S sid ="406" ssid = "48">Therefore, it would lack precision.</S>
			<S sid ="407" ssid = "49">On the other hand, the retrieval of whole sentences would be highly precise, but an extremely large translation memory would be required in order to obtain reasonable recall.</S>
			<S sid ="408" ssid = "50">If the memory of previously translated segments is small, only from time to time (and with some luck) a sentence will be retrieved.</S>
			<S sid ="409" ssid = "51">Many sentences containing part of the translation would be useful, but will be ignored by a sentence-based exact match system.One example of system performing bilingual MWE extraction is Similis,26 previ ously commercialised by Lingua et Machina and now freely available.</S>
			<S sid ="410" ssid = "52">According to the official website, “Similis [...]</S>
			<S sid ="411" ssid = "53">includes a linguistic analysis engine, uses chunk technology to break down segments into intelligent terminological groups (chunks), and automatically generates specific glossaries.” The technique implemented in the system is an evolution of the one described in Planas and Furuse (2000).</S>
			<S sid ="412" ssid = "54">In this article, the authors describe a clever technique for retrieving similar segments in the source language and their correspondences in the target language.</S>
			<S sid ="413" ssid = "55">Their approach applies a dynamic programming algorithm on a multi-layered structure where sentences are represented as a sequence of surface forms, lemmas and parts 22 http://www.temis.com/ 23 http://www.temis.com/index.php?id=201&amp;selt=1 24 http://developer.yahoo.com/search/content/V1/termExtraction.html 25 http://129.194.38.128:81/FipsCoView 26 http://similis.org/ of speech.</S>
			<S sid ="414" ssid = "56">The combination of the matchings in these three layers allows for a good balance between precision and recall for the retrieval of bilingual segments.</S>
			<S sid ="415" ssid = "57">3.3 Other Tasks Related to MWE Processing.</S>
			<S sid ="416" ssid = "58">Given that MWE acquisition is our main concern, the whole Sect.</S>
			<S sid ="417" ssid = "59">3.2 is dedicated to a detailed review of the state of the art.</S>
			<S sid ="418" ssid = "60">Here, we overview the state of the art in the other tasks involved in MWE treatment, according to the classification of MWE tasks, namely interpretation (Sect.</S>
			<S sid ="419" ssid = "61">3.3.1), disambiguation (Sect.</S>
			<S sid ="420" ssid = "62">3.3.2), representation (Sect.</S>
			<S sid ="421" ssid = "63">3.3.3) and application (Sect.</S>
			<S sid ="422" ssid = "64">3.3.4).</S>
			<S sid ="423" ssid = "65">3.3.1 Interpretation The interpretation and disambiguation of several types of MWEs are the focus of a large body of literature, specially in the computational semantics community.</S>
			<S sid ="424" ssid = "66">Both can be modelled as classification tasks, so that machine learning algorithms are often employed.</S>
			<S sid ="425" ssid = "67">Therefore, it is possible to distinguish supervised from unsupervised approaches.</S>
			<S sid ="426" ssid = "68">In the former, a large effort is usually dedicated to the annotation of a data set that is subsequently used to build classifiers.</S>
			<S sid ="427" ssid = "69">In the latter, the class attribution is made based on thresholds or rules directly applied to data features.</S>
			<S sid ="428" ssid = "70">Like for most solutions based on machine learning, supervised methods outperform unsupervised methods.</S>
			<S sid ="429" ssid = "71">However, unsupervised methods may sometimes perform as well as supervised methods when they are applied on very large corpora like, for instance, web-based corpora (Keller and Lapata 2003).</S>
			<S sid ="430" ssid = "72">MWE interpretation can be applied on expressions whose meaning does not change too much according to their occurrence contexts, like compound nouns and some specific types of phrasal verbs and support verb constructions.</S>
			<S sid ="431" ssid = "73">However, it is not suitable to interpret ambiguous expressions such as phrasal verbs (look up a word vs look up to the sky) and idioms (my grandfather kicked the bucket vs the cleaning lady accidentally kicked the bucket).</S>
			<S sid ="432" ssid = "74">These are explored in MWE disambiguation tasks (see Sect.</S>
			<S sid ="433" ssid = "75">3.3.2).</S>
			<S sid ="434" ssid = "76">Noun compounds (traffic light, nuclear transcription factor), on the other hand, are rarely ambiguous and their interpretation has been an active research area.</S>
			<S sid ="435" ssid = "77">We distinguish two types of noun compound interpretation: syntactic and semantic.</S>
			<S sid ="436" ssid = "78">The syntactic interpretation has been explored by Nicholson and Baldwin (2006), who distinguish three syntactic relations in noun–noun compounds: subject (product replacement), direct object (stress avoidance) and prepositional object (side show ! show on the side).</S>
			<S sid ="437" ssid = "79">For compounds in which the second noun is a nominalisation,27 they used the inflections of the corresponding verb to generate paraphrases that were looked up in Google.</S>
			<S sid ="438" ssid = "80">The paraphrases and additional features were fed into a nearest-neighbour classifier, but the results failed to improve over the state of the art.</S>
			<S sid ="439" ssid = "81">Three-word or longer noun compounds like liver cell line and liver cell antibody require syntactic interpretation of the constituent hierarchy.</S>
			<S sid ="440" ssid = "82">That is, one needs to distinguish left bracketing like in (liver cell) antibody from right bracketing like in liver (cell line).</S>
			<S sid ="441" ssid = "83">Therefore, Nakov and Hearst (2005) compare two models, based on adjacency and on dependency.</S>
			<S sid ="442" ssid = "84">They use a set of heuristics to generate surface- level paraphrases and then use search engine counts to estimate model probabilities.</S>
			<S sid ="443" ssid = "85">They obtain sizeable improvements over state of the art on a set of biomedical compounds.</S>
			<S sid ="444" ssid = "86">One of the most challenging interpretation problems is the semantic interpretation of the relations involved in noun compounds.</S>
			<S sid ="445" ssid = "87">The goal is to assign to each noun compound one (or several) tags that describe the semantic relation between the two nouns.</S>
			<S sid ="446" ssid = "88">Nakov and Hearst (2008) try to solve this task using a methodology similar to the one they employed for syntactic interpretation.</S>
			<S sid ="447" ssid = "89">First, they generate a large number of paraphrases involving verbs related to the semantic classes (e.g., causes, implies, generates for relation CAUSE) and the relative that.</S>
			<S sid ="448" ssid = "90">Then, they retrieve web counts for the paraphrases and assign the classes with maximal probability according to the corresponding paraphrases.</S>
			<S sid ="449" ssid = "91">Their method is completely unsupervised.</S>
			<S sid ="450" ssid = "92">The resource developed in their work, containing noun compounds and corresponding features, is freely available on the MWE community website (Nakov 2008b).</S>
			<S sid ="451" ssid = "93">Kim and Nakov (2011) revisited the problem, this time using a combination of data bootstrapping and web counts.</S>
			<S sid ="452" ssid = "94">The main difference is that they generated paraphrases not based on surface forms but on parse trees, thus obtaining more accurate results.</S>
			<S sid ="453" ssid = "95">A related method is proposed and evaluated by Kim and Baldwin (2013).</S>
			<S sid ="454" ssid = "96">Paraphrases can be used not only as means but also as ends.</S>
			<S sid ="455" ssid = "97">That is, they may be the actual representation of semantic classes instead of a set of (somehow arbitrary) abstract tags.</S>
			<S sid ="456" ssid = "98">The representation of semantic classes for noun–noun relations is discussed in depth by Girju et al.</S>
			<S sid ="457" ssid = "99">(2005), who compare Lauer’s eight prepositional tags with a proposed classification using 35 abstract tags.</S>
			<S sid ="458" ssid = "100">Moreover, they annotate a corpus sample using both schemes and investigate the correspondences between them.</S>
			<S sid ="459" ssid = "101">In addition, paraphrases can be used, for instance, in order to artificially generate new data for training MT systems (Nakov 2008a).</S>
			<S sid ="460" ssid = "102">Lapata (2002) focuses on the interpretation of noun compounds involving nominalisations.</S>
			<S sid ="461" ssid = "103">She reformulates noun compound interpretation as a disambiguation task, recreating missing evidence from corpus.</S>
			<S sid ="462" ssid = "104">She extracts the counts of the nouns and of the related verb from the BNC, and then uses them as features in a supervised machine learning tool that automatically learns association rules.</S>
			<S sid ="463" ssid = "105">She 27 A noun derived from a verb, like replacement is a nominalisation of the verb replace.</S>
			<S sid ="464" ssid = "106">also discusses and evaluates several smoothing techniques that help obtaining more realistic counts.</S>
			<S sid ="465" ssid = "107">Keller and Lapata (2003) used this task as one of their case studies in order to investigate the use of web counts in NLP disambiguation tasks.</S>
			<S sid ="466" ssid = "108">Latent semantic analysis has also been employed for the semantic classification of noun–noun compounds (Baldwin et al. 2003).</S>
			<S sid ="467" ssid = "109">In order to distinguish compositional from idiomatic constructions, the authors compare the context vectors of the compound with the context vectors of the individual nouns composing it.</S>
			<S sid ="468" ssid = "110">This approach can be generalised and has also been applied and evaluated on other types of MWEs.</S>
			<S sid ="469" ssid = "111">A similar technique is proposed by Séaghdha and Copestake (2013).</S>
			<S sid ="470" ssid = "112">However, they use string kernels to build more or less lexicalised semantic representations for the words in the compound.</S>
			<S sid ="471" ssid = "113">Then, they use standard composition techniques in order to infer the combined semantics of the compound.</S>
			<S sid ="472" ssid = "114">A comprehensive and detailed revision of the semantic interpretation of noun compounds can be found in Nakov’s Ph.D. thesis (Nakov 2007) and in his later survey article (Nakov 2013).</S>
			<S sid ="473" ssid = "115">Several techniques used in this task are described in the proceedings of SemEval 2010 and 2013, which feature shared tasks on this topic (Hendrickx et al. 2010; Butnariu et al. 2010).</S>
			<S sid ="474" ssid = "116">The Special Issue on noun compounds of the Natural Language Engineering journal (Szpakowicz et al. 2013) presents some advances in this area and includes an article that describes in detail the best Semeval system for noun compound interpretation (Nulty and Costello 2010, 2013).</S>
			<S sid ="475" ssid = "117">Besides noun compounds, other MWE types also require interpretation.</S>
			<S sid ="476" ssid = "118">English phrasal verbs are ambiguous and can be used both idiomatically (look up a word) and literally (look up to the sky).</S>
			<S sid ="477" ssid = "119">However, if we consider only the most usual sense, it is possible to perform type-based interpretation.</S>
			<S sid ="478" ssid = "120">Cook and Stevenson (2006) use support vector machines to classify the meaning of the particle up in English phrasal verbs.</S>
			<S sid ="479" ssid = "121">According to the verb, it can have a sense of vertical, completion, goal or reflexive.</S>
			<S sid ="480" ssid = "122">These are simplified using a 2-way and a 3-way classification.</S>
			<S sid ="481" ssid = "123">The features used are standard syntactic slots of the verb, particle characteristics such as distance from the verb, and word co-occurrences.</S>
			<S sid ="482" ssid = "124">Considering a larger range of constructions, Bannard (2005) investigates the extent to which the components of a phrasal verb contribute their meanings to the interpretation of the whole.</S>
			<S sid ="483" ssid = "125">He models compositionality through an entailment task, for instance, split up H) split?</S>
			<S sid ="484" ssid = "126">In a comparison between pmi, t-score and a newly proposed measure based on context cosine similarity, the latter correlates better with human judgements.</S>
			<S sid ="485" ssid = "127">A similar work is that of McCarthy et al.</S>
			<S sid ="486" ssid = "128">(2003).</S>
			<S sid ="487" ssid = "129">They propose several measures involving an automatically acquired distributional thesaurus in order to estimate the idiomaticity of phrasal verbs.</S>
			<S sid ="488" ssid = "130">Their annotated data set uses a numeric scale from 0 (totally opaque) to 10 (fully compositional).</S>
			<S sid ="489" ssid = "131">They show that the best association measure, mutual information, is less correlated to human judgements than a proposed measure which calculates the number of neighbours with the same particle as the phrasal verb minus the equivalent number of simple neighbours.</S>
			<S sid ="490" ssid = "132">A similar annotation scale has been proposed by Roller et al.</S>
			<S sid ="491" ssid = "133">(2013), who provide a data set with compositionality assessments for German expressions.</S>
			<S sid ="492" ssid = "134">They show that it is important to perform outlier identification and removal to obtain reliable data.</S>
			<S sid ="493" ssid = "135">In general, interpretation results based on human annotation of compositionality must always be carefully analysed, since this is a hard task even for humans.</S>
			<S sid ="494" ssid = "136">Venkatapathy and Joshi (2006) explore the type compositionality of verb–noun pairs.</S>
			<S sid ="495" ssid = "137">They describe the creation of an annotated data set with compositionality judgements ranging from 1 to 6.</S>
			<S sid ="496" ssid = "138">Then, they present seven distinct features to estimate compositionality which are further combined using a support vector machine.</S>
			<S sid ="497" ssid = "139">They evaluate the features separately and show that the Spearman correlation between the classifier results and human judgements is around 0.448, which is better than all individual features.</S>
			<S sid ="498" ssid = "140">Using a variation of the same data, McCarthy et al.</S>
			<S sid ="499" ssid = "141">(2007) investigate the use of selectional preferences in this task.</S>
			<S sid ="500" ssid = "142">They propose three different algorithms to obtain this information from parsed corpora: two based on Wordnet and one based on an automatically constructed thesaurus.</S>
			<S sid ="501" ssid = "143">They show that the best performance is obtained by combining selectional preferences and a subset of Venkatapathy and Joshi’s features through a support vector machine.</S>
			<S sid ="502" ssid = "144">3.3.2 Disambiguation Recall that the disambiguation of MWEs is analogous to their interpretation, except that they are considered together with the context in which they appear (sentences).</S>
			<S sid ="503" ssid = "145">Nicholson and Baldwin (2008) present a data set for noun–noun compound disambiguation where a large set of sentences has been manually annotated with syntactic and semantic information about the compounds contained in it.</S>
			<S sid ="504" ssid = "146">Girju et al.</S>
			<S sid ="505" ssid = "147">(2005) investigate methods for their disambiguation.</S>
			<S sid ="506" ssid = "148">They perform a separate analysis of two- and three-noun compounds, annotating their semantics according to two tagging schemes in a training set of around 3K sentences.</S>
			<S sid ="507" ssid = "149">In addition to a detailed analysis of the coverage and correspondences between the tagging schemes, they apply several supervised learning techniques.</S>
			<S sid ="508" ssid = "150">Like for the syntactic disambiguation of three-word compounds, they also employ classifiers.</S>
			<S sid ="509" ssid = "151">They achieves an accuracy of 83.10 % by using as features (a) the top three WordNet synsets for each noun, (b) derivationally related forms and (c) a flag telling whether the noun is a nominalisation.</S>
			<S sid ="510" ssid = "152">Whereas, for MWE interpretation, the majority of publications concerns noun compounds, when it comes to disambiguation a large number of MWE types has been studied.</S>
			<S sid ="511" ssid = "153">However, English still predominates.</S>
			<S sid ="512" ssid = "154">One of the rare works on a language different from English concerns the interpretation of German preposition– noun–verb triples (Fritzinger et al. 2010).</S>
			<S sid ="513" ssid = "155">Constructions like in Gang kommen have both a literal interpretation as to reach the hallway (in den Gang kommen), but also idiomatic interpretations as to be set in motion (in Gang kommen) and to get organised (in die Gänge kommen).</S>
			<S sid ="514" ssid = "156">They manually analysed a large set of such constructions retrieved by a parser, classifying them as either literal, compositional or unknown.28 Then, they investigated the correlation between these classes and morphosyntactic characteristics such as determiners, plural and passivisation.</S>
			<S sid ="515" ssid = "157">Light/support verbs in Japanese have also been studied in the past.</S>
			<S sid ="516" ssid = "158">They include sequences like donariageru (shout) and odosiageru (threaten), that is, formed by two lexical units where the verb is usually highly polysemous like ageru (raise).</S>
			<S sid ="517" ssid = "159">Uchiyama et al.</S>
			<S sid ="518" ssid = "160">(2005) propose two disambiguation methods: a statistical approach using a sense inventory, context and a support vector machine; and a rule-based method where the rules were manually defined based on syntax and on the semantics of the first verb.</S>
			<S sid ="519" ssid = "161">The rule-based method (94.6 %) outperforms the statistical method (82.6 %) in terms of accuracy, but the latter obtains a surprisingly high performance given its simplicity.</S>
			<S sid ="520" ssid = "162">The interpretation of expressions of the type verb–noun has also been explored in English.</S>
			<S sid ="521" ssid = "163">Cook et al.</S>
			<S sid ="522" ssid = "164">(2007) explore the idiomaticity of verb–noun pairs, where the noun is the direct object of the verb and may have an idiomatic (make a face) or literal (make a cake) interpretation.</S>
			<S sid ="523" ssid = "165">Their basic hypothesis is that idiomatic uses are syntactically more rigid.</S>
			<S sid ="524" ssid = "166">Thus, they describe a fully unsupervised approach which considers syntactic and context information in order to calculate the similarity with the canonical form of the idiom.</S>
			<S sid ="525" ssid = "167">In their evaluation, they report results comparable to a supervised approach.</S>
			<S sid ="526" ssid = "168">The data set used in their experiments is freely available (Cook et al. 2008).</S>
			<S sid ="527" ssid = "169">Fazly and Stevenson (2007) propose a more fine-grained classification for light verb–noun constructions.</S>
			<S sid ="528" ssid = "170">They use a supervised learning strategy based on decision trees in order to perform a 4-way semantic disambiguation.</S>
			<S sid ="529" ssid = "171">In their scheme, a light verb may be used with its literal meaning (make a cake), with its abstract meaning (make a living), in light-verb constructions (make a decision) or idiomatically (make a face).</S>
			<S sid ="530" ssid = "172">These classes are a mix of syntactic and semantic characteristics and could arguably be improved using more systematic criteria.</S>
			<S sid ="531" ssid = "173">Even though they perform type-based annotation of their data sets, this work can be considered as disambiguation because the noun is the context used to disambiguate the semantics of a closed set of polysemous light verbs.</S>
			<S sid ="532" ssid = "174">Considering a random baseline with 25 % accuracy, they obtain an overall accuracy of 58.3 %.</S>
			<S sid ="533" ssid = "175">F-measure varies according to the classe: abstract constructions are harder to classify (46 %) than light verb constructions (68 %).</S>
			<S sid ="534" ssid = "176">3.3.3 Representation The lexical representation of MWEs was one of the main goals of the MWE project at Stanford, and has for a long time haunted lexicographers in the compilation of lexical resources.</S>
			<S sid ="535" ssid = "177">Most NLP applications contain at least a small amount of 28 The context unit used for annotation was the sentence.</S>
			<S sid ="536" ssid = "178">However, due to anaphora, sometimes it.</S>
			<S sid ="537" ssid = "179">was impossible to know the intended meaning without looking at neighbour sentences.</S>
			<S sid ="538" ssid = "180">MWE entries, specially closed-class expressions.</S>
			<S sid ="539" ssid = "181">The Stanford parser, for instance, contains a list of several dozens of 2-word and 3-word conjunctions.</S>
			<S sid ="540" ssid = "182">However, when it comes to open-class expressions, this coverage is too limited and ways to efficiently represent MWEs in computational lexicons are required.</S>
			<S sid ="541" ssid = "183">Sag et al.</S>
			<S sid ="542" ssid = "184">(2002) proposed two approaches: words-with-spaces and compositional.</S>
			<S sid ="543" ssid = "185">However, between these extremes of the compositionality spectrum, there are some other possibilities, sometimes explored in related work.</S>
			<S sid ="544" ssid = "186">Laporte and Voyatzi (2008), for instance, describe a dictionary containing 6,800 French adverbial expressions like de nos jours (nowadays).</S>
			<S sid ="545" ssid = "187">A set of 15 flat sequences of parts of speech is used to describe the morphosyntactic pattern of each entry using the lexicon–grammar format.</S>
			<S sid ="546" ssid = "188">Gralin´ ski et al.</S>
			<S sid ="547" ssid = "189">(2010) present a qualitative and quantitative comparison between two structured representations for Polish MWEs: Multiflex and POLENG.</S>
			<S sid ="548" ssid = "190">While the former is designed to be generic and language independent, the latter has a more implicit structure aimed at specific applications.</S>
			<S sid ="549" ssid = "191">The authors focus on nominal compounds and analyse the power of each formalism to incorporate morphological inflection rules such as case, gender and number agreement.</S>
			<S sid ="550" ssid = "192">They also measure the time taken by one expert and two novice lexicographers to encode new MWEs.</S>
			<S sid ="551" ssid = "193">Multiflex does not allow the description of non-contiguous units nor units containing slots and it takes much longer for lexicographers to learn and use it.</S>
			<S sid ="552" ssid = "194">POLENG offers a complementary approach, allowing a faster description of MWEs including non-contiguous ones.</S>
			<S sid ="553" ssid = "195">A more corpus-based representation has been proposed for the representation of entries in the Dutch electronic lexicon of MWEs (Grégoire 2007, 2010).</S>
			<S sid ="554" ssid = "196">She uses an equivalence class method that groups similar expressions according to their syntactic characteristics.</S>
			<S sid ="555" ssid = "197">In addition to numbers of occurrences and examples, each entry contains a link to a pattern that describes the syntactic behaviour of the expression.</S>
			<S sid ="556" ssid = "198">This description is quite practical, as the lexicon is aimed for NLP systems such as the Alpino parser and Rosetta MT system.</S>
			<S sid ="557" ssid = "199">Izumi et al.</S>
			<S sid ="558" ssid = "200">(2010) suggest a rule-based method to normalise Japanese functional expressions in order to optimise their representation.</S>
			<S sid ="559" ssid = "201">They consider two separate problems: the insertion of omitted parts and the removal of satellite parts that do not contribute much to the meaning of the sentence.</S>
			<S sid ="560" ssid = "202">In a comparison with manually generated paraphrases, they obtain a precision of 77 %.</S>
			<S sid ="561" ssid = "203">If such normalised representation are adopted in the lexicon, the same paraphrasing rules can be applied to running text in order to align it with expressions contained in the lexicon.</S>
			<S sid ="562" ssid = "204">The use of tree-rewriting grammars for describing MWEs is proposed by Schuler and Joshi (2011).</S>
			<S sid ="563" ssid = "205">They provide arguments and formal proof that this formalism is adequate to represent non-fixed expressions such as raise X to the Yth power.</S>
			<S sid ="564" ssid = "206">The generalisation of their approach to other types of expressions, however, remains to be demonstrated.</S>
			<S sid ="565" ssid = "207">Finally, concerning the hierarchical structure among MWEs, SanJuan et al.</S>
			<S sid ="566" ssid = "208">(2005) explore three strategies (lexical inclusion, Wordnet similarity and clustering) to organise a set of multiword terms manually extracted from the Genia corpus.</S>
			<S sid ="567" ssid = "209">This kind of representation can be very useful to include extracted expressions in more sophisticated concept nets and ontologies.</S>
			<S sid ="568" ssid = "210">When it comes to bilingual and multilingual dictionaries, the problem becomes more complex since it is necessary to represent not only the internal structure of the entries but also cross-language links at global and local levels.</S>
			<S sid ="569" ssid = "211">To the best of our knowledge, there is little research concerning this problem.</S>
			<S sid ="570" ssid = "212">Section 3.3.4.4 contains a discussion on the representation of MWEs in MT systems.</S>
			<S sid ="571" ssid = "213">In short, due to the modest amount of research in this area and to the complexity of the problem, a model for the efficient lexical representation of MWEs in general remains an open problem.</S>
			<S sid ="572" ssid = "214">3.3.4 Applications A list of potential NLP applications where MWEs are relevant was introduced in Sect.</S>
			<S sid ="573" ssid = "215">1.1.2.</S>
			<S sid ="574" ssid = "216">Here, we provide a summary of these target applications for which concrete results have been obtained.</S>
			<S sid ="575" ssid = "217">Many results presented here concern pilot studies and techniques as simple as joining contiguous MWE components with an underscore character as a preprocessing step.</S>
			<S sid ="576" ssid = "218">From all the MWE tasks discussed in this section, application is by far the one with the least amount of published results.</S>
			<S sid ="577" ssid = "219">3.3.4.1 Syntactic Analysis A small set of fixed MWEs like conjunctions are represented in most existing parsers, chunkers and POS taggers.</S>
			<S sid ="578" ssid = "220">However, the further insertion of additional multiword entries can improve the coverage of the analysis, as more complex MWEs like noun compounds and verbal expressions are valuable information for syntactic disambiguation.</S>
			<S sid ="579" ssid = "221">Concerning POS tagging, Constant and Sigogne (2011) present an evaluation on French.</S>
			<S sid ="580" ssid = "222">They assign special tags to words corresponding to the beginning and to the ending of multiword units.</S>
			<S sid ="581" ssid = "223">Using a model based on conditional random fields, they learn the MWE-aware tagger from a corpus in which the training data was automatically annotated with entries coming from several lexica containing compounds and proper nouns.</S>
			<S sid ="582" ssid = "224">This technique obtains 97.7 % accuracy, improving considerably over standard taggers like TreeTagger and TnT.</S>
			<S sid ="583" ssid = "225">They also compare this strategy with the integration of the same lexicons into a parser trained using a probabilistic context-free grammar with latent annotations (PCFG-LA).</S>
			<S sid ="584" ssid = "226">Their results show that MWE recognition and parsing quality improve with both approaches (Constant et al. 2013).</S>
			<S sid ="585" ssid = "227">Korkontzelos and Manandhar (2010) obtain impressing improvements by enriching a baseline shallow parser with MWEs.</S>
			<S sid ="586" ssid = "228">Their method simply consists of joining contiguous nominal expressions with an underscore prior to parsing.</S>
			<S sid ="587" ssid = "229">This makes the system treat them as unknown tokens and assign them a parse based on the context.</S>
			<S sid ="588" ssid = "230">They analyse a set of 118 2-word MWEs from WordNet, classifying them by POS sequences and by compositionality.</S>
			<S sid ="589" ssid = "231">They conclude that, in all cases, the accuracy of the parses was improved, specially for non-compositional adjective–noun pairs, for which the substantial improvements ranged from 15.32 to 19.67 %.</S>
			<S sid ="590" ssid = "232">As for deep parsing, Zhang and Kordoni (2006) extended the lexicon of an English HPSG parser with 373 MWE entries represented as words-with-spaces.</S>
			<S sid ="591" ssid = "233">They obtained a significant increase in the coverage of the grammar, from 4.3 to 18.7 %.</S>
			<S sid ="592" ssid = "234">Using a compositional representation, Villavicencio et al.</S>
			<S sid ="593" ssid = "235">(2007) added 21 new MWEs to the same parser, obtaining an increase in the grammar coverage from 7.1 to 22.7 %, without degrading accuracy.</S>
			<S sid ="594" ssid = "236">However, MWEs do not always improve the performance of the parser, as shown by Hogan et al.</S>
			<S sid ="595" ssid = "237">(2011).</S>
			<S sid ="596" ssid = "238">They try to include a set of named entities in their parsing system, replacing them by placeholders.</S>
			<S sid ="597" ssid = "239">However, they did not obtain significant improvements over the baseline, even when tuning count thresholds.</S>
			<S sid ="598" ssid = "240">The use of lexical association measures to model collocational behaviour in dependency parsing has been investigated by Mirroshandel et al.</S>
			<S sid ="599" ssid = "241">(2012).</S>
			<S sid ="600" ssid = "242">They enrich the dependency relations in the parsing model, learnt from the treebank, with pairs collected from a very large parsed corpus.</S>
			<S sid ="601" ssid = "243">Their results show significant improvements in parsing accuracy for specific syntactic relations.</S>
			<S sid ="602" ssid = "244">As far as we know, the English and Italian parser Fips is one of the few systems dealing with variable MWEs (Wehrli et al. 2010).</S>
			<S sid ="603" ssid = "245">Its approach is more sophisticated than words-with-spaces, as it dynamically identifies expressions at the same time as it constructs the parse tree.</S>
			<S sid ="604" ssid = "246">This technique performs better than post-processing the trees after they are produced.</S>
			<S sid ="605" ssid = "247">The authors demonstrate that MWEs are not a “pain in the neck” but actually a valuable information to reduce syntactic ambiguity.</S>
			<S sid ="606" ssid = "248">3.3.4.2 Word Sense Disambiguation Given an occurrence of a polysemous word, word sense disambiguation consists of picking up a single sense among those listed in an inventory.</S>
			<S sid ="607" ssid = "249">For example, the verb fire can mean make somebody lose his/her job, pull the trigger of a gun, or make something burn.</S>
			<S sid ="608" ssid = "250">The sentence in which the verb occurs will determine which of these senses is intended.</S>
			<S sid ="609" ssid = "251">Although context information is used, MWEs are generally ignored in WSD tasks.</S>
			<S sid ="610" ssid = "252">As a consequence, not only the correct sense will be ignored but also wrong senses will be inferred for the individual words.</S>
			<S sid ="611" ssid = "253">For example, in Wordnet, none of the senses of voice and of mail indicates that voice mail means system that records messages on a telephone when nobody answers.</S>
			<S sid ="612" ssid = "254">As exemplified by Finlayson and Kulkarni (2011), while the word voice has 11 senses and the word mail has 5, the expression voice mail only has 1.</S>
			<S sid ="613" ssid = "255">They show that, in Wordnet 1.6, the average polysemy of MWEs is of 1.07 synsets, versus 1.53 for simple words.</S>
			<S sid ="614" ssid = "256">To the best of our knowledge, their work is the first to report a considerable improvement on word sense disambiguation performance due to the detection of MWEs.</S>
			<S sid ="615" ssid = "257">Despite its simplicity, their method reaches an improvement of 5 F-measure points given lower and upper bounds of 3.3 and 6.1.</S>
			<S sid ="616" ssid = "258">Bungum et al.</S>
			<S sid ="617" ssid = "259">(2013) perform collocation identification prior to translation in order to improve the quality of cross-lingual WSD.</S>
			<S sid ="618" ssid = "260">They argue that, while the coverage of the method depends on the quality of the collocation dictionaries, it helps improving precision.</S>
			<S sid ="619" ssid = "261">Thus, the use of even simple MWE resources like monolingual lists can help in a complex task like cross-lingual WSD.</S>
			<S sid ="620" ssid = "262">3.3.4.3 Information Retrieval (IR) Let us consider a simplified IR system, modelling documents as bags of words and not keeping track of co-occurrences.</S>
			<S sid ="621" ssid = "263">For instance, if a document contains the term rock star, it will probably be retrieved as an answer to queries on geology (rock) and astronomy (star).</S>
			<S sid ="622" ssid = "264">If this MWE was represented as a unit in the index of the system, the precision of the retrieved documents could increase.</S>
			<S sid ="623" ssid = "265">Most current IR systems allow more sophisticated queries to be expressed through quotes and wildcards.</S>
			<S sid ="624" ssid = "266">However, representing only relevant MWEs instead of all possible n-grams in the documents could speed up the searches.</S>
			<S sid ="625" ssid = "267">Joining the words of MWEs before indexation is a simple idea that was put in practice by Acosta et al.</S>
			<S sid ="626" ssid = "268">(2011).</S>
			<S sid ="627" ssid = "269">They tested the impact of a large set of automatically and manually acquired MWE dictionaries on standard IR test sets from the CLEF campaign.</S>
			<S sid ="628" ssid = "270">Their results show that there is a gain in mean average precision when MWEs are tokenised as single words.</S>
			<S sid ="629" ssid = "271">Choosing the appropriate granularity for units to be indexed can be complicated in languages like Chinese, which do not use spaces to separate words.</S>
			<S sid ="630" ssid = "272">In this case, a prior phase of segmentation generally takes place before traditional IR indexation.</S>
			<S sid ="631" ssid = "273">Xu et al.</S>
			<S sid ="632" ssid = "274">(2010) propose a new measure for the tightness of 4-character sequences, as well as three procedures for word segmentation based on this measure.</S>
			<S sid ="633" ssid = "275">Then, they compare a standard segmentation tool with their methods in an IR system.</S>
			<S sid ="634" ssid = "276">They show that two of their segmentation strategies improve mean average precision on a test set.</S>
			<S sid ="635" ssid = "277">A related task is topic modelling, a popular approach to joint clustering of documents and terms.</S>
			<S sid ="636" ssid = "278">The standard document representation in this task is a bag of words.</S>
			<S sid ="637" ssid = "279">However, as presented by Baldwin (2011), it is possible to consolidate the microlevel document representation with the help of MWEs.</S>
			<S sid ="638" ssid = "280">He argues that recent experimental results demonstrate that linguistically-richer document representations can enhance topic modelling.</S>
			<S sid ="639" ssid = "281">3.3.4.4 Machine Translation In current MT systems, various practical solutions have been implemented.</S>
			<S sid ="640" ssid = "282">The expert MT system ITS-2 handles MWEs at two levels (Wehrli 1998).</S>
			<S sid ="641" ssid = "283">Contiguous compounds are dealt with during lexical analysis and treated as single words in subsequent steps.</S>
			<S sid ="642" ssid = "284">Idiomatic, non-fixed units are treated by the syntax analysis module, requiring a much more sophisticated description.</S>
			<S sid ="643" ssid = "285">Once they are correctly identified, however, their transfer is executed in the same way as regular structures.</S>
			<S sid ="644" ssid = "286">The system implements a more sophisticated approach for non-fixed MWE identification in the syntactic analysis module (Wehrli et al. 2010).</S>
			<S sid ="645" ssid = "287">When evaluated on a data set of English/Italian!French translations, this strategy improved the quality of 10–16 % of a test set of 100 collocations (manual evaluation).</S>
			<S sid ="646" ssid = "288">Haugereid and Bond (2011) enriched the Jaen Japanese–English MT system with MWE rules.</S>
			<S sid ="647" ssid = "289">Jaen is a semantic transfer MT system based on the HPSG parsers JACY and ERG.</S>
			<S sid ="648" ssid = "290">The authors use GIZA++ and Anymalign in order to generate phrase tables from parallel corpora, from which they automatically extract the new transfer rules.</S>
			<S sid ="649" ssid = "291">These rules are then filtered and, when added to the system, improve translation coverage from 19.3 to 20.1% and translation quality from 17.8 to 18.2 % NEVA score – a variant of BLEU).</S>
			<S sid ="650" ssid = "292">Even though the improvements are quite modest, the authors argue that they can be further improved by learning even more rules.</S>
			<S sid ="651" ssid = "293">Morin and Daille (2010) obtain an improvement of 33 % in the French–Japanese translation of MWEs.</S>
			<S sid ="652" ssid = "294">They implement a morphologically-based compositional method for backing-off when there is not enough data in a dictionary to translate a MWE.</S>
			<S sid ="653" ssid = "295">For example, chronic fatigue syndrome can be decomposed as [chronic fatigue] [syndrome], [chronic] [fatigue syndrome] or [chronic] [fatigue] [syndrome].</S>
			<S sid ="654" ssid = "296">Grefenstette (1999) addresses the translation of noun compounds from German and Spanish into English.</S>
			<S sid ="655" ssid = "297">He uses web counts to select translations for com- positional noun compounds, and achieves an impressive accuracy of 0.86–0.87.</S>
			<S sid ="656" ssid = "298">Similarly, Tanaka and Baldwin (2003) compare two shallow translation methods for English–Japanese noun compounds.</S>
			<S sid ="657" ssid = "299">The first one is a static memory-based method where the compound needs to be present in the dictionary in order to be translated correctly.</S>
			<S sid ="658" ssid = "300">The second is a dynamic compositional method in which alternative translations are validated using corpus evidence.</S>
			<S sid ="659" ssid = "301">Their evaluation considers the compounds as test translation units (as opposed to traditional sentence-based evaluation).</S>
			<S sid ="660" ssid = "302">When they combine the two methods, they achieve 95 % coverage and potentially high translation accuracy.</S>
			<S sid ="661" ssid = "303">This method is further refined by the use of a support vector machine model to rank all possible translations (Baldwin and Tanaka 2004).</S>
			<S sid ="662" ssid = "304">The model learns the translation scores based on several features coming from monolingual and bilingual dictionaries and corpora.</S>
			<S sid ="663" ssid = "305">The popular phrase-based models of the Moses SMT toolkit represent MWEs as flat contiguous sequences of words (Koehn et al. 2007).</S>
			<S sid ="664" ssid = "306">Bilingual MWEs are bilingual sequences, called “bi-phrases”, and have several probabilities associated to them.</S>
			<S sid ="665" ssid = "307">Carpuat and Diab (2010) propose two complementary strategies in order to add monolingual MWEs from WordNet into an English–Arabic Moses system.</S>
			<S sid ="666" ssid = "308">The first strategy is a static single-tokenisation that treats MWEs as words-with- spaces.</S>
			<S sid ="667" ssid = "309">The second strategy is dynamic, adding to the translation model a count for the number of MWEs in the source part of the bi-phrase.</S>
			<S sid ="668" ssid = "310">They found that both strategies result in improvement of translation quality, which suggests that Moses bi-phrases alone do not model all MWE information.</S>
			<S sid ="669" ssid = "311">Nakov (2008a) propose another approach for minimizing data sparseness in MT, based on the generation of monolingual paraphrases to augment the training corpus.</S>
			<S sid ="670" ssid = "312">Parse trees are used as the basis for generating paraphrases that are nearly-equivalent semantically (e.g., ban on beef import for beef import ban and vice versa).</S>
			<S sid ="671" ssid = "313">The trees are syntactically transformed by a set of heuristics, looking at noun compounds and related constructions.</S>
			<S sid ="672" ssid = "314">Using Moses’ ancestor, Pharaoh, on an English–Spanish task, this technique generates an improvement equivalent to 33–50 % of that of doubling training data.</S>
			<S sid ="673" ssid = "315">Automatic word alignment can be more challenging when translating from and to morphologically rich languages.</S>
			<S sid ="674" ssid = "316">In German and in Scandinavian languages, for instance, a compound is in fact a single token formed through concatenation of words and special infixes (Hauptbahnhof is the concatenation of Haupt (main), Bahn (railway) and Hof (station)).</S>
			<S sid ="675" ssid = "317">Stymne (2011) develops a fine-grained typology for MT error analysis which includes concatenated definite and compound nouns.</S>
			<S sid ="676" ssid = "318">For definiteness, she makes the source text look more like the target text (or vice versa) during training, thus making the learning less prone to errors by using better word alignments.</S>
			<S sid ="677" ssid = "319">In Stymne (2009), she describes her approach to noun compounds, which she splits into their single word components prior to translation.</S>
			<S sid ="678" ssid = "320">Then, after translation, she applies some post-processing rules like the reordering or merging of the components.</S>
			<S sid ="679" ssid = "321">Pal et al.</S>
			<S sid ="680" ssid = "322">(2010) explore the extension of a Moses English–Bengali system.</S>
			<S sid ="681" ssid = "323">Significant improvements are brought by applying preprocessing steps like single- tokenisation for named entities and compound verbs.</S>
			<S sid ="682" ssid = "324">However, larger improvements (4.59 absolute BLEU points) are observed when using a statistical model for the prior alignment of named entities, allowing for their adequate transliteration.</S>
			<S sid ="683" ssid = "325">The domain adaptation of general-purpose MT systems can also be accomplished with the integration of multiword terms.</S>
			<S sid ="684" ssid = "326">Ren et al.</S>
			<S sid ="685" ssid = "327">(2009) adapt a Chinese–English standard Moses system using three simple techniques: appending the MWE lexicon to the corpus, appending it to the phrase table, and adding a binary feature to the translation model.</S>
			<S sid ="686" ssid = "328">They found significant BLEU improvements over the baseline, especially using the extra feature.</S>
			<S sid ="687" ssid = "329">In translation memory systems such as Similis, the translation unit can be considered as a MWE as it is an intermediary between words and sentences.</S>
			<S sid ="688" ssid = "330">The correspondences of word sequences are automatically learned from the translation memory and expressed in a multi-layer architecture including surface forms, lemmas and parts of speech (Planas and Furuse 2000).</S>
			<S sid ="689" ssid = "331">Hierarchical and tree-based translation systems like Joshua use tree rewriting rules in order to represent the correspondences between source and target structures (Li et al. 2009).</S>
			<S sid ="690" ssid = "332">However, it is difficult to implement special rules for MWEs and to distinguish them from rules that should be applied to ordinary word combinations.</S>
			<S sid ="691" ssid = "333">Promising results in the application of MWE resources such as lexicons and thesauri show that this is a recent and apparently growing topic in the MT community.</S>
			<S sid ="692" ssid = "334">Monti et al.</S>
			<S sid ="693" ssid = "335">(2011) compile a parallel corpus of sentences containing several types of expressions and compare the outputs of rule-based and SMT systems.</S>
			<S sid ="694" ssid = "336">While their discussion provides insightful examples, it does not help quantify the extent to which multiword expressions pose problems to MT systems.</S>
			<S sid ="695" ssid = "337">Moreover, it is not possible to know the exact details of the MT paradigms used in their experiments.</S>
			<S sid ="696" ssid = "338">3.4 Summary 91.</S>
			<S sid ="697" ssid = "339">The proceedings of the 2013 MUMTTT workshop provide some pointers on different approaches for MWE translation (Mitkov et al. 2013).</S>
			<S sid ="698" ssid = "340">Our experiments on the evaluation of automatic MWE translation are presented in Chap.</S>
			<S sid ="699" ssid = "341">7.</S>
			<S sid ="700" ssid = "342">3.4 Summary.</S>
			<S sid ="701" ssid = "343">The underlying hypothesis in MWE acquisition is that words that form an expression will co-occur more often than if they were randomly combined.</S>
			<S sid ="702" ssid = "344">This hypothesis is applied in the design of lexical association measures (AMs) for corpus-based MWE acquisition.</S>
			<S sid ="703" ssid = "345">There are numerous AMs available for MWE acquisition (Evert 2004; Seretan 2008; Pecina 2008).</S>
			<S sid ="704" ssid = "346">For an arbitrary n-gram, we estimate its probability under MLE and scale this estimate by the total number of n-grams in the corpus, obtaining the expected count.</S>
			<S sid ="705" ssid = "347">AMs are generally based on the difference between the expected count and the observed count, like t-score, pointwise mutual information and Dice coefficient.</S>
			<S sid ="706" ssid = "348">More robust and theoretically sound AMs based on contingency tables exist for the special case of 2-grams.</S>
			<S sid ="707" ssid = "349">Examples of such measures are x2 and log-likelihood.</S>
			<S sid ="708" ssid = "350">MWE acquisition comprises identification (in context) and extraction (out of context).</S>
			<S sid ="709" ssid = "351">Monolingual MWE acquisition is generally seen as a two-step process: candidate extraction and candidate filtering.</S>
			<S sid ="710" ssid = "352">In candidate extraction, POS sequences are one of the major approaches, specially for terminology (Justeson and Katz 1995; Daille 2003), but also for noun compounds (Vincze et al. 2011) and verbal expressions (Baldwin 2005).</S>
			<S sid ="711" ssid = "353">When a parser is available, syntactic patterns can be much more precise than POS sequences, specially in the extraction of non- fixed MWEs (Seretan and Wehrli 2009; Seretan 2008).</S>
			<S sid ="712" ssid = "354">Tree substitution grammars (Green et al. 2011) and structural regularities in parsing trees (Martens and Vandeghinste 2010) can also be used in order to learn syntactic MWE models from annotated corpora.</S>
			<S sid ="713" ssid = "355">During candidate filtering, some straightforward procedures are the use of stopword lists and of count thresholds.</S>
			<S sid ="714" ssid = "356">AMs are also widely employed to rank the candidates and keep only those whose association score is above a certain threshold (Evert and Krenn 2005; Pecina 2005).</S>
			<S sid ="715" ssid = "357">Supervised learning methods can be used to build a classifier modelling the optimal weights of several AMs and other features (Ramisch et al. 2008; Pecina 2008).</S>
			<S sid ="716" ssid = "358">As for bilingual acquisition, automatic word alignments can provide lists of MWE candidates by themselves (de Medeiros Caseli et al. 2010).</S>
			<S sid ="717" ssid = "359">Bai et al.</S>
			<S sid ="718" ssid = "360">(2009) present an algorithm capable of mining translations for a given MWE in a parallel aligned corpus.</S>
			<S sid ="719" ssid = "361">The automatic discovery of non-compositional compounds from parallel data has been explored by Melamed (1997).</S>
			<S sid ="720" ssid = "362">The EnglishHindi language pair presents large word order variation, and it has been shown that MWE-based features that model compositionality can help reducing alignment error rate (Venkatapathy and Joshi 2006).</S>
			<S sid ="721" ssid = "363">Zarrieß and Kuhn (2009) used syntactically analysed corpora and GIZA++ alignments to extract verb-object pairs from a German–English parallel corpus.</S>
			<S sid ="722" ssid = "364">Daille et al.</S>
			<S sid ="723" ssid = "365">(2004) performed multiword term extraction from comparable corpora in French and in English, and subsequently used the distances between the context vectors to obtain cross-lingual equivalences.</S>
			<S sid ="724" ssid = "366">The syntactic interpretation of nouns compounds has been explored by Nicholson and Baldwin (2006), who distinguish three syntactic relations in noun– noun compounds: subject, direct object and prepositional object.</S>
			<S sid ="725" ssid = "367">Three- word or longer noun compounds require syntactic interpretation of the constituent hierarchy.</S>
			<S sid ="726" ssid = "368">Nakov and Hearst (2005) compare two models, based on adjacency and on dependency.</S>
			<S sid ="727" ssid = "369">Nakov and Hearst (2008) perform unsupervised semantic interpretation of noun compounds by generating a large number of paraphrases involving verbs related to the semantic classes and then retrieving their web counts.</S>
			<S sid ="728" ssid = "370">Kim and Nakov (2011) used a combination of data bootstrapping and web counts, using paraphrases based on parse trees.</S>
			<S sid ="729" ssid = "371">Cook and Stevenson (2006) use support vector machines to classify the meaning of the particle up in English phrasal verbs.</S>
			<S sid ="730" ssid = "372">Bannard (2005) investigates the extent to which the components of a phrasal verb contribute their meanings to the interpretation of the whole.</S>
			<S sid ="731" ssid = "373">A similar work is that of McCarthy et al.</S>
			<S sid ="732" ssid = "374">(2003), who propose several measures to estimate the idiomaticity of phrasal verbs.</S>
			<S sid ="733" ssid = "375">The disambiguation of MWEs is analogous to their interpretation, except that they are considered together with the context in which they appear.</S>
			<S sid ="734" ssid = "376">Nicholson and Baldwin (2008) present a data set for noun–noun compound disambiguation where a large set of sentences has been manually annotated.</S>
			<S sid ="735" ssid = "377">Girju et al.</S>
			<S sid ="736" ssid = "378">(2005) investigate methods for their disambiguation by applying several supervised learning techniques.</S>
			<S sid ="737" ssid = "379">Fritzinger et al.</S>
			<S sid ="738" ssid = "380">(2010) manually analyse a large set of ambiguous German preposition–noun–verb constructions retrieved by a parser, classifying them as either literal, compositional or unknown.</S>
			<S sid ="739" ssid = "381">Light verbs in Japanese have also been studied by Uchiyama et al.</S>
			<S sid ="740" ssid = "382">(2005), who proposes two disambiguation methods: a statistical approach and a rule-based method.</S>
			<S sid ="741" ssid = "383">Cook et al.</S>
			<S sid ="742" ssid = "384">(2007) explore the idiomaticity of verb–noun pairs, where the noun is the direct object of the verb and may have an idiomatic (make a face) or literal (make a cake) interpretation.</S>
			<S sid ="743" ssid = "385">Fazly and Stevenson (2007) propose a more fine-grained classification for light verb–noun constructions, using a supervised learning strategy in order to perform a 4-way semantic disambiguation.</S>
			<S sid ="744" ssid = "386">Sag et al.</S>
			<S sid ="745" ssid = "387">(2002) proposed two approaches to represent MWEs in lexicons: words-with-spaces and compositional.</S>
			<S sid ="746" ssid = "388">However, between these extremes of the compositionality spectrum, there are some other possibilities, explored in related work.</S>
			<S sid ="747" ssid = "389">Laporte and Voyatzi (2008) describe a dictionary of French adverbial expressions and their corresponding morphosyntactic patterns in the lexicon– grammar format.</S>
			<S sid ="748" ssid = "390">Gralin´ ski et al.</S>
			<S sid ="749" ssid = "391">(2010) present a qualitative and quantitative comparison between two structured representations, Multiflex and POLENG, for Polish MWEs.</S>
			<S sid ="750" ssid = "392">Grégoire (2007, 2010) uses an equivalence class method that groups similar expressions according to their syntactic characteristics.</S>
			<S sid ="751" ssid = "393">Izumi et al.</S>
			<S sid ="752" ssid = "394">(2010) suggest a rule-based method to normalise Japanese functional expressions in order to optimise their representation.</S>
			<S sid ="753" ssid = "395">Schuler and Joshi (2011) propose the use of tree- rewriting grammars to describe MWEs.</S>
			<S sid ="754" ssid = "396">There are some target applications for which concrete results have been obtained.</S>
			<S sid ="755" ssid = "397">Constant and Sigogne (2011) present promising results for French parsing.</S>
			<S sid ="756" ssid = "398">Korkontzelos and Manandhar (2010) obtain impressing improvements by enriching a baseline shallow parser with MWEs.</S>
			<S sid ="757" ssid = "399">Zhang and Kordoni (2006) and Villavicencio et al.</S>
			<S sid ="758" ssid = "400">(2007) obtain a significant coverage increase by extending the lexicon of an English HPSG parser with MWEs.</S>
			<S sid ="759" ssid = "401">Wehrli et al.</S>
			<S sid ="760" ssid = "402">(2010) demonstrate that MWEs are not a “pain in the neck” but actually a valuable information to reduce syntactic ambiguity.</S>
	</SECTION>
</PAPER>
