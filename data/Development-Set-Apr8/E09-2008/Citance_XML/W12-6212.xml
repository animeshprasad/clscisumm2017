<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">This paper presents the current status of development of a finite state transducer grammar for the verbal-chain transfer module in Matxin, a Rule Based Machine Translation system between Spanish and Basque.</S>
		<S sid ="2" ssid = "2">Due to the distance between Spanish and Basque, the verbal-chain transfer is a very complex module in the overall system.</S>
		<S sid ="3" ssid = "3">The grammar is compiled with foma, an open-source finite- state toolkit, and yields a translation execution time of 2000 verb chains/second.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="4" ssid = "4">This paper presents the current status of development of an FST (Finite State Transducer) grammar we have developed for Matxin, a Machine Translation system between Spanish and Basque.</S>
			<S sid ="5" ssid = "5">Basque is a minority language isolate, and it is likely that an early form of this language was already present in Western Europe before the arrival of the IndoEuropean languages.</S>
			<S sid ="6" ssid = "6">Basque is a highly inflected language with free order of sentence constituents.</S>
			<S sid ="7" ssid = "7">It is an agglutinative language, with a rich flexional morphology.</S>
			<S sid ="8" ssid = "8">Basque is also a so-called ergativeabsolutive language where the subjects of intransitive verbs appear in the absolutive case (which is unmarked), and where the same case is used for the direct object of a transitive verb.</S>
			<S sid ="9" ssid = "9">The subject of the transitive verb (that is, the agent) is marked differently, with the ergative case (in Basque by the suffix -k).</S>
			<S sid ="10" ssid = "10">The presence of this morpheme also triggers main and auxiliary verbal agreement.</S>
			<S sid ="11" ssid = "11">Auxiliary verbs, or ‘periphrastic’ verbs, which accompany most main verbs, agree not only with the subject, but also with the direct object and the indirect object, if present.</S>
			<S sid ="12" ssid = "12">Among European languages, this polypersonal system (multiple verb agreement) is rare, and found only in Basque, some Caucasian languages, and Hungarian.</S>
			<S sid ="13" ssid = "13">The fact that Basque is both a morphologically rich and less-resourced language makes the use of statistical approaches for Machine Translation difficult and raises the need to develop a rule-based architecture which in the future could be combined with statistical techniques.</S>
			<S sid ="14" ssid = "14">The Matxin es-eu (SpanishBasque) MT engine is a classic transfer-based system comprising three main modules: analysis of the Spanish text (based on FreeLing, (Atserias et al., 2006)), transfer, and generation of the Basque target text.</S>
			<S sid ="15" ssid = "15">In the transfer process, lexical transfer is first carried out using a bilingual dictionary coded in the XML format of Apertium dictionary files (.dix) (Forcada et al., 2009), and compiled, using the FST library implemented in the Apertium project (the lt- toolbox library), into a finite-state transducer that can be processed very quickly.</S>
			<S sid ="16" ssid = "16">Following this, structural transfer at the sentence level is performed, and some information is transferred from some chunks1 to others while some chunks may be deleted.</S>
			<S sid ="17" ssid = "17">Finally, the structural trans 1 A chunk is a non-recursive phrase (noun phrase, prepositional phrase, verbal chain, etc.) which expresses a constituent (Abney, 1991; Civit, 2003).</S>
			<S sid ="18" ssid = "18">In our system, chunks play a crucial part in simplifying the translation process, due to the fact that each module works only at a single level, either inside or between chunks.</S>
			<S sid ="19" ssid = "19">65 Proceedings of the 10th International Workshop on Finite State Methods and Natural Language Processing, pages 65–69, Donostia–San Sebastia´n, July 23–25, 2012.</S>
			<S sid ="20" ssid = "20">Qc 2012 Association for Computational Linguistics fer at the verb chunk level is carried out.</S>
			<S sid ="21" ssid = "21">The verbal chunk transfer is a very complex module because of the nature of Spanish and Basque auxiliary verb constructions, and is the main subject of this paper.</S>
			<S sid ="22" ssid = "22">This verb chain transfer module is implemented as a series of ordered replacement rules (Beesley and Karttunen, 2003) using the foma finite-state toolkit (Hulden, 2009).</S>
			<S sid ="23" ssid = "23">In total, the system consists of 166 separate replacement rules that together perform the verb chunk translation.</S>
			<S sid ="24" ssid = "24">In practice, the input is given to the first transducer, after which its output is passed to the second, and so forth, in a cascade.</S>
			<S sid ="25" ssid = "25">Each rule in the system is unambiguous in its output; that is, for each input in a particular step along the verb chain transfer, the transducers never produce multiple outputs (i.e. the transducers in question are functional).</S>
			<S sid ="26" ssid = "26">Some of the rules are joined together with composition, yielding a total of 55 separate transducers.</S>
			<S sid ="27" ssid = "27">In principle, all the rules could be composed together into one monolithic transducer, but in practice the size of the composed transducer is too large to be feasible.</S>
			<S sid ="28" ssid = "28">The choice to combine some transducers while leaving others separate is largely a memory/translation speed tradeoff.</S>
	</SECTION>
	<SECTION title="Spanish and Basque verb features and. " number = "2">
			<S sid ="29" ssid = "1">their translation In the following, we will illustrate some of the main issues in translating Spanish verb chains to Basque.</S>
			<S sid ="30" ssid = "2">Since both languages make frequent use of auxiliary verb constructions, and since periphrastic verb constructions are frequent in Basque, transfer rules can get quite complex in their design.</S>
			<S sid ="31" ssid = "3">For example, in translating the phrase (Yo) compro (una manzana) (I) [PP1CSN00] buy [VMIP1S0] (an [DI0FS0] apple) [NCFS000] we can translate it using the imperfective participle form (erosten) of the verb erosi (to buy), and a transitive auxiliary (dut) which itself contains both subject agreement information (I: 1st sg.)</S>
			<S sid ="32" ssid = "4">and number agreement with the object (an apple: 3rd sg.): (nik) (sagar bat) erosten dut.</S>
			<S sid ="33" ssid = "5">The participle carries information concerning meaning, aspect and tense, whereas the auxiliaries convey information about argument structure, tense and mood.</S>
			<S sid ="34" ssid = "6">Table 1 illustrates the central idea of the verb chunk transfer.</S>
			<S sid ="35" ssid = "7">In the first four examples the form of the transitive auxiliary changes to express agreement with different ergative arguments (the subject of the clause), absolutive arguments (the direct object) and dative arguments (the indirect object).</S>
			<S sid ="36" ssid = "8">In the fifth example the future participle is used.</S>
			<S sid ="37" ssid = "9">The last example shows the translation of a periphrastic construction, in which the the Spanish and the Basque word orders are completely different: this is reflected in the Spanish tengo que-construction (have to) which appears before the main verb, whereas in the Basque, the equivalent (behar) appears after the main verb (erosi).</S>
	</SECTION>
	<SECTION title="The FST grammar. " number = "3">
			<S sid ="38" ssid = "1">We carry out the verbal chunk transfer using finite- state transducers (Alegria et al., 2005).</S>
			<S sid ="39" ssid = "2">The grammar rules take as input the Spanish verbal chunk, perform a number of transformations on the input, and then create and output the verbal chunk for Basque.</S>
			<S sid ="40" ssid = "3">To illustrate the functioning of the grammar, let us consider the following example sentence in Spanish: “Un tribunal ha negado los derechos constitucionales a los presos polticos” (A court has denied constitutional rights to political prisoners).</S>
			<S sid ="41" ssid = "4">The correct translation into Basque given by the system for this example is as follows: Auzitegi batek eskubide konstituzionalak ukatu dizkie preso politikoei.</S>
			<S sid ="42" ssid = "5">Figure 1 shows a detailed overview of how the whole transfer of the verbal chunk is performed for this par ticular example.</S>
			<S sid ="43" ssid = "6">First, the input to the grammar is assumed to be a string containing (separated by the ’&amp;’ symbol) the following information : • the morphological information (using EAGLES-style tags Leech and Wilson (1996)) for all nodes (separated by ’+’ symbol) in the Spanish verbal chunk (haber[VAIP3S0]+negar[VMP00SM]); • the morphological information of the subject ([sub3s]), the direct object ([obj3p]) and the indirect object ([iobj3p]); • the translation of the main verb in Basque (ukatu) and information about its transitivity Sp an is h se nt en ce E n gli sh Ba sq ue tr an sl ati o n (Y o) co m pr o (u na m an za na ) (I) bu y (a n ap pl e) (N ik) (s ag ar ba t) er ost en du t (Y o) co m pr o (m an za na s) (I) bu y (a pp les ) (N ik) (s ag arr ak ) er ost en dit ut (Tu ´ ) co m pr as (m an za na s) (Y ou ) bu y (a pp le s) (Z uk ) (s ag arr ak ) er ost en dit uz u (Y o) (te ) co m pr o (u na m an za na ) (I) bu y (y ou ) (a n ap pl e) (N ik) (z ur i) (s ag ar ba t) er ost en di zu t (Y o) co m pr are ´ (u na m an za na ) (I) wi ll bu y (a n ap pl e) (N ik) (s ag ar ba t) er osi ko du t (Y o) te ng o qu e co m pr ar (m an za na s) (I) m us t bu y (a pp le s) (N ik) (s ag arr ak ) er osi be ha r dit ut Table 1: Examples of translations A court has denied (the) rights constitutional to (the) prisoners political Un tribunal ha negado los derechos constitucionales a los presos políticos Subject Verb Object Indirect Object Input haber[VAIP3S0]+ negar[VMP00SM ] &amp; [sub3s] [obj3p] [iobj3p] &amp; ukatu [DIO] 1.</S>
			<S sid ="44" ssid = "7">Identification.</S>
			<S sid ="45" ssid = "8">of the schema [ SimpleVerbEsType -&gt; ...</S>
			<S sid ="46" ssid = "9">SimpleVerbEuSchema ] haber[VAIP3S0]+negar[VMP00SM] &amp; [sub3s] [obj3p] [iobj3p] &amp; ukatu [DIO] SimpleVerb (main) AspectMain / Aux TenseMood Abs Dat Erg 2.</S>
			<S sid ="47" ssid = "10">Resolution.</S>
			<S sid ="48" ssid = "11">of the values Attrib.</S>
			<S sid ="49" ssid = "12">-&gt; Value || Context AspectM ain -&gt; [perfPart] || ?* VAIP ?* SimpleVerb ?* _ Aux -&gt; edun(aux) || ?* DIO ?* _ TenseMood -&gt; [indPres] || ?* VAIP ?* _ Abs -&gt; [abs3p] || ?* [obj3p] ?* edun(aux) ?* _ Dat -&gt; [dat3p] || ?* [iobj3p] ?* _ Erg -&gt; [erg3s] || ?* V???3S ?* edun(aux) ?* _ niega[VMIP3S0] &amp; [sub3s] [obj3s] [dat3p] &amp; ukatu [DIO] + SimpleVerb (main)[perfPart] / edun(aux) [indPres] [abs3p][dat3p][erg3s] 3.</S>
			<S sid ="50" ssid = "13">Elimination of.</S>
			<S sid ="51" ssid = "14">source information Output ukatu(main)[perf Part] / edun(aux) [indPres] [abs3p][dat3p][e rg3s] uka +tu d +i +zki +e +Ø deny perf.</S>
			<S sid ="52" ssid = "15">ind. trans.</S>
			<S sid ="53" ssid = "16">3rdpl 3rdpl 3rdsg part.</S>
			<S sid ="54" ssid = "17">pres.</S>
			<S sid ="55" ssid = "18">aux.</S>
			<S sid ="56" ssid = "19">abs.</S>
			<S sid ="57" ssid = "20">dat.</S>
			<S sid ="58" ssid = "21">erg.</S>
			<S sid ="59" ssid = "22">Figure 1: Example of the transfer of a verbal chunk.</S>
			<S sid ="60" ssid = "23">([DIO]), indicating a ditransitive construction: haber[VAIP3S0]+negar[VMP00SM] &amp; [sub3s][obj3p][iobj3p] &amp; ukatu[DIO] The grammatical rules are organized into three groups according to the three main steps defined for translating verbal chunks: 1.</S>
			<S sid ="61" ssid = "24">Identification of the Basque verbal chunk.</S>
			<S sid ="62" ssid = "25">schema corresponding to the source verbal chunk.</S>
			<S sid ="63" ssid = "26">There are twelve rules which perform this task, each of which corresponds to one of the following verbal chunks in Spanish: non-conjugated verbs, simple non-periphrastic verbs as well as four different groups reserved for the periphrastic verbs.</S>
			<S sid ="64" ssid = "27">The verbal chunk of the example in figure 1 is a simple non-periphrastic one, and the rule that handles this particular case is as follows: [simpleVerbEsType -&gt; ... simpleVerbEuSchema] When this rule matches the input string representing a simple non-periphrastic verbal chunk (simpleVerbEsType) it adds the corresponding Basque verbal chunk schema (simpleVerbEuSchema) to the end of the input string.</S>
			<S sid ="65" ssid = "28">simpleVerbEsType is a complex automaton that has the definition of the Spanish simple verbs.</S>
			<S sid ="66" ssid = "29">simpleVerbEuSchema is the type of the verbal chunk (SimpleVerb) and an automaton that contains as strings the pattern of elements (separated by the ’/’ symbol) that the corresponding Basque verb chunk will need to have (in this case, the main verb and the auxiliary verb): SimpleVerb (main) AspectMain / Aux TenseMood Abs Dat Erg 2.</S>
			<S sid ="67" ssid = "30">Resolution of the values for the attributes in the.</S>
			<S sid ="68" ssid = "31">Basque schema.</S>
			<S sid ="69" ssid = "32">A total of 150 replacement rules of this type have been written in the grammar.</S>
			<S sid ="70" ssid = "33">Here are some rules that apply to the above example: [AspectMain -&gt; [perfPart] || ?* VAIP ?* SimpleVerb ?* ] [Aux -&gt; edun(aux) || ?* DIO ?* ] [Abs -&gt; [abs3p] || ?* [obj3p] ?* edun(aux) ?* ] 3.</S>
			<S sid ="71" ssid = "34">Elimination of source-language information.</S>
			<S sid ="72" ssid = "35">(4 rules in total).</S>
			<S sid ="73" ssid = "36">The output of the grammar for the example is: ukatu(main)[perfPart] / edun(aux)[indPres][abs3p][dat3p][erg3s ] The first node has the main verb (ukatu) with the perfective participle aspect, and the second one contains the auxiliary verb (edun) with all its morphological information: indicative present and argument structure.</S>
			<S sid ="74" ssid = "37">In the output string, each of the elements contains the information needed by the subsequent syntactic generation and morphological generation phases.</S>
			<S sid ="75" ssid = "38">4 Implementation When the verbal chunk transfer module was first developed, there did not exist any efficient open source tools for the construction of finite state transducers.</S>
			<S sid ="76" ssid = "39">At the time, the XFST -toolkit (Beesley and Karttunen, 2003) was used to produce the earlier versions of the module: this included 25 separate transducers of moderate size, occupying 2,795 kB in total.</S>
			<S sid ="77" ssid = "40">The execution speed was roughly 250 verb chains per second.</S>
			<S sid ="78" ssid = "41">Since Matxin was designed to be open source, we built a simple compiler that converted the XFST rules into regular expressions that could then be applied without FST technology, at the cost of execution speed.</S>
			<S sid ="79" ssid = "42">This verbal chunk transfer module read and applied these regular expressions at a speed of 50 verbal chunks per second.</S>
			<S sid ="80" ssid = "43">In the work presented here, we have reimplemented and expanded the original rules written for XFST with the foma2 toolkit (Hulden, 2009).</S>
			<S sid ="81" ssid = "44">After adapting the grammar and compiling it, the 55 separate transducers occupy 607 kB and operate at roughly 2,000 complete verb chains per second.3 Passing the strings from one transducer to the next in the chain of 55 transducers in accomplished by the depth-first-search transducer chaining functionality available in the foma API.</S>
			<S sid ="82" ssid = "45">2 http://foma.sourceforge.net 3 On a 2.8MHz Intel Core 2 Duo..</S>
	</SECTION>
</PAPER>
